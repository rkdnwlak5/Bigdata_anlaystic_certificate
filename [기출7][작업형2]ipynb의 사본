{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1YvJ384t60gtnxF6_JT1bBW-cSbNVrq5R","timestamp":1733366876501}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["###매우중요 ★★★★★\n","##### id와 pred 같이 제츌하라고 하는 경우에, test 데이터가 100개인데 id가 100개이고 pred가 98개이면 오류가 떠서 제출이 안됨.\n","\n","#####but pred 만 제출하라는 경우 98개여도 제출이 되어 버림 즉) 100개의 값이 나와있는걸 제출해야하는데, id가 없으니 검증이 안되어 그냥 제출되어버림\n","\n","##### 그래서 꼭!!!! pred 만 제출하는 경우에는 반드시 pred의 개수를 shape으로 보는게 정말 꼭꼭꼭 필요함★★★★★"],"metadata":{"id":"dToheaKM9DU9"}},{"cell_type":"markdown","source":["### mart 판매 데이터를 기반으로 판매액을 예측하시오.\n","- 제공된 데이터 목록: mart_train.csv (훈련 데이터), mart_test.csv (평가용 데이터)\n","- 예측할 컬럼: total (총 판매액)\n","학습용 데이터(mart_train.csv)를 이용하여 총 판매액을 예측하는 모델을 만든 후, 이를 평가용 데이터(mart_test.csv)에 적용하여 얻은 예측값을 다음과 같은 형식의 CSV 파일로 생성하시오.\n","- 제출 파일은 다음 한 개의 컬럼을 포함해야 합니다.\n","- pred: 예측된 총 판매액\n","- 제출 파일명: 'result.csv'\n","- 제출한 모델의 성능은 RMSE(Root Mean Square Error) 평가지표에 따라 채점한다.\n","- 제출 CSV 파일명 및 형태: result.csv\n","\n","~~~\n","pred\n","10000\n","20000\n","30000\n","40000\n","...\n","~~~\n","\n","### 답안 제출 참고\n","- pd.read_csv('result.csv') 로 제출 코드 확인"],"metadata":{"id":"KBEr9K-lV_M6"}},{"cell_type":"markdown","source":["# 1. 문제정의\n","- RMSE\n","- target: total\n","- 예측 파일명: result.csv\n","- 컬럼 1개(pred)"],"metadata":{"id":"Ae4v-2ju1mWi"}},{"cell_type":"markdown","source":["# 2. 라이브러리 및 데이터 불러오기"],"metadata":{"id":"qgSesVv_1qP_"}},{"cell_type":"code","source":["# 데이터 불러오기\n","import pandas as pd\n","train = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/refs/heads/main/p4/7_2/mart_train.csv\")\n","test = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/refs/heads/main/p4/7_2/mart_test.csv\")"],"metadata":{"id":"30wq46-FfSt_"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 3. 탐색적 데이터 분석(EDA)"],"metadata":{"id":"3dAHY3V1lWxV"}},{"cell_type":"code","source":["# 데이터 크기 확인\n","train.shape, test.shape"],"metadata":{"id":"0YRdxQxifwf9","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1733406499641,"user_tz":-540,"elapsed":56,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"4566375b-26c3-43cb-a82f-534e73558d16"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((700, 10), (300, 9))"]},"metadata":{},"execution_count":130}]},{"cell_type":"code","source":["# train 샘플 확인\n","train.head()"],"metadata":{"id":"F_k-MGd-f4Iw","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1733406499642,"user_tz":-540,"elapsed":55,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"29345882-757b-4c7c-bbe2-f2600bac5890"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  branch       city customer_type  gender            product_line  \\\n","0      A     Yangon        Member  Female       Health and beauty   \n","1      C  Naypyitaw        Normal  Female  Electronic accessories   \n","2      A     Yangon        Normal    Male      Home and lifestyle   \n","3      A     Yangon        Member    Male       Health and beauty   \n","4      A     Yangon        Normal    Male       Sports and travel   \n","\n","              total payment_method       rating time_of_day  day_name  \n","0 823457.2500000000        Ewallet 9.1000000000   afternoon  Saturday  \n","1 120330.0000000000           Cash 9.6000000000     morning    Friday  \n","2 510788.2500000001    Credit card 7.4000000000   afternoon    Sunday  \n","3 733572.0000000000        Ewallet 8.4000000000     evening    Sunday  \n","4 951567.7500000000        Ewallet 5.3000000000     morning    Friday  "],"text/html":["\n","  <div id=\"df-ff612db2-5abf-4b4f-bfcf-3192918e6359\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>branch</th>\n","      <th>city</th>\n","      <th>customer_type</th>\n","      <th>gender</th>\n","      <th>product_line</th>\n","      <th>total</th>\n","      <th>payment_method</th>\n","      <th>rating</th>\n","      <th>time_of_day</th>\n","      <th>day_name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>A</td>\n","      <td>Yangon</td>\n","      <td>Member</td>\n","      <td>Female</td>\n","      <td>Health and beauty</td>\n","      <td>823457.2500000000</td>\n","      <td>Ewallet</td>\n","      <td>9.1000000000</td>\n","      <td>afternoon</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>C</td>\n","      <td>Naypyitaw</td>\n","      <td>Normal</td>\n","      <td>Female</td>\n","      <td>Electronic accessories</td>\n","      <td>120330.0000000000</td>\n","      <td>Cash</td>\n","      <td>9.6000000000</td>\n","      <td>morning</td>\n","      <td>Friday</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>A</td>\n","      <td>Yangon</td>\n","      <td>Normal</td>\n","      <td>Male</td>\n","      <td>Home and lifestyle</td>\n","      <td>510788.2500000001</td>\n","      <td>Credit card</td>\n","      <td>7.4000000000</td>\n","      <td>afternoon</td>\n","      <td>Sunday</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>A</td>\n","      <td>Yangon</td>\n","      <td>Member</td>\n","      <td>Male</td>\n","      <td>Health and beauty</td>\n","      <td>733572.0000000000</td>\n","      <td>Ewallet</td>\n","      <td>8.4000000000</td>\n","      <td>evening</td>\n","      <td>Sunday</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>A</td>\n","      <td>Yangon</td>\n","      <td>Normal</td>\n","      <td>Male</td>\n","      <td>Sports and travel</td>\n","      <td>951567.7500000000</td>\n","      <td>Ewallet</td>\n","      <td>5.3000000000</td>\n","      <td>morning</td>\n","      <td>Friday</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ff612db2-5abf-4b4f-bfcf-3192918e6359')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ff612db2-5abf-4b4f-bfcf-3192918e6359 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ff612db2-5abf-4b4f-bfcf-3192918e6359');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bfdcb085-a4a1-4508-906d-1513e893f532\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bfdcb085-a4a1-4508-906d-1513e893f532')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bfdcb085-a4a1-4508-906d-1513e893f532 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"train","summary":"{\n  \"name\": \"train\",\n  \"rows\": 700,\n  \"fields\": [\n    {\n      \"column\": \"branch\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"A\",\n          \"C\",\n          \"B\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"city\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Yangon\",\n          \"Naypyitaw\",\n          \"Mandalay\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"customer_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Normal\",\n          \"Member\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Male\",\n          \"Female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"product_line\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Health and beauty\",\n          \"Electronic accessories\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 364390.7265411937,\n        \"min\": 19041.75,\n        \"max\": 1563975.0000000002,\n        \"num_unique_values\": 695,\n        \"samples\": [\n          322402.5,\n          294210.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"payment_method\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Ewallet\",\n          \"Cash\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.7130784358474735,\n        \"min\": 4.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 61,\n        \"samples\": [\n          9.1,\n          4.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"time_of_day\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"afternoon\",\n          \"morning\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"day_name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Saturday\",\n          \"Friday\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":131}]},{"cell_type":"code","source":["# test 샘플 확인\n","test.head()"],"metadata":{"id":"pKT3QURYykAP","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1733406499642,"user_tz":-540,"elapsed":52,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"ffd54ccc-db84-4d0d-a7c0-7e508adec19d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  branch       city customer_type  gender         product_line payment_method  \\\n","0      C  Naypyitaw        Normal  Female  Fashion accessories        Ewallet   \n","1      B   Mandalay        Normal    Male   Food and beverages    Credit card   \n","2      B   Mandalay        Member  Female  Fashion accessories    Credit card   \n","3      B   Mandalay        Member    Male    Health and beauty           Cash   \n","4      B   Mandalay        Member  Female   Home and lifestyle           Cash   \n","\n","        rating time_of_day   day_name  \n","0 9.6000000000   afternoon   Thursday  \n","1 4.3000000000     evening  Wednesday  \n","2 5.0000000000     evening  Wednesday  \n","3 9.2000000000     morning     Sunday  \n","4 6.3000000000   afternoon   Saturday  "],"text/html":["\n","  <div id=\"df-b75e592c-70a9-493e-953a-78b91b5655e5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>branch</th>\n","      <th>city</th>\n","      <th>customer_type</th>\n","      <th>gender</th>\n","      <th>product_line</th>\n","      <th>payment_method</th>\n","      <th>rating</th>\n","      <th>time_of_day</th>\n","      <th>day_name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>C</td>\n","      <td>Naypyitaw</td>\n","      <td>Normal</td>\n","      <td>Female</td>\n","      <td>Fashion accessories</td>\n","      <td>Ewallet</td>\n","      <td>9.6000000000</td>\n","      <td>afternoon</td>\n","      <td>Thursday</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>B</td>\n","      <td>Mandalay</td>\n","      <td>Normal</td>\n","      <td>Male</td>\n","      <td>Food and beverages</td>\n","      <td>Credit card</td>\n","      <td>4.3000000000</td>\n","      <td>evening</td>\n","      <td>Wednesday</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>B</td>\n","      <td>Mandalay</td>\n","      <td>Member</td>\n","      <td>Female</td>\n","      <td>Fashion accessories</td>\n","      <td>Credit card</td>\n","      <td>5.0000000000</td>\n","      <td>evening</td>\n","      <td>Wednesday</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>B</td>\n","      <td>Mandalay</td>\n","      <td>Member</td>\n","      <td>Male</td>\n","      <td>Health and beauty</td>\n","      <td>Cash</td>\n","      <td>9.2000000000</td>\n","      <td>morning</td>\n","      <td>Sunday</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>B</td>\n","      <td>Mandalay</td>\n","      <td>Member</td>\n","      <td>Female</td>\n","      <td>Home and lifestyle</td>\n","      <td>Cash</td>\n","      <td>6.3000000000</td>\n","      <td>afternoon</td>\n","      <td>Saturday</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b75e592c-70a9-493e-953a-78b91b5655e5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b75e592c-70a9-493e-953a-78b91b5655e5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b75e592c-70a9-493e-953a-78b91b5655e5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9dcc129a-3669-4563-bec5-be7cc0b48bf7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9dcc129a-3669-4563-bec5-be7cc0b48bf7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9dcc129a-3669-4563-bec5-be7cc0b48bf7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"test","summary":"{\n  \"name\": \"test\",\n  \"rows\": 300,\n  \"fields\": [\n    {\n      \"column\": \"branch\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"C\",\n          \"B\",\n          \"A\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"city\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Naypyitaw\",\n          \"Mandalay\",\n          \"Yangon\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"customer_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Member\",\n          \"Normal\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Male\",\n          \"Female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"product_line\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Fashion accessories\",\n          \"Food and beverages\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"payment_method\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Ewallet\",\n          \"Credit card\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.7320987906975136,\n        \"min\": 4.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 61,\n        \"samples\": [\n          9.6,\n          8.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"time_of_day\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"afternoon\",\n          \"evening\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"day_name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Thursday\",\n          \"Wednesday\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":132}]},{"cell_type":"code","source":["# 자료형 확인\n","train.info()"],"metadata":{"id":"FIRfcqHVgPxr","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1733406499642,"user_tz":-540,"elapsed":50,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"64bfd4f7-fd5f-4bae-d810-0c8477ba9f85"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 700 entries, 0 to 699\n","Data columns (total 10 columns):\n"," #   Column          Non-Null Count  Dtype  \n","---  ------          --------------  -----  \n"," 0   branch          700 non-null    object \n"," 1   city            700 non-null    object \n"," 2   customer_type   700 non-null    object \n"," 3   gender          700 non-null    object \n"," 4   product_line    700 non-null    object \n"," 5   total           700 non-null    float64\n"," 6   payment_method  700 non-null    object \n"," 7   rating          700 non-null    float64\n"," 8   time_of_day     700 non-null    object \n"," 9   day_name        700 non-null    object \n","dtypes: float64(2), object(8)\n","memory usage: 54.8+ KB\n"]}]},{"cell_type":"code","source":["# train 기초 통계값 확인\n","train.describe()"],"metadata":{"id":"q1hofG4HinUJ","colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"status":"ok","timestamp":1733406499642,"user_tz":-540,"elapsed":47,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"0ffd2850-484b-4b60-b8f6-fd902b6d7048"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   total         rating\n","count     700.0000000000 700.0000000000\n","mean   485078.0175000000   7.0034285714\n","std    364390.7265411937   1.7130784358\n","min     19041.7500000000   4.0000000000\n","25%    200119.5000000000   5.5000000000\n","50%    381874.5000000000   7.0000000000\n","75%    706127.6250000000   8.4250000000\n","max   1563975.0000000002  10.0000000000"],"text/html":["\n","  <div id=\"df-97f635bd-d462-4900-974c-80eec723c8da\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>total</th>\n","      <th>rating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>700.0000000000</td>\n","      <td>700.0000000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>485078.0175000000</td>\n","      <td>7.0034285714</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>364390.7265411937</td>\n","      <td>1.7130784358</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>19041.7500000000</td>\n","      <td>4.0000000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>200119.5000000000</td>\n","      <td>5.5000000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>381874.5000000000</td>\n","      <td>7.0000000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>706127.6250000000</td>\n","      <td>8.4250000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1563975.0000000002</td>\n","      <td>10.0000000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-97f635bd-d462-4900-974c-80eec723c8da')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-97f635bd-d462-4900-974c-80eec723c8da button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-97f635bd-d462-4900-974c-80eec723c8da');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-de08c311-37f5-4a95-9cfd-305f12828fb3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-de08c311-37f5-4a95-9cfd-305f12828fb3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-de08c311-37f5-4a95-9cfd-305f12828fb3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"train\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"total\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 502556.1091715203,\n        \"min\": 700.0,\n        \"max\": 1563975.0000000002,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          485078.0175,\n          381874.5,\n          700.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 245.29657760890066,\n        \"min\": 1.7130784358474735,\n        \"max\": 700.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          7.003428571428571,\n          7.0,\n          700.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":134}]},{"cell_type":"code","source":["# test 기초 통계값 확인\n","test.describe()"],"metadata":{"id":"wsL0DtiAOnXw","colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"status":"ok","timestamp":1733406499642,"user_tz":-540,"elapsed":45,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"f3e1ba93-a1d4-43a2-ec8d-efe5e0b86754"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              rating\n","count 300.0000000000\n","mean    6.9010000000\n","std     1.7320987907\n","min     4.0000000000\n","25%     5.5000000000\n","50%     6.8000000000\n","75%     8.5000000000\n","max    10.0000000000"],"text/html":["\n","  <div id=\"df-1e2fbb64-e696-44d9-8792-ce074fbc2842\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>rating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>300.0000000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>6.9010000000</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>1.7320987907</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>4.0000000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>5.5000000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>6.8000000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>8.5000000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>10.0000000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1e2fbb64-e696-44d9-8792-ce074fbc2842')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1e2fbb64-e696-44d9-8792-ce074fbc2842 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1e2fbb64-e696-44d9-8792-ce074fbc2842');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f092100e-27bc-4aa3-a3aa-8f60c9719da0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f092100e-27bc-4aa3-a3aa-8f60c9719da0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f092100e-27bc-4aa3-a3aa-8f60c9719da0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"test\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 103.90385480206355,\n        \"min\": 1.7320987906975136,\n        \"max\": 300.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          6.901000000000001,\n          6.8,\n          300.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":135}]},{"cell_type":"code","source":["# train 기초 통계값 (Object)\n","train.describe(include='object')"],"metadata":{"id":"AB_yqbISlMn-","colab":{"base_uri":"https://localhost:8080/","height":175},"executionInfo":{"status":"ok","timestamp":1733406499643,"user_tz":-540,"elapsed":44,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"7bae2f88-e43b-4d0c-8c36-2292ca70d182"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       branch    city customer_type gender       product_line payment_method  \\\n","count     700     700           700    700                700            700   \n","unique      3       3             2      2                  6              3   \n","top         A  Yangon        Normal   Male  Sports and travel           Cash   \n","freq      236     236           354    356                127            246   \n","\n","       time_of_day  day_name  \n","count          700       700  \n","unique           3         7  \n","top        evening  Saturday  \n","freq           309       114  "],"text/html":["\n","  <div id=\"df-478e74c8-0523-4dd5-a985-dc015ddcc59f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>branch</th>\n","      <th>city</th>\n","      <th>customer_type</th>\n","      <th>gender</th>\n","      <th>product_line</th>\n","      <th>payment_method</th>\n","      <th>time_of_day</th>\n","      <th>day_name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>700</td>\n","      <td>700</td>\n","      <td>700</td>\n","      <td>700</td>\n","      <td>700</td>\n","      <td>700</td>\n","      <td>700</td>\n","      <td>700</td>\n","    </tr>\n","    <tr>\n","      <th>unique</th>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>6</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>top</th>\n","      <td>A</td>\n","      <td>Yangon</td>\n","      <td>Normal</td>\n","      <td>Male</td>\n","      <td>Sports and travel</td>\n","      <td>Cash</td>\n","      <td>evening</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>freq</th>\n","      <td>236</td>\n","      <td>236</td>\n","      <td>354</td>\n","      <td>356</td>\n","      <td>127</td>\n","      <td>246</td>\n","      <td>309</td>\n","      <td>114</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-478e74c8-0523-4dd5-a985-dc015ddcc59f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-478e74c8-0523-4dd5-a985-dc015ddcc59f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-478e74c8-0523-4dd5-a985-dc015ddcc59f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7270bdb1-388e-47c9-9ad1-fc0a9bacf41e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7270bdb1-388e-47c9-9ad1-fc0a9bacf41e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7270bdb1-388e-47c9-9ad1-fc0a9bacf41e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"train\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"branch\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          \"236\",\n          \"700\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"city\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          \"236\",\n          \"700\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"customer_type\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          \"354\",\n          \"700\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gender\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          \"356\",\n          \"700\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"product_line\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          6,\n          \"127\",\n          \"700\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"payment_method\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          \"246\",\n          \"700\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"time_of_day\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          \"309\",\n          \"700\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"day_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          7,\n          \"114\",\n          \"700\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":136}]},{"cell_type":"code","source":["# test 기초 통계값 (Object)\n","test.describe(include='object')"],"metadata":{"id":"xJbcsyOxlSRu","colab":{"base_uri":"https://localhost:8080/","height":175},"executionInfo":{"status":"ok","timestamp":1733406499643,"user_tz":-540,"elapsed":40,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"8d20281f-1c01-4625-d4aa-91d3847fe83c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       branch    city customer_type  gender            product_line  \\\n","count     300     300           300     300                     300   \n","unique      3       3             2       2                       6   \n","top         A  Yangon        Member  Female  Electronic accessories   \n","freq      104     104           155     157                      58   \n","\n","       payment_method time_of_day  day_name  \n","count             300         300       300  \n","unique              3           3         7  \n","top           Ewallet     evening  Saturday  \n","freq              110         123        50  "],"text/html":["\n","  <div id=\"df-1aa9d652-dbcf-44cc-8002-245584830e15\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>branch</th>\n","      <th>city</th>\n","      <th>customer_type</th>\n","      <th>gender</th>\n","      <th>product_line</th>\n","      <th>payment_method</th>\n","      <th>time_of_day</th>\n","      <th>day_name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>300</td>\n","      <td>300</td>\n","      <td>300</td>\n","      <td>300</td>\n","      <td>300</td>\n","      <td>300</td>\n","      <td>300</td>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>unique</th>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>6</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>top</th>\n","      <td>A</td>\n","      <td>Yangon</td>\n","      <td>Member</td>\n","      <td>Female</td>\n","      <td>Electronic accessories</td>\n","      <td>Ewallet</td>\n","      <td>evening</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>freq</th>\n","      <td>104</td>\n","      <td>104</td>\n","      <td>155</td>\n","      <td>157</td>\n","      <td>58</td>\n","      <td>110</td>\n","      <td>123</td>\n","      <td>50</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1aa9d652-dbcf-44cc-8002-245584830e15')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1aa9d652-dbcf-44cc-8002-245584830e15 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1aa9d652-dbcf-44cc-8002-245584830e15');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3e751f94-812f-44af-9bd9-ccab9568282f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3e751f94-812f-44af-9bd9-ccab9568282f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3e751f94-812f-44af-9bd9-ccab9568282f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"test\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"branch\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          \"104\",\n          \"300\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"city\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          \"104\",\n          \"300\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"customer_type\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          \"155\",\n          \"300\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gender\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          \"157\",\n          \"300\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"product_line\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          6,\n          \"58\",\n          \"300\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"payment_method\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          \"110\",\n          \"300\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"time_of_day\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          \"123\",\n          \"300\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"day_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          7,\n          \"50\",\n          \"300\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":137}]},{"cell_type":"code","source":["# train 결측치\n","train.isnull().sum()"],"metadata":{"id":"HD9OAVRNnd-O","colab":{"base_uri":"https://localhost:8080/","height":398},"executionInfo":{"status":"ok","timestamp":1733406499643,"user_tz":-540,"elapsed":38,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"1303ee47-1d2e-4341-93e1-305cb8c58b4a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["branch            0\n","city              0\n","customer_type     0\n","gender            0\n","product_line      0\n","total             0\n","payment_method    0\n","rating            0\n","time_of_day       0\n","day_name          0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>branch</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>city</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>customer_type</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>gender</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>product_line</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>total</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>payment_method</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>rating</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>time_of_day</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>day_name</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":138}]},{"cell_type":"code","source":["# test 결측치\n","test.isnull().sum()"],"metadata":{"id":"kL6lokT5neA-","colab":{"base_uri":"https://localhost:8080/","height":366},"executionInfo":{"status":"ok","timestamp":1733406499643,"user_tz":-540,"elapsed":36,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"e1e804db-928f-4ad8-ba37-54a845cff152"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["branch            0\n","city              0\n","customer_type     0\n","gender            0\n","product_line      0\n","payment_method    0\n","rating            0\n","time_of_day       0\n","day_name          0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>branch</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>city</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>customer_type</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>gender</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>product_line</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>payment_method</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>rating</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>time_of_day</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>day_name</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":139}]},{"cell_type":"code","source":["# 타겟 (value_count())\n","#★회귀같은 경우는 아래처럼 되게 값이 엄청 많이 나옴 숫자로 -> 이걸보고 회귀인지 분류인지 판별도 가능함!!!\n","train['total'].value_counts()"],"metadata":{"id":"nd5vn9iciu2i","colab":{"base_uri":"https://localhost:8080/","height":490},"executionInfo":{"status":"ok","timestamp":1733406499643,"user_tz":-540,"elapsed":35,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"dbf5c5c8-82af-405d-c8b6-e6a835285d5b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["total\n","283641.7500000000     2\n","263875.5000000000     2\n","415422.0000000000     2\n","326450.2500000000     2\n","130851.0000000000     2\n","                     ..\n","293391.0000000000     1\n","137103.7500000000     1\n","348232.5000000000     1\n","104107.5000000000     1\n","1535625.0000000000    1\n","Name: count, Length: 695, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>total</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>283641.7500000000</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>263875.5000000000</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>415422.0000000000</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>326450.2500000000</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>130851.0000000000</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>293391.0000000000</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>137103.7500000000</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>348232.5000000000</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>104107.5000000000</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1535625.0000000000</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>695 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":140}]},{"cell_type":"code","source":["# target (분포)\n","#회귀의 경우는 위의 value_counts 보다 아래 이방법으로 하는게 더 효과적임\n","#지수 표기 법을 확인 하기위해서 pandas의 option을 사용 :10f는 소수점 10쨰 자리 까지 해달라는 거임\n","\n","pd.set_option('display.float_format', '{:.10f}'.format)\n","train['total'].describe()"],"metadata":{"id":"a5WVQ2EFUCYL","colab":{"base_uri":"https://localhost:8080/","height":335},"executionInfo":{"status":"ok","timestamp":1733406499937,"user_tz":-540,"elapsed":327,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"961854a2-585c-4526-9cde-15adeb79a20a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count       700.0000000000\n","mean     485078.0175000000\n","std      364390.7265411937\n","min       19041.7500000000\n","25%      200119.5000000000\n","50%      381874.5000000000\n","75%      706127.6250000000\n","max     1563975.0000000002\n","Name: total, dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>total</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>700.0000000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>485078.0175000000</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>364390.7265411937</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>19041.7500000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>200119.5000000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>381874.5000000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>706127.6250000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1563975.0000000002</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":141}]},{"cell_type":"code","source":["# target (분포, 시각화)\n","# 이건 어떻게 하는지 모르겠음\n","train['total'].hist()"],"metadata":{"id":"BjIBAFeOPCLW","executionInfo":{"status":"ok","timestamp":1733406499937,"user_tz":-540,"elapsed":10,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"colab":{"base_uri":"https://localhost:8080/","height":466},"outputId":"329c6b75-5044-4b2a-fe5f-4abbfde6b277"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":142},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# 4. 데이터 전처리"],"metadata":{"id":"UvVLoQBP1z5A"}},{"cell_type":"code","source":["# target\n","target = train.pop('total')"],"metadata":{"id":"C6UGliMFcMhf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 원핫인코딩\n","# 뒤에 뭐 써야하는지 기억이 안남\n","\n","print(train.shape, test.shape)\n","train = pd.get_dummies(train)\n","test = pd.get_dummies(test)\n","print(train.shape, test.shape)\n"],"metadata":{"id":"nkWaHf1izCqr","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1733406499938,"user_tz":-540,"elapsed":8,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"8f3166bd-bdb1-4697-cb84-d48981543744"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(700, 9) (300, 9)\n","(700, 30) (300, 30)\n"]}]},{"cell_type":"markdown","source":["# 5. 검증 데이터 분할"],"metadata":{"id":"6KND1n8b14uj"}},{"cell_type":"code","source":["# 검증데이터 분할\n","from sklearn.model_selection import train_test_split\n","X_tr, X_val, y_tr, y_val = train_test_split(train,\n","                                            target,\n","                                            test_size=0.2,\n","                                            random_state=0)\n","\n","X_tr.shape, X_val.shape, y_tr.shape, y_val.shape\n"],"metadata":{"id":"qvHUGFeFhyqu","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1733406500253,"user_tz":-540,"elapsed":10,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"63950f11-c36c-4b59-ee2e-af34f0e24b16"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((560, 30), (140, 30), (560,), (140,))"]},"metadata":{},"execution_count":145}]},{"cell_type":"markdown","source":["# 6. 머신러닝 학습 및 평가"],"metadata":{"id":"VAhoGGf-17uM"}},{"cell_type":"code","source":["# RMSE\n","from sklearn.metrics import mean_squared_error\n","def rmse(y_true, y_pred):\n","    return mean_squared_error(y_true, y_pred)**0.5\n","\n","#RMSE는 에러 값이므로 숫자가 작을 수록 좋은것이어서 밑에 모델 들 중 숫자가 제일 작은게 제일 성능이 좋은것으로 보면 됨"],"metadata":{"id":"Ra2PAD0YzZJN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 선형회귀\n","from sklearn.linear_model import LinearRegression\n","lr = LinearRegression()\n","lr.fit(X_tr,y_tr)\n","pred = lr.predict(X_val)\n","rmse(y_val,pred)\n"],"metadata":{"id":"6B_UWz_a2pTh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1733406500254,"user_tz":-540,"elapsed":8,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"104026f4-b831-4eab-d8e7-3a9f8b2b0b01"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["374016.3661648522"]},"metadata":{},"execution_count":147}]},{"cell_type":"code","source":["# 랜덤포레스트\n","# 분류인지 회귀 인지에 따라 Classifier 나, Regressor 뭘써야할지 꼭 구별해서 해야함!\n","from sklearn.ensemble import RandomForestRegressor\n","rf = RandomForestRegressor(random_state=0)\n","rf.fit(X_tr, y_tr)\n","pred = rf.predict(X_val)\n","rmse(y_val, pred)\n"],"metadata":{"id":"xA5lV-MXh3sZ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1733406500510,"user_tz":-540,"elapsed":261,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"325e75f0-59c0-4aa6-e418-3c5afa3720a4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["385935.56337360526"]},"metadata":{},"execution_count":148}]},{"cell_type":"code","source":["# Xgboost\n","import xgboost as xgb\n","xg = xgb.XGBRegressor(random_state=0)\n","xg.fit(X_tr, y_tr)\n","pred = xg.predict(X_val)\n","rmse(y_val, pred)"],"metadata":{"id":"dQQLUXcb29eT","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1733406500938,"user_tz":-540,"elapsed":429,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"64008242-6c80-44fb-b24d-db4aa7601e77"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["442570.7070483747"]},"metadata":{},"execution_count":149}]},{"cell_type":"code","source":["# LightGBM\n","import lightgbm as lgb\n","lg = lgb.LGBMRegressor(random_state=0, verbose=-1)\n","lg.fit(X_tr, y_tr)\n","pred = lg.predict(X_val)\n","rmse(y_val, pred)\n","\n"],"metadata":{"id":"3Q8K93uM29ma","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1733406500938,"user_tz":-540,"elapsed":12,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"63fd215a-5223-4266-b3f6-e31899598017"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["404369.88780394377"]},"metadata":{},"execution_count":150}]},{"cell_type":"markdown","source":["# 7. 예측 및 결과 파일 생성"],"metadata":{"id":"Cx5zX7W4iL4F"}},{"cell_type":"code","source":["# 다른 문제랑 다르게 test 와 다르기 떄문에 밑에는 평소라면 정답이 었겠지만 평소와 똑같이 하면 오류가 생기는 예시를 보여줌\n","# result = pd.DataFrame({\n","#       'pred' : pred\n","\n","# })\n","# result.to_csv(\"result.csv\", index = False)"],"metadata":{"id":"XqbAYwPmB-I_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#이렇게 찍어보면 , test 데이터는 300개인데 여기 shape로 개수를 보면 140개임 즉 잘못 된거임 그래서 다음 코드란에 제대로 된걸 적어서 보여줌\n","# result.shape"],"metadata":{"id":"_K8q9OG-CY9y"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# test예측 및 csv 생성\n","pred = lr.predict(test)\n","result = pd.DataFrame({\n","      'pred':pred\n","})\n","result.to_csv(\"result.csv\", index = False)\n"],"metadata":{"id":"aZRKbOifiJYA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# result.csv 확인\n","result.shape"],"metadata":{"id":"74VLjg8vv_Kw","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1733406500939,"user_tz":-540,"elapsed":10,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"8155e8a2-51ca-4cf2-ac89-56e9e504b227"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(300, 1)"]},"metadata":{},"execution_count":154}]},{"cell_type":"code","source":["pd.read_csv('result.csv')\n","\n","#정수로 굳이 바꿀 필요 없다."],"metadata":{"id":"ZpZWC0jOPWqd","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1733406500939,"user_tz":-540,"elapsed":8,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"61077473-0e9c-455c-bec5-8dfc89a7b6c9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 pred\n","0   485484.5740277334\n","1   474683.4165377701\n","2   486669.1574532853\n","3   426407.8222290426\n","4   599942.9042138030\n","..                ...\n","295 501132.5887398274\n","296 554273.9221195823\n","297 540502.7549631427\n","298 550704.8821613131\n","299 506543.6684025061\n","\n","[300 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-e03f1475-3d34-402b-901e-e9243ea81557\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pred</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>485484.5740277334</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>474683.4165377701</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>486669.1574532853</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>426407.8222290426</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>599942.9042138030</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>295</th>\n","      <td>501132.5887398274</td>\n","    </tr>\n","    <tr>\n","      <th>296</th>\n","      <td>554273.9221195823</td>\n","    </tr>\n","    <tr>\n","      <th>297</th>\n","      <td>540502.7549631427</td>\n","    </tr>\n","    <tr>\n","      <th>298</th>\n","      <td>550704.8821613131</td>\n","    </tr>\n","    <tr>\n","      <th>299</th>\n","      <td>506543.6684025061</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>300 rows × 1 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e03f1475-3d34-402b-901e-e9243ea81557')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e03f1475-3d34-402b-901e-e9243ea81557 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e03f1475-3d34-402b-901e-e9243ea81557');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d56bf870-9854-435b-81da-634aeec7fe2b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d56bf870-9854-435b-81da-634aeec7fe2b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d56bf870-9854-435b-81da-634aeec7fe2b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"#\\uc815\\uc218\\ub85c \\uad73\\uc774 \\ubc14\\uafc0 \\ud544\\uc694 \\uc5c6\\ub2e4\",\n  \"rows\": 300,\n  \"fields\": [\n    {\n      \"column\": \"pred\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 59149.921553177686,\n        \"min\": 320167.55696942983,\n        \"max\": 665986.4392565946,\n        \"num_unique_values\": 299,\n        \"samples\": [\n          507517.2324009825,\n          529115.9673106942,\n          503490.2740618164\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":155}]},{"cell_type":"code","source":[],"metadata":{"id":"KlSj3umvPWs6"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# [심화] 성능 개선"],"metadata":{"id":"VyH2Xd_8Dh-B"}},{"cell_type":"code","source":["#Regressor는 하이퍼파라미터 튜닝할 수 있는게 없다!\n","# 그래서  튜닝 보다는 전처리 방법을 다르게 해서 성능 개선을 해야한다\n","\n","# 아래는 원핫 인코딩을 레이블 인코딩으로만 변경해서 해보는것!\n","# 반드시 해야하는건 아니고, 성능 개선을 위해 하는 것임\n","# 그래서 위에서 원핫 기준으로 인코딩해서 마지막에 나온 결과랑 레이블 해서 나온결과중 서로 최고 괜찮은 값들 중 나은 것으로 제출!"],"metadata":{"id":"3ted-3yaDeMF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 데이터 불러오기\n","import pandas as pd\n","train = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/refs/heads/main/p4/7_2/mart_train.csv\")\n","test = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/refs/heads/main/p4/7_2/mart_test.csv\")\n","\n","# target 데이터\n","target = train.pop('total')\n","\n","\n","# 레이블 인코딩\n","from sklearn.preprocessing import LabelEncoder\n","cols = train.select_dtypes(include='O').columns\n","\n","for col in cols:\n","    le = LabelEncoder()\n","    train[col] = le.fit_transform(train[col])\n","    test[col] = le.transform(test[col])\n","\n","\n","\n","# 검증데이터 분리\n","from sklearn.model_selection import train_test_split\n","X_tr, X_val, y_tr, y_val = train_test_split(train,\n","                                            target,\n","                                            test_size=0.2,\n","                                            random_state=0)\n","\n","X_tr.shape, X_val.shape, y_tr.shape, y_val.shape\n","\n","\n","# 선형회귀\n","from sklearn.linear_model import LinearRegression\n","lr = LinearRegression()\n","lr.fit(X_tr,y_tr)\n","pred = lr.predict(X_val)\n","print(\"선형회귀:\", rmse(y_val,pred))\n","\n","\n","# 랜덤포레스트\n","from sklearn.ensemble import RandomForestRegressor\n","rf = RandomForestRegressor(random_state=0)\n","rf.fit(X_tr, y_tr)\n","pred = rf.predict(X_val)\n","print(\"랜덤포레스트:\", rmse(y_val, pred))\n","\n","# Xgboost\n","import xgboost as xgb\n","xg = xgb.XGBRegressor(random_state=0)\n","xg.fit(X_tr, y_tr)\n","pred = xg.predict(X_val)\n","print(\"xgboost:\", rmse(y_val, pred))\n","\n","\n","# LightGBM\n","import lightgbm as lgb\n","lg = lgb.LGBMRegressor(random_state=0, verbose=-1)\n","lg.fit(X_tr, y_tr)\n","pred = lg.predict(X_val)\n","print(\"LightBGM:\", rmse(y_val, pred))\n","\n","\n","\n","# 최종 제출 파일\n","pred = lr.predict(test)\n","result = pd.DataFrame({\n","      'pred':pred\n","})\n","result.to_csv(\"result.csv\", index = False)\n"],"metadata":{"id":"r1ByVJ6b6q8a","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1733406787443,"user_tz":-540,"elapsed":1025,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"df6eafc6-5a5f-49cc-b2f3-e541e9b73aa9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["선형회귀: 371070.1344734549\n","랜덤포레스트: 395945.4750788139\n","xgboost: 445824.1295209891\n","LightBGM: 423502.19189255615\n"]}]},{"cell_type":"code","source":["#원핫인코딩 결과 가장 작은 값인 선형회귀\n","#374016.3661648522\n","\n","# #라벨인코딩 결과 가장 장근 값인 선형회귀\n","# 371070.1344734549\n","\n","비교해서 라벨 인코딩 값이 더 작으니 라벨 인코딩으로 한 것으로 제출하면 끝"],"metadata":{"id":"0mmSL5XkIYom"},"execution_count":null,"outputs":[]}]}