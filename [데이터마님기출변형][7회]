{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOISmB+hU7ALksueStrINl7"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":[],"metadata":{"id":"VzyncD16tBt7"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["작업 1유형"],"metadata":{"id":"I3iFhanntElt"}},{"cell_type":"markdown","source":["데이터 출처 : 자체 제작 데이터 설명 : 학생 15명의 국어,수학,영어,과학 시험 점수이다. 각 학생은 4과목 중 3과목을 선택해서 시험봤다."],"metadata":{"id":"NkXbK8s3s6D_"}},{"cell_type":"code","source":["import pandas as pd\n","df = pd.read_csv('https://raw.githubusercontent.com/Datamanim/datarepo/main/krdatacertificate/e7_p1.csv')\n","df.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"v0lmEAS8s59v","executionInfo":{"status":"ok","timestamp":1749903416964,"user_tz":-540,"elapsed":59,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"a7d62e3b-a329-4ce8-e2b5-7f0c8212ba1e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     학생    국어    수학    영어    과학\n","0  ID_0  63.0   NaN  79.0  84.0\n","1  ID_1  91.0  93.0   NaN  73.0\n","2  ID_2  59.0  55.0   NaN  56.0\n","3  ID_3  71.0  83.0  82.0   NaN\n","4  ID_4  62.0  72.0  56.0   NaN"],"text/html":["\n","  <div id=\"df-0b2192ee-6733-4953-9951-3afff8dd5109\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>학생</th>\n","      <th>국어</th>\n","      <th>수학</th>\n","      <th>영어</th>\n","      <th>과학</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ID_0</td>\n","      <td>63.0</td>\n","      <td>NaN</td>\n","      <td>79.0</td>\n","      <td>84.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>ID_1</td>\n","      <td>91.0</td>\n","      <td>93.0</td>\n","      <td>NaN</td>\n","      <td>73.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ID_2</td>\n","      <td>59.0</td>\n","      <td>55.0</td>\n","      <td>NaN</td>\n","      <td>56.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ID_3</td>\n","      <td>71.0</td>\n","      <td>83.0</td>\n","      <td>82.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>ID_4</td>\n","      <td>62.0</td>\n","      <td>72.0</td>\n","      <td>56.0</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0b2192ee-6733-4953-9951-3afff8dd5109')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0b2192ee-6733-4953-9951-3afff8dd5109 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0b2192ee-6733-4953-9951-3afff8dd5109');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-e776baca-9736-4a3d-af0b-fca420e624c1\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e776baca-9736-4a3d-af0b-fca420e624c1')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-e776baca-9736-4a3d-af0b-fca420e624c1 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 15,\n  \"fields\": [\n    {\n      \"column\": \"\\ud559\\uc0dd\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 15,\n        \"samples\": [\n          \"ID_9\",\n          \"ID_11\",\n          \"ID_0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uad6d\\uc5b4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.379677308250415,\n        \"min\": 59.0,\n        \"max\": 96.0,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          61.0,\n          68.0,\n          63.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc218\\ud559\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16.164635923690163,\n        \"min\": 55.0,\n        \"max\": 96.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          96.0,\n          55.0,\n          92.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc601\\uc5b4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.10784869413225,\n        \"min\": 56.0,\n        \"max\": 98.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          90.0,\n          82.0,\n          83.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uacfc\\ud559\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.87223540976642,\n        \"min\": 56.0,\n        \"max\": 96.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          87.0,\n          73.0,\n          62.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":2}]},{"cell_type":"markdown","source":["1-1 : 국어,수학,영어,과학 과목 중 가장 많은 학생들이 응시한 시험을 선택하고 해당과목의 점수를 표준화 했을 때 가장 큰 표준화 점수를 구하여라"],"metadata":{"id":"6LFEAtWTtJl5"}},{"cell_type":"code","source":["#내풀이 -> 심플\n","#zscore 쓰면됨\n","#그냥 null 값이 가장 적은게 많은 거니까 국어 선택하고 국어만 넣고 계산하면 끝\n","from scipy import stats\n","stats.zscore(df['국어'].dropna()).max()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IWbhbrAKbax9","executionInfo":{"status":"ok","timestamp":1749904417489,"user_tz":-540,"elapsed":48,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"e1135ff4-13ca-4b70-e2c2-5a52c977b328"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.float64(1.713855688712825)"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["#데이터마님 풀이 2가지\n","sub = df.iloc[:,1:].count().idxmax()\n","sub\n","\n","#점수데이터만 추출\n","std = df[sub] #df['국어']랑 똑같음\n","\n","#표준화 = z_score임\n","#ddof=0 : 모 표분편차, ddof=1: 표본표준편차\n","# 표준화된 점수중에서 가장 큰값(z_score)를 구함\n","#즉) 해당 과목에서 가장 두드러진 고득점자가 얼마나 평균에서 멀리 떨어졌는지를 나타냄\n","z_score = ((df[sub] - df[sub].mean()) / (df[sub].std(ddof=0))).max()\n","z_score\n","# from scipy import stats\n","# stats.zscore(df[sub].dropna()).max()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Pp82-l0vZ4g5","executionInfo":{"status":"ok","timestamp":1749904331479,"user_tz":-540,"elapsed":12,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"b885845c-3a68-4a02-8348-6d878437a7db"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.713855688712825"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["#4개 과목중 3개를 선택했으니, null값이 가장 적은게 많이 한것이겠네!\n","\n","df.isnull().sum()\n","# 국어를 가장 많이 응시함\n","cond = df['국어']\n","\n","#표준화 어떻게함?\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":377},"id":"Wo40QZLSxjng","executionInfo":{"status":"error","timestamp":1749903691615,"user_tz":-540,"elapsed":58,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"c81ba5da-003b-42be-9e4f-91554d8a141c"},"execution_count":null,"outputs":[{"output_type":"error","ename":"KeyError","evalue":"\"None of [Index([63.0, 91.0, 59.0, 71.0, 62.0,  nan, 83.0, 85.0, 96.0, 79.0, 68.0, 61.0,\\n       86.0,  nan, 79.0],\\n      dtype='float64')] are in the [columns]\"","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-11-3370312762>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0misnull\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;31m# 국어를 가장 많이 응시함\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0mcond\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'국어'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;31m#표준화 어떻게함?\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   4106\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mis_iterator\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4107\u001b[0m                 \u001b[0mkey\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4108\u001b[0;31m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_indexer_strict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"columns\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4109\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4110\u001b[0m         \u001b[0;31m# take() does not accept boolean indexers\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36m_get_indexer_strict\u001b[0;34m(self, key, axis_name)\u001b[0m\n\u001b[1;32m   6198\u001b[0m             \u001b[0mkeyarr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnew_indexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_reindex_non_unique\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkeyarr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6199\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 6200\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_raise_if_missing\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkeyarr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis_name\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   6201\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6202\u001b[0m         \u001b[0mkeyarr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtake\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36m_raise_if_missing\u001b[0;34m(self, key, indexer, axis_name)\u001b[0m\n\u001b[1;32m   6247\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mnmissing\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6248\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mnmissing\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 6249\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"None of [{key}] are in the [{axis_name}]\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   6250\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6251\u001b[0m             \u001b[0mnot_found\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mensure_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmissing_mask\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnonzero\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munique\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: \"None of [Index([63.0, 91.0, 59.0, 71.0, 62.0,  nan, 83.0, 85.0, 96.0, 79.0, 68.0, 61.0,\\n       86.0,  nan, 79.0],\\n      dtype='float64')] are in the [columns]\""]}]},{"cell_type":"code","source":["import numpy as np\n","sub = df.iloc[:,1:].count().idxmax()\n","sub\n","# std = df[sub]\n","\n","r = ((df[sub] - df[sub].mean()) / df[sub].std(ddof=0)).max()  # 모표준편차 ddof=0\n","# print(r)\n","\n","\n","# # scipy\n","# from scipy.stats import zscore\n","# result = zscore(df[sub].dropna()).max()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":36},"id":"nv1TGUJwYlJE","executionInfo":{"status":"ok","timestamp":1749903638677,"user_tz":-540,"elapsed":7,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"543ecf58-6448-4707-97af-5bf73fdf9920"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'국어'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","source":["데이터 출처 : 자체제작 32개 변수의 수치값"],"metadata":{"id":"3opAx2K1tPJd"}},{"cell_type":"code","source":["import pandas as pd\n","df = pd.read_csv('https://raw.githubusercontent.com/Datamanim/datarepo/main/krdatacertificate/e7_p2_.csv')\n","df.head(5)"],"metadata":{"id":"u1G-VftLtJCp","colab":{"base_uri":"https://localhost:8080/","height":236},"executionInfo":{"status":"ok","timestamp":1749904512831,"user_tz":-540,"elapsed":272,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"6ea3303b-0ffb-4345-8b39-aaf9f04b7725"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      var_1     var_2     var_3     var_4     var_5     var_6     var_7  \\\n","0 -0.335864 -2.425701  0.452851 -1.381924 -0.425591 -1.461498 -0.417082   \n","1  0.803535 -0.699433  0.095579  0.788053 -0.267674 -0.370746  0.636034   \n","2 -0.408470 -0.361105 -0.857278  0.338294  2.317821 -0.099928  0.557053   \n","3 -0.690599  0.777928 -0.079963  0.164086  1.721702  0.146761 -0.988636   \n","4  0.179819 -0.668267  0.381849 -0.884196  0.758519 -1.026190  0.986227   \n","\n","      var_8     var_9    var_10  ...    var_23    var_24    var_25    var_26  \\\n","0 -0.944226 -0.351224  1.474046  ...  1.715714  0.300227  0.439828 -0.094772   \n","1 -1.674584 -0.058465 -1.188973  ... -1.348879 -0.899480 -1.271886  0.333734   \n","2 -0.847932  0.973471  0.101203  ... -0.388353  0.918553 -1.984422  0.385055   \n","3  0.885344  0.647053  0.674609  ...  0.337074 -1.406224 -0.699728 -0.836068   \n","4 -1.663167  2.290551  0.564845  ... -0.700137 -0.153825 -1.835313  0.182131   \n","\n","     var_27    var_28    var_29    var_30    var_31    var_32  \n","0  1.551995  3.308446 -0.391377  1.963829 -1.458605 -0.348652  \n","1 -0.373565 -2.091508 -0.715245 -0.688441  0.910927 -0.746899  \n","2  1.161414 -1.280253  2.831802 -0.953771 -0.228466  0.766254  \n","3 -0.226315  1.260893 -0.781630 -0.219995  0.871289  0.017578  \n","4  0.890247  0.024791  1.489955  1.276357 -0.285144  1.066486  \n","\n","[5 rows x 32 columns]"],"text/html":["\n","  <div id=\"df-e0fa479c-86dc-4f23-9a5d-f5e36aa172f7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>var_1</th>\n","      <th>var_2</th>\n","      <th>var_3</th>\n","      <th>var_4</th>\n","      <th>var_5</th>\n","      <th>var_6</th>\n","      <th>var_7</th>\n","      <th>var_8</th>\n","      <th>var_9</th>\n","      <th>var_10</th>\n","      <th>...</th>\n","      <th>var_23</th>\n","      <th>var_24</th>\n","      <th>var_25</th>\n","      <th>var_26</th>\n","      <th>var_27</th>\n","      <th>var_28</th>\n","      <th>var_29</th>\n","      <th>var_30</th>\n","      <th>var_31</th>\n","      <th>var_32</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-0.335864</td>\n","      <td>-2.425701</td>\n","      <td>0.452851</td>\n","      <td>-1.381924</td>\n","      <td>-0.425591</td>\n","      <td>-1.461498</td>\n","      <td>-0.417082</td>\n","      <td>-0.944226</td>\n","      <td>-0.351224</td>\n","      <td>1.474046</td>\n","      <td>...</td>\n","      <td>1.715714</td>\n","      <td>0.300227</td>\n","      <td>0.439828</td>\n","      <td>-0.094772</td>\n","      <td>1.551995</td>\n","      <td>3.308446</td>\n","      <td>-0.391377</td>\n","      <td>1.963829</td>\n","      <td>-1.458605</td>\n","      <td>-0.348652</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.803535</td>\n","      <td>-0.699433</td>\n","      <td>0.095579</td>\n","      <td>0.788053</td>\n","      <td>-0.267674</td>\n","      <td>-0.370746</td>\n","      <td>0.636034</td>\n","      <td>-1.674584</td>\n","      <td>-0.058465</td>\n","      <td>-1.188973</td>\n","      <td>...</td>\n","      <td>-1.348879</td>\n","      <td>-0.899480</td>\n","      <td>-1.271886</td>\n","      <td>0.333734</td>\n","      <td>-0.373565</td>\n","      <td>-2.091508</td>\n","      <td>-0.715245</td>\n","      <td>-0.688441</td>\n","      <td>0.910927</td>\n","      <td>-0.746899</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-0.408470</td>\n","      <td>-0.361105</td>\n","      <td>-0.857278</td>\n","      <td>0.338294</td>\n","      <td>2.317821</td>\n","      <td>-0.099928</td>\n","      <td>0.557053</td>\n","      <td>-0.847932</td>\n","      <td>0.973471</td>\n","      <td>0.101203</td>\n","      <td>...</td>\n","      <td>-0.388353</td>\n","      <td>0.918553</td>\n","      <td>-1.984422</td>\n","      <td>0.385055</td>\n","      <td>1.161414</td>\n","      <td>-1.280253</td>\n","      <td>2.831802</td>\n","      <td>-0.953771</td>\n","      <td>-0.228466</td>\n","      <td>0.766254</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>-0.690599</td>\n","      <td>0.777928</td>\n","      <td>-0.079963</td>\n","      <td>0.164086</td>\n","      <td>1.721702</td>\n","      <td>0.146761</td>\n","      <td>-0.988636</td>\n","      <td>0.885344</td>\n","      <td>0.647053</td>\n","      <td>0.674609</td>\n","      <td>...</td>\n","      <td>0.337074</td>\n","      <td>-1.406224</td>\n","      <td>-0.699728</td>\n","      <td>-0.836068</td>\n","      <td>-0.226315</td>\n","      <td>1.260893</td>\n","      <td>-0.781630</td>\n","      <td>-0.219995</td>\n","      <td>0.871289</td>\n","      <td>0.017578</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.179819</td>\n","      <td>-0.668267</td>\n","      <td>0.381849</td>\n","      <td>-0.884196</td>\n","      <td>0.758519</td>\n","      <td>-1.026190</td>\n","      <td>0.986227</td>\n","      <td>-1.663167</td>\n","      <td>2.290551</td>\n","      <td>0.564845</td>\n","      <td>...</td>\n","      <td>-0.700137</td>\n","      <td>-0.153825</td>\n","      <td>-1.835313</td>\n","      <td>0.182131</td>\n","      <td>0.890247</td>\n","      <td>0.024791</td>\n","      <td>1.489955</td>\n","      <td>1.276357</td>\n","      <td>-0.285144</td>\n","      <td>1.066486</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 32 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e0fa479c-86dc-4f23-9a5d-f5e36aa172f7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e0fa479c-86dc-4f23-9a5d-f5e36aa172f7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e0fa479c-86dc-4f23-9a5d-f5e36aa172f7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-530b2385-2e85-4a1e-bf23-d14c96d4bdad\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-530b2385-2e85-4a1e-bf23-d14c96d4bdad')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-530b2385-2e85-4a1e-bf23-d14c96d4bdad button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":22}]},{"cell_type":"markdown","source":["1-2: 32개의 변수간 상관관계를 확인 했을 때, var_11 컬럼과 상관계수의 절댓값이 가장 큰 변수를 찾아 해당 변수의 평균값을 구하여라\n","\n"],"metadata":{"id":"099iLTBptR2x"}},{"cell_type":"code","source":["#내풀이\n","cond = df.corr().iloc[10:11,:]\n","change = cond.T\n","change.sort_values('var_11',ascending=False)\n","# cond.sort_values(ascending=False)\n","#Var_28이 가장 큼: -0.392672\n","df['var_28'].mean()"],"metadata":{"id":"Sxg7B3BtxkNQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1749904930616,"user_tz":-540,"elapsed":14,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"0fa01b55-8b10-4c84-e3ba-eb37b53f7370"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.float64(-0.06289356546077182)"]},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["#데이터 마님 풀이 -> 이게 훨쉬움 이걸로 암기\n","max_v = df.corr()['var_11'].abs().sort_values(ascending=False).index[1]\n","df['var_28'].mean()"],"metadata":{"id":"Ln2vSAWEs57f","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1749905074066,"user_tz":-540,"elapsed":45,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"10fa8f41-3e19-4e16-c9c4-63bffaaea616"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.float64(-0.06289356546077182)"]},"metadata":{},"execution_count":68}]},{"cell_type":"code","source":["df.corr()['var_12']"],"metadata":{"id":"QTzxbmtptYDE","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1749905137089,"user_tz":-540,"elapsed":23,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"67cacf5e-2aec-4fb8-e0ac-f68b5742e2a1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["var_1     0.115311\n","var_2     0.166974\n","var_3     0.003620\n","var_4     0.208998\n","var_5    -0.042348\n","var_6    -0.025100\n","var_7    -0.062303\n","var_8    -0.078236\n","var_9     0.042523\n","var_10    0.166736\n","var_11   -0.126660\n","var_12    1.000000\n","var_13    0.007576\n","var_14    0.023459\n","var_15   -0.142116\n","var_16    0.072505\n","var_17   -0.057264\n","var_18   -0.210443\n","var_19   -0.095242\n","var_20   -0.030946\n","var_21   -0.038429\n","var_22   -0.056586\n","var_23    0.000764\n","var_24    0.021441\n","var_25   -0.069994\n","var_26   -0.316512\n","var_27   -0.015040\n","var_28    0.019495\n","var_29    0.100841\n","var_30   -0.063776\n","var_31    0.027528\n","var_32    0.185885\n","Name: var_12, dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>var_12</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>var_1</th>\n","      <td>0.115311</td>\n","    </tr>\n","    <tr>\n","      <th>var_2</th>\n","      <td>0.166974</td>\n","    </tr>\n","    <tr>\n","      <th>var_3</th>\n","      <td>0.003620</td>\n","    </tr>\n","    <tr>\n","      <th>var_4</th>\n","      <td>0.208998</td>\n","    </tr>\n","    <tr>\n","      <th>var_5</th>\n","      <td>-0.042348</td>\n","    </tr>\n","    <tr>\n","      <th>var_6</th>\n","      <td>-0.025100</td>\n","    </tr>\n","    <tr>\n","      <th>var_7</th>\n","      <td>-0.062303</td>\n","    </tr>\n","    <tr>\n","      <th>var_8</th>\n","      <td>-0.078236</td>\n","    </tr>\n","    <tr>\n","      <th>var_9</th>\n","      <td>0.042523</td>\n","    </tr>\n","    <tr>\n","      <th>var_10</th>\n","      <td>0.166736</td>\n","    </tr>\n","    <tr>\n","      <th>var_11</th>\n","      <td>-0.126660</td>\n","    </tr>\n","    <tr>\n","      <th>var_12</th>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>var_13</th>\n","      <td>0.007576</td>\n","    </tr>\n","    <tr>\n","      <th>var_14</th>\n","      <td>0.023459</td>\n","    </tr>\n","    <tr>\n","      <th>var_15</th>\n","      <td>-0.142116</td>\n","    </tr>\n","    <tr>\n","      <th>var_16</th>\n","      <td>0.072505</td>\n","    </tr>\n","    <tr>\n","      <th>var_17</th>\n","      <td>-0.057264</td>\n","    </tr>\n","    <tr>\n","      <th>var_18</th>\n","      <td>-0.210443</td>\n","    </tr>\n","    <tr>\n","      <th>var_19</th>\n","      <td>-0.095242</td>\n","    </tr>\n","    <tr>\n","      <th>var_20</th>\n","      <td>-0.030946</td>\n","    </tr>\n","    <tr>\n","      <th>var_21</th>\n","      <td>-0.038429</td>\n","    </tr>\n","    <tr>\n","      <th>var_22</th>\n","      <td>-0.056586</td>\n","    </tr>\n","    <tr>\n","      <th>var_23</th>\n","      <td>0.000764</td>\n","    </tr>\n","    <tr>\n","      <th>var_24</th>\n","      <td>0.021441</td>\n","    </tr>\n","    <tr>\n","      <th>var_25</th>\n","      <td>-0.069994</td>\n","    </tr>\n","    <tr>\n","      <th>var_26</th>\n","      <td>-0.316512</td>\n","    </tr>\n","    <tr>\n","      <th>var_27</th>\n","      <td>-0.015040</td>\n","    </tr>\n","    <tr>\n","      <th>var_28</th>\n","      <td>0.019495</td>\n","    </tr>\n","    <tr>\n","      <th>var_29</th>\n","      <td>0.100841</td>\n","    </tr>\n","    <tr>\n","      <th>var_30</th>\n","      <td>-0.063776</td>\n","    </tr>\n","    <tr>\n","      <th>var_31</th>\n","      <td>0.027528</td>\n","    </tr>\n","    <tr>\n","      <th>var_32</th>\n","      <td>0.185885</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":72}]},{"cell_type":"markdown","source":["1-3 :\n","**var_6 컬럼의 1,3사분위수 각각 IQR의 1.5배 벗어난 이상치의 숫자를 구하라 **\n","\n"],"metadata":{"id":"50mYUSLvtZ8z"}},{"cell_type":"code","source":["import pandas as pd\n","df = pd.read_csv('https://raw.githubusercontent.com/Datamanim/datarepo/main/krdatacertificate/e7_p3.csv')\n","df.head(5)"],"metadata":{"id":"Yiphi5des55K","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1749905186406,"user_tz":-540,"elapsed":220,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"9bd92319-f9f8-4a2f-d0cb-fbd5e8029e36"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      var_1     var_2     var_3     var_4     var_5     var_6     var_7  \\\n","0 -0.401584  0.007198 -0.134910 -0.419514 -0.686331 -1.174550 -0.499150   \n","1  1.064622 -0.531247  0.571185 -0.762243 -1.456043  0.355432  0.880010   \n","2  0.900195 -1.148496 -0.718437 -2.315266 -0.755505  0.630923  0.586027   \n","3  1.199227 -0.114200  0.101536 -1.851971 -0.672844  0.796077  0.644246   \n","4  0.607393  1.675917  1.063759 -0.799493 -0.959568 -0.103007 -0.245984   \n","\n","      var_8     var_9    var_10    var_11    var_12  \n","0 -0.557510  0.357347  0.844209  0.082097  0.475098  \n","1  0.523183 -0.141733  0.301472  0.840299 -0.045113  \n","2  0.086497 -0.381657 -1.602532  1.566340 -0.654105  \n","3 -0.836296 -1.707074  0.376281  1.303967  1.228015  \n","4 -0.059492  0.293592 -0.517044  0.100772  0.403833  "],"text/html":["\n","  <div id=\"df-fd5b473f-1ce1-43e0-b48e-08ef0926ea41\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>var_1</th>\n","      <th>var_2</th>\n","      <th>var_3</th>\n","      <th>var_4</th>\n","      <th>var_5</th>\n","      <th>var_6</th>\n","      <th>var_7</th>\n","      <th>var_8</th>\n","      <th>var_9</th>\n","      <th>var_10</th>\n","      <th>var_11</th>\n","      <th>var_12</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-0.401584</td>\n","      <td>0.007198</td>\n","      <td>-0.134910</td>\n","      <td>-0.419514</td>\n","      <td>-0.686331</td>\n","      <td>-1.174550</td>\n","      <td>-0.499150</td>\n","      <td>-0.557510</td>\n","      <td>0.357347</td>\n","      <td>0.844209</td>\n","      <td>0.082097</td>\n","      <td>0.475098</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.064622</td>\n","      <td>-0.531247</td>\n","      <td>0.571185</td>\n","      <td>-0.762243</td>\n","      <td>-1.456043</td>\n","      <td>0.355432</td>\n","      <td>0.880010</td>\n","      <td>0.523183</td>\n","      <td>-0.141733</td>\n","      <td>0.301472</td>\n","      <td>0.840299</td>\n","      <td>-0.045113</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.900195</td>\n","      <td>-1.148496</td>\n","      <td>-0.718437</td>\n","      <td>-2.315266</td>\n","      <td>-0.755505</td>\n","      <td>0.630923</td>\n","      <td>0.586027</td>\n","      <td>0.086497</td>\n","      <td>-0.381657</td>\n","      <td>-1.602532</td>\n","      <td>1.566340</td>\n","      <td>-0.654105</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.199227</td>\n","      <td>-0.114200</td>\n","      <td>0.101536</td>\n","      <td>-1.851971</td>\n","      <td>-0.672844</td>\n","      <td>0.796077</td>\n","      <td>0.644246</td>\n","      <td>-0.836296</td>\n","      <td>-1.707074</td>\n","      <td>0.376281</td>\n","      <td>1.303967</td>\n","      <td>1.228015</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.607393</td>\n","      <td>1.675917</td>\n","      <td>1.063759</td>\n","      <td>-0.799493</td>\n","      <td>-0.959568</td>\n","      <td>-0.103007</td>\n","      <td>-0.245984</td>\n","      <td>-0.059492</td>\n","      <td>0.293592</td>\n","      <td>-0.517044</td>\n","      <td>0.100772</td>\n","      <td>0.403833</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fd5b473f-1ce1-43e0-b48e-08ef0926ea41')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fd5b473f-1ce1-43e0-b48e-08ef0926ea41 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fd5b473f-1ce1-43e0-b48e-08ef0926ea41');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-88977320-05df-4e61-871b-054b3cb92fc1\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-88977320-05df-4e61-871b-054b3cb92fc1')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-88977320-05df-4e61-871b-054b3cb92fc1 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 523,\n  \"fields\": [\n    {\n      \"column\": \"var_1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0250228313873706,\n        \"min\": -3.415197084793609,\n        \"max\": 3.152032158645123,\n        \"num_unique_values\": 523,\n        \"samples\": [\n          1.967991016671074,\n          0.7044188431039141,\n          0.8857206888014227\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"var_2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.072789295361469,\n        \"min\": -3.399967744479373,\n        \"max\": 3.131716985752804,\n        \"num_unique_values\": 523,\n        \"samples\": [\n          0.2237003304998091,\n          -0.4026218058506245,\n          0.0904308576703705\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"var_3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9926651623375097,\n        \"min\": -3.773914931799248,\n        \"max\": 3.2680353658832897,\n        \"num_unique_values\": 523,\n        \"samples\": [\n          -0.7093700550247865,\n          -0.3550269345698874,\n          0.6128302225400591\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"var_4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0090975677691176,\n        \"min\": -2.6498263068264136,\n        \"max\": 2.8210147100570384,\n        \"num_unique_values\": 523,\n        \"samples\": [\n          -1.5702903690303551,\n          0.0847873937683201,\n          0.1921212680693319\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"var_5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.067049806222296,\n        \"min\": -2.7582173660158062,\n        \"max\": 3.69199862339586,\n        \"num_unique_values\": 523,\n        \"samples\": [\n          -0.3255954884073522,\n          0.3515674126483366,\n          -0.5066626285212201\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"var_6\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0104172110059901,\n        \"min\": -2.896629457281228,\n        \"max\": 2.87042465110537,\n        \"num_unique_values\": 523,\n        \"samples\": [\n          0.2753971661629429,\n          0.5998392024758619,\n          -0.0059303188816462\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"var_7\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.983499093507025,\n        \"min\": -3.891670876657178,\n        \"max\": 2.7184434332456653,\n        \"num_unique_values\": 523,\n        \"samples\": [\n          1.2931367511472909,\n          0.0817691996681123,\n          0.628179062791185\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"var_8\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9642206438296226,\n        \"min\": -2.434311727159252,\n        \"max\": 2.719325127111464,\n        \"num_unique_values\": 523,\n        \"samples\": [\n          1.5873328921147003,\n          1.09236622256362,\n          0.8555065366774095\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"var_9\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9520827130195831,\n        \"min\": -3.3734337890660075,\n        \"max\": 2.980990028358327,\n        \"num_unique_values\": 523,\n        \"samples\": [\n          -1.0531201141758997,\n          0.1760147361078084,\n          0.1361102976577007\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"var_10\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0041582466778816,\n        \"min\": -3.3538380943076302,\n        \"max\": 2.7146348902987074,\n        \"num_unique_values\": 523,\n        \"samples\": [\n          -2.830817434387324,\n          -1.8010333281767887,\n          0.4923308541333171\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"var_11\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.038367888482841,\n        \"min\": -3.3101550374663757,\n        \"max\": 3.15854648166546,\n        \"num_unique_values\": 523,\n        \"samples\": [\n          0.6362279318713966,\n          -0.7747738492286607,\n          -0.6737814587772948\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"var_12\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9766905089098014,\n        \"min\": -3.5061892732204054,\n        \"max\": 3.367715575232709,\n        \"num_unique_values\": 523,\n        \"samples\": [\n          1.374147946430166,\n          -1.0732323067292158,\n          0.2508478242407361\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":73}]},{"cell_type":"code","source":["q1 = df['var_6'].quantile(0.25)\n","q3 = df['var_6'].quantile(0.75)\n","IQR = q3 - q1\n","lower = df['var_6'] < q1 - IQR * 1.5\n","upper = df['var_6'] > q3 + IQR * 1.5\n","# lower.sum()\n","upper.sum()\n","print(lower.sum() + upper.sum())"],"metadata":{"id":"T9X2Xs7Zs523","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1749905603690,"user_tz":-540,"elapsed":12,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"d3db610a-be95-43d6-b96d-a3a419cc70af"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["8\n"]}]},{"cell_type":"markdown","source":["작업 2유형 : 제주업종별카드이용정보 / 종속변수 :이용금액 , 평가지표 : rmse\n","\n"],"metadata":{"id":"38BW1JxVb58d"}},{"cell_type":"code","source":["import pandas as pd\n","train = pd.read_csv('https://raw.githubusercontent.com/Datamanim/datarepo/main/krdatacertificate/e7_p2_train2.csv')\n","test = pd.read_csv('https://raw.githubusercontent.com/Datamanim/datarepo/main/krdatacertificate/e7_p2_test2.csv')\n","\n","display(train.head(2))\n","test.head(2)"],"metadata":{"id":"OPWTy3Dos50f","colab":{"base_uri":"https://localhost:8080/","height":208},"executionInfo":{"status":"ok","timestamp":1749906202779,"user_tz":-540,"elapsed":220,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"a188eff8-be67-4448-fdba-f1b15586085a"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["        ID      연월  업종명 이용자구분    성별  이용자수   이용건수        이용금액\n","0  ID_5020  202201  여관업    법인  알수없음  7693  12105  3049021809\n","1  ID_5021  202201  여관업  제주도민    남성  3990   4291   294163241"],"text/html":["\n","  <div id=\"df-d9ec9b81-111b-46cd-81a9-5abe90a55257\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>연월</th>\n","      <th>업종명</th>\n","      <th>이용자구분</th>\n","      <th>성별</th>\n","      <th>이용자수</th>\n","      <th>이용건수</th>\n","      <th>이용금액</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ID_5020</td>\n","      <td>202201</td>\n","      <td>여관업</td>\n","      <td>법인</td>\n","      <td>알수없음</td>\n","      <td>7693</td>\n","      <td>12105</td>\n","      <td>3049021809</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>ID_5021</td>\n","      <td>202201</td>\n","      <td>여관업</td>\n","      <td>제주도민</td>\n","      <td>남성</td>\n","      <td>3990</td>\n","      <td>4291</td>\n","      <td>294163241</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d9ec9b81-111b-46cd-81a9-5abe90a55257')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d9ec9b81-111b-46cd-81a9-5abe90a55257 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d9ec9b81-111b-46cd-81a9-5abe90a55257');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-45f4f67b-d6b2-42d2-92b9-e4caa1ce7d9f\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-45f4f67b-d6b2-42d2-92b9-e4caa1ce7d9f')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-45f4f67b-d6b2-42d2-92b9-e4caa1ce7d9f button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"test","summary":"{\n  \"name\": \"test\",\n  \"rows\": 5020,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3661,\n        \"samples\": [\n          \"ID_5205\",\n          \"ID_4998\",\n          \"ID_6791\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc5f0\\uc6d4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 171,\n        \"min\": 201801,\n        \"max\": 202310,\n        \"num_unique_values\": 70,\n        \"samples\": [\n          201901,\n          201911,\n          202205\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc5c5\\uc885\\uba85\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 15,\n        \"samples\": [\n          \"\\uc804\\uc2dc \\ubc0f \\ud589\\uc0ac \\ub300\\ud589\\uc5c5\",\n          \"\\ud53c\\uc790, \\ud584\\ubc84\\uac70, \\uc0cc\\ub4dc\\uc704\\uce58 \\ubc0f \\uc720\\uc0ac \\uc74c\\uc2dd\\uc810\\uc5c5\",\n          \"\\ud55c\\uc2dd \\uc74c\\uc2dd\\uc810\\uc5c5\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc774\\uc6a9\\uc790\\uad6c\\ubd84\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"\\uc81c\\uc8fc\\ub3c4\\ubbfc\",\n          \"\\ubc95\\uc778\",\n          \"\\ub0b4\\uad6d\\uc778\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc131\\ubcc4\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\uc5ec\\uc131\",\n          \"\\uc54c\\uc218\\uc5c6\\uc74c\",\n          \"\\ub0a8\\uc131\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc774\\uc6a9\\uc790\\uc218\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 58885,\n        \"min\": 20,\n        \"max\": 486235,\n        \"num_unique_values\": 2823,\n        \"samples\": [\n          37306,\n          33895,\n          155578\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc774\\uc6a9\\uac74\\uc218\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 67429,\n        \"min\": 20,\n        \"max\": 575483,\n        \"num_unique_values\": 2849,\n        \"samples\": [\n          227440,\n          61339,\n          39585\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["        ID      연월         업종명 이용자구분    성별    이용자수    이용건수\n","0  ID_2575  201911     한식 음식점업  제주도민    여성  153363  163462\n","1  ID_6637  202305  건강보조식품 소매업    법인  알수없음     136     144"],"text/html":["\n","  <div id=\"df-f9bdd8f5-88db-4b78-8c44-c352a8c80180\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>연월</th>\n","      <th>업종명</th>\n","      <th>이용자구분</th>\n","      <th>성별</th>\n","      <th>이용자수</th>\n","      <th>이용건수</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ID_2575</td>\n","      <td>201911</td>\n","      <td>한식 음식점업</td>\n","      <td>제주도민</td>\n","      <td>여성</td>\n","      <td>153363</td>\n","      <td>163462</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>ID_6637</td>\n","      <td>202305</td>\n","      <td>건강보조식품 소매업</td>\n","      <td>법인</td>\n","      <td>알수없음</td>\n","      <td>136</td>\n","      <td>144</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f9bdd8f5-88db-4b78-8c44-c352a8c80180')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f9bdd8f5-88db-4b78-8c44-c352a8c80180 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f9bdd8f5-88db-4b78-8c44-c352a8c80180');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-12476333-6a10-435a-8be5-d9ca09eb5185\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-12476333-6a10-435a-8be5-d9ca09eb5185')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-12476333-6a10-435a-8be5-d9ca09eb5185 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"test","summary":"{\n  \"name\": \"test\",\n  \"rows\": 5020,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3661,\n        \"samples\": [\n          \"ID_5205\",\n          \"ID_4998\",\n          \"ID_6791\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc5f0\\uc6d4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 171,\n        \"min\": 201801,\n        \"max\": 202310,\n        \"num_unique_values\": 70,\n        \"samples\": [\n          201901,\n          201911,\n          202205\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc5c5\\uc885\\uba85\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 15,\n        \"samples\": [\n          \"\\uc804\\uc2dc \\ubc0f \\ud589\\uc0ac \\ub300\\ud589\\uc5c5\",\n          \"\\ud53c\\uc790, \\ud584\\ubc84\\uac70, \\uc0cc\\ub4dc\\uc704\\uce58 \\ubc0f \\uc720\\uc0ac \\uc74c\\uc2dd\\uc810\\uc5c5\",\n          \"\\ud55c\\uc2dd \\uc74c\\uc2dd\\uc810\\uc5c5\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc774\\uc6a9\\uc790\\uad6c\\ubd84\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"\\uc81c\\uc8fc\\ub3c4\\ubbfc\",\n          \"\\ubc95\\uc778\",\n          \"\\ub0b4\\uad6d\\uc778\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc131\\ubcc4\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\uc5ec\\uc131\",\n          \"\\uc54c\\uc218\\uc5c6\\uc74c\",\n          \"\\ub0a8\\uc131\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc774\\uc6a9\\uc790\\uc218\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 58885,\n        \"min\": 20,\n        \"max\": 486235,\n        \"num_unique_values\": 2823,\n        \"samples\": [\n          37306,\n          33895,\n          155578\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc774\\uc6a9\\uac74\\uc218\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 67429,\n        \"min\": 20,\n        \"max\": 575483,\n        \"num_unique_values\": 2849,\n        \"samples\": [\n          227440,\n          61339,\n          39585\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":107}]},{"cell_type":"code","source":["#연월을 넣고 할때랑 뺴고 할떄랑 차이 보기!"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"s8pKRe3rhMwU","executionInfo":{"status":"ok","timestamp":1749905901263,"user_tz":-540,"elapsed":47,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"436513d5-bbe4-47cc-cf2e-8e622a64e381"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 2245 entries, 0 to 2244\n","Data columns (total 8 columns):\n"," #   Column  Non-Null Count  Dtype \n","---  ------  --------------  ----- \n"," 0   ID      2245 non-null   object\n"," 1   연월      2245 non-null   int64 \n"," 2   업종명     2245 non-null   object\n"," 3   이용자구분   2245 non-null   object\n"," 4   성별      2245 non-null   object\n"," 5   이용자수    2245 non-null   int64 \n"," 6   이용건수    2245 non-null   int64 \n"," 7   이용금액    2245 non-null   int64 \n","dtypes: int64(4), object(4)\n","memory usage: 140.4+ KB\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3bNzcUfos2zv","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1749907107970,"user_tz":-540,"elapsed":898,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"973bbc22-ff41-4128-cb07-b80c57f968fe"},"outputs":[{"output_type":"stream","name":"stdout","text":["       이용자수   이용건수\n","0      7693  12105\n","1      3990   4291\n","2      1495   1620\n","3     16299  18588\n","4     17350  19922\n","...     ...    ...\n","2240     56     67\n","2241    488    521\n","2242   1318   1410\n","2243   2611   2798\n","2244    169    205\n","\n","[2245 rows x 2 columns]\n","(1796, 5) (449, 5) (1796,) (449,)\n"]}],"source":["#연월 빼고 먼저진행\n","import pandas as pd\n","train = pd.read_csv('https://raw.githubusercontent.com/Datamanim/datarepo/main/krdatacertificate/e7_p2_train2.csv')\n","test = pd.read_csv('https://raw.githubusercontent.com/Datamanim/datarepo/main/krdatacertificate/e7_p2_test2.csv')\n","\n","train.select_dtypes(include='object')\n","train = train.drop(['ID', '연월'],axis=1)\n","test = test.drop(['ID', '연월'],axis=1)\n","target = train.pop('이용금액')\n","\n","print(train.select_dtypes(exclude='object'))\n","#스켈링\n","from sklearn.preprocessing import RobustScaler\n","scaler = RobustScaler()\n","col = ['이용자수','이용건수']\n","train[col] = scaler.fit_transform(train[col])\n","test[col] = scaler.transform(test[col])\n","\n","#인코딩\n","train.select_dtypes(include='object').describe()\n","#성별이 알수없음이 비중이 40%는됨\n","from sklearn.preprocessing import LabelEncoder\n","le = LabelEncoder()\n","cols = ['업종명', '이용자구분', '성별']\n","for col in cols:\n","  train[col] = le.fit_transform(train[col])\n","  test[col] = le.transform(test[col])\n","\n","#데이터 나누기\n","from sklearn.model_selection import train_test_split\n","X_tr, X_val, y_tr, y_val = train_test_split(train,\n","                                            target,\n","                                            test_size=0.2,\n","                                            random_state=25)\n","print(X_tr.shape, X_val.shape, y_tr.shape, y_val.shape)\n","\n","#모델링\n","from sklearn.ensemble import RandomForestRegressor\n","model = RandomForestRegressor()\n","model.fit(X_tr, y_tr)\n","pred = model.predict(X_val)\n","pred\n","\n","#검증 rmse\n","from sklearn.metrics import root_mean_squared_error\n","rmse = root_mean_squared_error\n","rmse(y_val, pred)\n","\n","# 180,702,723\n","# target.mean()\n","# target의 평균 :1,021,908,988\n","# rmse의 값 : 180,702,723\n","# 약 17%로 괜찮은 모델\n","\n","#최종test 및 제출\n","real_pred= model.predict(test)\n","submit = pd.DataFrame({\n","                        'pred' : real_pred})\n","submit.to_csv(\"result.csv\",index=False)"]},{"cell_type":"markdown","source":["작업 3유형"],"metadata":{"id":"MKaoILmkcBvd"}},{"cell_type":"markdown","source":["종속변수 : Target"],"metadata":{"id":"urn7rMaTcEMc"}},{"cell_type":"code","source":["import pandas as pd\n","df=pd.read_csv('https://raw.githubusercontent.com/Datamanim/datarepo/main/krdatacertificate/e7_p3_1.csv')\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":236},"id":"_mvUv-b9cBal","executionInfo":{"status":"ok","timestamp":1749907161457,"user_tz":-540,"elapsed":250,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"7b9f46da-2186-4ac6-95e2-6a0b8660e57c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Target        v1        v2        v3        v4        v5        v6  \\\n","0  21.650072  0.496714 -0.138264  0.647689  1.523030 -0.234153 -0.234137   \n","1 -19.469855 -0.225776  0.067528 -1.424748 -0.544383  0.110923 -1.150994   \n","2 -24.475600 -0.115648 -0.301104 -1.478522 -0.719844 -0.460639  1.057122   \n","3  13.476831 -1.196207  0.812526  1.356240 -0.072010  1.003533  0.361636   \n","4   3.505322 -0.808494 -0.501757  0.915402  0.328751 -0.529760  0.513267   \n","\n","         v7        v8        v9  ...       v12       v13       v14       v15  \\\n","0  1.579213  0.767435 -0.469474  ... -0.465730  0.241962 -1.913280 -1.724918   \n","1  0.375698 -0.600639 -0.291694  ... -0.013497 -1.057711  0.822545 -1.220844   \n","2  0.343618 -1.763040  0.324084  ...  0.611676  1.031000  0.931280 -0.839218   \n","3 -0.645120  0.361396  1.538037  ... -2.619745  0.821903  0.087047 -0.299007   \n","4  0.097078  0.968645 -0.702053  ... -1.463515  0.296120  0.261055  0.005113   \n","\n","        v16       v17       v18       v19       v20       v21  \n","0 -0.562288 -1.012831  0.314247 -0.908024 -1.412304  1.465649  \n","1  0.208864 -1.959670 -1.328186  0.196861  0.738467  0.171368  \n","2 -0.309212  0.331263  0.975545 -0.479174 -0.185659 -1.106335  \n","3  0.091761 -1.987569 -0.219672  0.357113  1.477894 -0.518270  \n","4 -0.234587 -1.415371 -0.420645 -0.342715 -0.802277 -0.161286  \n","\n","[5 rows x 22 columns]"],"text/html":["\n","  <div id=\"df-b4bfd1cb-34c8-465d-90d7-646e5af1f801\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Target</th>\n","      <th>v1</th>\n","      <th>v2</th>\n","      <th>v3</th>\n","      <th>v4</th>\n","      <th>v5</th>\n","      <th>v6</th>\n","      <th>v7</th>\n","      <th>v8</th>\n","      <th>v9</th>\n","      <th>...</th>\n","      <th>v12</th>\n","      <th>v13</th>\n","      <th>v14</th>\n","      <th>v15</th>\n","      <th>v16</th>\n","      <th>v17</th>\n","      <th>v18</th>\n","      <th>v19</th>\n","      <th>v20</th>\n","      <th>v21</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>21.650072</td>\n","      <td>0.496714</td>\n","      <td>-0.138264</td>\n","      <td>0.647689</td>\n","      <td>1.523030</td>\n","      <td>-0.234153</td>\n","      <td>-0.234137</td>\n","      <td>1.579213</td>\n","      <td>0.767435</td>\n","      <td>-0.469474</td>\n","      <td>...</td>\n","      <td>-0.465730</td>\n","      <td>0.241962</td>\n","      <td>-1.913280</td>\n","      <td>-1.724918</td>\n","      <td>-0.562288</td>\n","      <td>-1.012831</td>\n","      <td>0.314247</td>\n","      <td>-0.908024</td>\n","      <td>-1.412304</td>\n","      <td>1.465649</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>-19.469855</td>\n","      <td>-0.225776</td>\n","      <td>0.067528</td>\n","      <td>-1.424748</td>\n","      <td>-0.544383</td>\n","      <td>0.110923</td>\n","      <td>-1.150994</td>\n","      <td>0.375698</td>\n","      <td>-0.600639</td>\n","      <td>-0.291694</td>\n","      <td>...</td>\n","      <td>-0.013497</td>\n","      <td>-1.057711</td>\n","      <td>0.822545</td>\n","      <td>-1.220844</td>\n","      <td>0.208864</td>\n","      <td>-1.959670</td>\n","      <td>-1.328186</td>\n","      <td>0.196861</td>\n","      <td>0.738467</td>\n","      <td>0.171368</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-24.475600</td>\n","      <td>-0.115648</td>\n","      <td>-0.301104</td>\n","      <td>-1.478522</td>\n","      <td>-0.719844</td>\n","      <td>-0.460639</td>\n","      <td>1.057122</td>\n","      <td>0.343618</td>\n","      <td>-1.763040</td>\n","      <td>0.324084</td>\n","      <td>...</td>\n","      <td>0.611676</td>\n","      <td>1.031000</td>\n","      <td>0.931280</td>\n","      <td>-0.839218</td>\n","      <td>-0.309212</td>\n","      <td>0.331263</td>\n","      <td>0.975545</td>\n","      <td>-0.479174</td>\n","      <td>-0.185659</td>\n","      <td>-1.106335</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>13.476831</td>\n","      <td>-1.196207</td>\n","      <td>0.812526</td>\n","      <td>1.356240</td>\n","      <td>-0.072010</td>\n","      <td>1.003533</td>\n","      <td>0.361636</td>\n","      <td>-0.645120</td>\n","      <td>0.361396</td>\n","      <td>1.538037</td>\n","      <td>...</td>\n","      <td>-2.619745</td>\n","      <td>0.821903</td>\n","      <td>0.087047</td>\n","      <td>-0.299007</td>\n","      <td>0.091761</td>\n","      <td>-1.987569</td>\n","      <td>-0.219672</td>\n","      <td>0.357113</td>\n","      <td>1.477894</td>\n","      <td>-0.518270</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3.505322</td>\n","      <td>-0.808494</td>\n","      <td>-0.501757</td>\n","      <td>0.915402</td>\n","      <td>0.328751</td>\n","      <td>-0.529760</td>\n","      <td>0.513267</td>\n","      <td>0.097078</td>\n","      <td>0.968645</td>\n","      <td>-0.702053</td>\n","      <td>...</td>\n","      <td>-1.463515</td>\n","      <td>0.296120</td>\n","      <td>0.261055</td>\n","      <td>0.005113</td>\n","      <td>-0.234587</td>\n","      <td>-1.415371</td>\n","      <td>-0.420645</td>\n","      <td>-0.342715</td>\n","      <td>-0.802277</td>\n","      <td>-0.161286</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 22 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b4bfd1cb-34c8-465d-90d7-646e5af1f801')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b4bfd1cb-34c8-465d-90d7-646e5af1f801 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b4bfd1cb-34c8-465d-90d7-646e5af1f801');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-8246c4bd-1710-4842-8b1c-eebc0e4595a7\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8246c4bd-1710-4842-8b1c-eebc0e4595a7')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-8246c4bd-1710-4842-8b1c-eebc0e4595a7 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":123}]},{"cell_type":"markdown","source":["3-1-a : 선형관계 가장 큰 변수 찾아 상관계수를 구하여라"],"metadata":{"id":"fWoganB0cLVE"}},{"cell_type":"code","source":["#선형관계? ->어떻게 파악 ->상관관계 파악후 상관계수 구하기??? ols가 선형관계?\n","#아니면 선형 회귀모델을 구하라는건가?\n","#★★★선형관계는 상관관계를 corr로 보라는거고 Target과 상관관계 수치가 상관 계수임\n","df.corr()['Target'].abs().sort_values(ascending=False) #여기서 나온 상관관계값이 상관계수임\n","#v3 : 0.627025\n"],"metadata":{"id":"7yhVxBi5c-_e","colab":{"base_uri":"https://localhost:8080/","height":774},"executionInfo":{"status":"ok","timestamp":1749907489789,"user_tz":-540,"elapsed":48,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"ddca6610-d4bb-4a69-f4e6-601bdeb4b810"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Target    1.000000\n","v3        0.627025\n","v4        0.600548\n","v2        0.394673\n","v1        0.345906\n","v5        0.168748\n","v13       0.063199\n","v6        0.052110\n","v15       0.051197\n","v18       0.049140\n","v8        0.047399\n","v9        0.038795\n","v12       0.026284\n","v11       0.023574\n","v17       0.021494\n","v21       0.019341\n","v16       0.018492\n","v19       0.015678\n","v7        0.006809\n","v10       0.005766\n","v14       0.005186\n","v20       0.003682\n","Name: Target, dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Target</th>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>v3</th>\n","      <td>0.627025</td>\n","    </tr>\n","    <tr>\n","      <th>v4</th>\n","      <td>0.600548</td>\n","    </tr>\n","    <tr>\n","      <th>v2</th>\n","      <td>0.394673</td>\n","    </tr>\n","    <tr>\n","      <th>v1</th>\n","      <td>0.345906</td>\n","    </tr>\n","    <tr>\n","      <th>v5</th>\n","      <td>0.168748</td>\n","    </tr>\n","    <tr>\n","      <th>v13</th>\n","      <td>0.063199</td>\n","    </tr>\n","    <tr>\n","      <th>v6</th>\n","      <td>0.052110</td>\n","    </tr>\n","    <tr>\n","      <th>v15</th>\n","      <td>0.051197</td>\n","    </tr>\n","    <tr>\n","      <th>v18</th>\n","      <td>0.049140</td>\n","    </tr>\n","    <tr>\n","      <th>v8</th>\n","      <td>0.047399</td>\n","    </tr>\n","    <tr>\n","      <th>v9</th>\n","      <td>0.038795</td>\n","    </tr>\n","    <tr>\n","      <th>v12</th>\n","      <td>0.026284</td>\n","    </tr>\n","    <tr>\n","      <th>v11</th>\n","      <td>0.023574</td>\n","    </tr>\n","    <tr>\n","      <th>v17</th>\n","      <td>0.021494</td>\n","    </tr>\n","    <tr>\n","      <th>v21</th>\n","      <td>0.019341</td>\n","    </tr>\n","    <tr>\n","      <th>v16</th>\n","      <td>0.018492</td>\n","    </tr>\n","    <tr>\n","      <th>v19</th>\n","      <td>0.015678</td>\n","    </tr>\n","    <tr>\n","      <th>v7</th>\n","      <td>0.006809</td>\n","    </tr>\n","    <tr>\n","      <th>v10</th>\n","      <td>0.005766</td>\n","    </tr>\n","    <tr>\n","      <th>v14</th>\n","      <td>0.005186</td>\n","    </tr>\n","    <tr>\n","      <th>v20</th>\n","      <td>0.003682</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":132}]},{"cell_type":"markdown","source":["3-2-aTarget 변수를 종속변수로 하여 다중선형회귀모델링을 진행했을 때 v2 컬럼의 회귀 계수는?\n","\n"],"metadata":{"id":"kj0D4LJEnZfE"}},{"cell_type":"code","source":["다중선형회기 여러개 ols('종속변수 ~  + + + 너무김)\n","그래서 import statsmodels.api as sm으로 씀)\n","\n","import statsmodels.api as sm\n","X= df.drop('Target',axis=1)\n","X = sm.add.constant(X) #상수항절편 추가\n","y = df['Target']\n","\n","model = sm.OLS(y, X).fit()\n","print(model.summary())"],"metadata":{"id":"4aOq90gHpLnL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#다중선형회귀 -> ols\n","#다중 선형회귀는 기본적으로 상수항이 없어서 sm.add_constant(X) 안하면 결과가 다르게 나옴 꼭 해야함!\n","import statsmodels.api as sm\n","X= df.drop('Target',axis=1)\n","X = sm.add_constant(X) #상수항 추가\n","y = df['Target']\n","\n","model = sm.OLS(y, X).fit()\n","print(model.summary())\n","model.params['v2']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uqTTVJe0nrpa","executionInfo":{"status":"ok","timestamp":1749907972780,"user_tz":-540,"elapsed":116,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"eb116587-5bb2-479c-9238-20068084978c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["                            OLS Regression Results                            \n","==============================================================================\n","Dep. Variable:                 Target   R-squared:                       0.999\n","Model:                            OLS   Adj. R-squared:                  0.999\n","Method:                 Least Squares   F-statistic:                 5.228e+04\n","Date:                Sat, 14 Jun 2025   Prob (F-statistic):               0.00\n","Time:                        13:32:53   Log-Likelihood:                -707.67\n","No. Observations:                1000   AIC:                             1459.\n","Df Residuals:                     978   BIC:                             1567.\n","Df Model:                          21                                         \n","Covariance Type:            nonrobust                                         \n","==============================================================================\n","                 coef    std err          t      P>|t|      [0.025      0.975]\n","------------------------------------------------------------------------------\n","const          0.0118      0.016      0.739      0.460      -0.019       0.043\n","v1             5.5360      0.016    353.805      0.000       5.505       5.567\n","v2             6.4403      0.016    410.550      0.000       6.410       6.471\n","v3             9.6506      0.016    614.757      0.000       9.620       9.681\n","v4             8.9758      0.016    576.776      0.000       8.945       9.006\n","v5             1.9523      0.016    124.711      0.000       1.922       1.983\n","v6             0.0145      0.016      0.899      0.369      -0.017       0.046\n","v7            -0.0023      0.016     -0.140      0.888      -0.034       0.029\n","v8             0.0173      0.016      1.096      0.274      -0.014       0.048\n","v9            -0.0123      0.016     -0.781      0.435      -0.043       0.019\n","v10           -0.0019      0.016     -0.117      0.906      -0.033       0.030\n","v11            0.0171      0.016      1.099      0.272      -0.013       0.048\n","v12            0.0161      0.016      1.018      0.309      -0.015       0.047\n","v13           -0.0167      0.016     -1.058      0.290      -0.048       0.014\n","v14            0.0068      0.016      0.412      0.681      -0.026       0.039\n","v15           -0.0432      0.017     -2.605      0.009      -0.076      -0.011\n","v16            0.0117      0.016      0.749      0.454      -0.019       0.043\n","v17            0.0156      0.015      1.012      0.312      -0.015       0.046\n","v18            0.0100      0.016      0.628      0.530      -0.021       0.041\n","v19           -0.0174      0.016     -1.119      0.263      -0.048       0.013\n","v20            0.0098      0.015      0.637      0.524      -0.020       0.040\n","v21            0.0015      0.016      0.092      0.927      -0.030       0.033\n","==============================================================================\n","Omnibus:                        4.701   Durbin-Watson:                   2.013\n","Prob(Omnibus):                  0.095   Jarque-Bera (JB):                4.745\n","Skew:                          -0.167   Prob(JB):                       0.0932\n","Kurtosis:                       2.955   Cond. No.                         1.32\n","==============================================================================\n","\n","Notes:\n","[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n"]},{"output_type":"execute_result","data":{"text/plain":["np.float64(6.4403013648430605)"]},"metadata":{},"execution_count":137}]},{"cell_type":"markdown","source":["3-3-a :회귀 계수들이 가지는 p값들 중 최대 값은?"],"metadata":{"id":"Qfy_UhkVcOv3"}},{"cell_type":"code","source":["model.pvalues.max()\n","# model.pvalues.idxmax()"],"metadata":{"id":"TLsSCSOQcBYc","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1749908265060,"user_tz":-540,"elapsed":13,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"e2a23eea-c4a8-478e-c948-64c094f1673c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9265545986908206"]},"metadata":{},"execution_count":147}]},{"cell_type":"markdown","source":["심장병 발병 예측 / 종속변수 target 1: 발병"],"metadata":{"id":"TFlceVufcTl3"}},{"cell_type":"markdown","source":["train 데이터는 앞의 210개 행을, test데이터는 나머지 부분을 사용한다"],"metadata":{"id":"OThfbAvccVUz"}},{"cell_type":"code","source":["import pandas as pd\n","df= pd.read_csv('https://raw.githubusercontent.com/Datamanim/datarepo/main/krdatacertificate/e7_p3_t.csv')\n","df.head()\n","\n","train = df.iloc[:210]\n","test = df.iloc[201:]"],"metadata":{"id":"Qr7cBnzncBWd","executionInfo":{"status":"ok","timestamp":1749950472290,"user_tz":-540,"elapsed":148,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}}},"execution_count":34,"outputs":[]},{"cell_type":"markdown","source":["3-4 : train 데이터로 target을 종속변수로 로지스틱 회귀를 진행할 때 age 컬럼의 오즈비를 구하여라\n","\n"],"metadata":{"id":"3JNmN7cecX2n"}},{"cell_type":"code","source":["#이거 상수항 안만들어졌는데 그렇게 해도 되는지 확인하기 -> 원래는 상수항 만드는게 맞는듯\n","from statsmodels.formula.api import logit\n","import statsmodels.api as sm\n","X = train.drop('target', axis=1)\n","X = sm.add_constant(X) #logit 함수도 sm 쓰면 꼭 상수항 추가해줘야함 add 다음 . 이아니라 _(언더바)임\n","y = train['target']\n","model = sm.Logit(y,X).fit() #이렇게할떄는 logit이 아니고 대문자 Logit임\n","print(model.summary())\n","\n","import numpy as np\n","np.exp(model.params['age'])"],"metadata":{"id":"z7g5NRb1c9bv","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1749950473978,"user_tz":-540,"elapsed":36,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"26040f66-067e-4ae4-8ccb-2a2737fed72d"},"execution_count":35,"outputs":[{"output_type":"stream","name":"stdout","text":["Optimization terminated successfully.\n","         Current function value: 0.320236\n","         Iterations 7\n","                           Logit Regression Results                           \n","==============================================================================\n","Dep. Variable:                 target   No. Observations:                  210\n","Model:                          Logit   Df Residuals:                      196\n","Method:                           MLE   Df Model:                           13\n","Date:                Sun, 15 Jun 2025   Pseudo R-squ.:                  0.5350\n","Time:                        01:21:15   Log-Likelihood:                -67.250\n","converged:                       True   LL-Null:                       -144.61\n","Covariance Type:            nonrobust   LLR p-value:                 2.308e-26\n","==============================================================================\n","                 coef    std err          z      P>|z|      [0.025      0.975]\n","------------------------------------------------------------------------------\n","const        -10.7525      3.655     -2.942      0.003     -17.917      -3.588\n","age           -0.0056      0.030     -0.184      0.854      -0.065       0.054\n","sex            1.5477      0.666      2.323      0.020       0.242       2.853\n","cp             0.8332      0.259      3.215      0.001       0.325       1.341\n","trestbps       0.0320      0.014      2.356      0.018       0.005       0.059\n","chol           0.0068      0.005      1.448      0.148      -0.002       0.016\n","fbs           -1.1463      0.655     -1.749      0.080      -2.431       0.138\n","restecg        0.3812      0.234      1.631      0.103      -0.077       0.839\n","thalach       -0.0207      0.014     -1.523      0.128      -0.047       0.006\n","exang          0.9930      0.494      2.010      0.044       0.025       1.961\n","oldpeak        0.3693      0.255      1.446      0.148      -0.131       0.870\n","slope          0.6106      0.439      1.390      0.165      -0.251       1.472\n","ca             0.9819      0.315      3.120      0.002       0.365       1.599\n","thal           0.3474      0.124      2.801      0.005       0.104       0.590\n","==============================================================================\n"]},{"output_type":"execute_result","data":{"text/plain":["np.float64(0.9944442574640207)"]},"metadata":{},"execution_count":35}]},{"cell_type":"markdown","source":["3-5 : train으로 로지스틱 회귀 진행했을 경우 잔차 이탈도 (residual deviance)를 계산하라\n","\n"],"metadata":{"id":"HmK_gBv0cjZ2"}},{"cell_type":"code","source":["#잔차이탈도는 직접 구해야함\n","import statsmodels.api as sm\n","model2 = sm.GLM(y,X, family=sm.families.Binomial()).fit()\n","print(model2.deviance)"],"metadata":{"id":"pBh7DyBpc9rA","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1749949657936,"user_tz":-540,"elapsed":39,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"0d13f3d9-ab8a-4985-bb03-e91a52106508"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["                 Generalized Linear Model Regression Results                  \n","==============================================================================\n","Dep. Variable:                 target   No. Observations:                  210\n","Model:                            GLM   Df Residuals:                      196\n","Model Family:                Binomial   Df Model:                           13\n","Link Function:                  Logit   Scale:                          1.0000\n","Method:                          IRLS   Log-Likelihood:                -67.250\n","Date:                Sun, 15 Jun 2025   Deviance:                       134.50\n","Time:                        01:07:39   Pearson chi2:                     183.\n","No. Iterations:                     6   Pseudo R-squ. (CS):             0.5213\n","Covariance Type:            nonrobust                                         \n","==============================================================================\n","                 coef    std err          z      P>|z|      [0.025      0.975]\n","------------------------------------------------------------------------------\n","const        -10.7525      3.655     -2.942      0.003     -17.917      -3.588\n","age           -0.0056      0.030     -0.184      0.854      -0.065       0.054\n","sex            1.5477      0.666      2.323      0.020       0.242       2.853\n","cp             0.8332      0.259      3.215      0.001       0.325       1.341\n","trestbps       0.0320      0.014      2.356      0.018       0.005       0.059\n","chol           0.0068      0.005      1.448      0.148      -0.002       0.016\n","fbs           -1.1463      0.655     -1.749      0.080      -2.431       0.138\n","restecg        0.3812      0.234      1.631      0.103      -0.077       0.839\n","thalach       -0.0207      0.014     -1.523      0.128      -0.047       0.006\n","exang          0.9930      0.494      2.010      0.044       0.025       1.961\n","oldpeak        0.3693      0.255      1.446      0.148      -0.131       0.870\n","slope          0.6106      0.439      1.390      0.165      -0.251       1.472\n","ca             0.9819      0.315      3.120      0.002       0.365       1.599\n","thal           0.3474      0.124      2.801      0.005       0.104       0.590\n","==============================================================================\n"]},{"output_type":"execute_result","data":{"text/plain":["np.float64(134.49903911342716)"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["model2 = sm.GLM(y,X,family=sm.families.Binomial()).fit()\n","model2.deviance"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KNyb93xvIaWI","executionInfo":{"status":"ok","timestamp":1749949769073,"user_tz":-540,"elapsed":25,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"a9be417c-4d37-4e82-9b1a-80f94fb30841"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.float64(134.49903911342716)"]},"metadata":{},"execution_count":25}]},{"cell_type":"markdown","source":["3-6 :train으로 로지스틱 회귀 진행했을 경우 로짓 우도값을 도출하라\n","\n"],"metadata":{"id":"kkxEaJUBclTm"}},{"cell_type":"code","source":["model.llf\n","#  (LLF임)"],"metadata":{"id":"f1ikiVJ9c96n","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1749949917006,"user_tz":-540,"elapsed":47,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"1776d856-9d40-420c-b97c-f50fdad9be58"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.float64(-67.24951955671358)"]},"metadata":{},"execution_count":29}]},{"cell_type":"markdown","source":["3-7: test 데이터의 독립변수로 target 예측 후 오류율을 구하여라\n","\n"],"metadata":{"id":"fW7TYu5tcnDp"}},{"cell_type":"code","source":["#1.test데이터에서 독립변수 준비 + 상수항 추가\n","X_test = sm.add_constant(test.drop(columns=['target']),has_constant='add')\n","\n","#1. 확률예측\n","probs = model.predict(X_test)\n","\n","#2. 이진 분류로 변환(임계값0.5)\n","# 0과 1로 분류해야하므로 0.5초과를 0.5 이하를 0으로 분류\n","pred = (probs > 0.5).astype(int)\n","\n","#3. 실제값과 비교하여 정확도 -> 오류율 = 1- 정확도\n","from sklearn.metrics import accuracy_score\n","error_rate = 1- accuracy_score(test['target'], pred)\n","error_rate"],"metadata":{"id":"PSMNp14Lc-Sf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1749950690398,"user_tz":-540,"elapsed":36,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"046f270f-7574-40a4-b39d-ec06faffa228"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.19791666666666663"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":[],"metadata":{"id":"3ixb8Wu8cBUX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"7D_y-yOGcBSE"},"execution_count":null,"outputs":[]}]}