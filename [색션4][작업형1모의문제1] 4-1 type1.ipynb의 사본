{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1NJplgDHLm1SVzGkCHix5YanRSZrgMEkH","timestamp":1729583080830}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# 작업형1 모의문제1\n","- data : members.csv\n","**- 한 개의 셀만 사용해서 문제를 풀어주세요**\n","    tip 중간중간 확인할때는 print를 사용해서 확인해라!\n","굵은 텍스트    "],"metadata":{"id":"jvuNsPAY41yZ"}},{"cell_type":"markdown","source":["## 문제1\n","- f1컬럼의 결측치는 중앙 값으로 대체하고\n","- 나머지 결측치가 있는 데이터(행)을 모두 제거하고,\n","- 앞에서부터 70% 데이터 중 views 컬럼의 3사분위 수에서 1사분위 수를 뺀 값을 구하시오\n","- (단, 데이터 70% 지점은 정수형(int) 변환)"],"metadata":{"id":"PVBhS3mWQOJp"}},{"cell_type":"markdown","source":[],"metadata":{"id":"SdEHXNmVOJYd"}},{"cell_type":"code","source":["# your code\n","import pandas as pd\n","df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/main/p1/members.csv\")\n","df\n","\n","\n"],"metadata":{"id":"d9UC9l2OQQ4m","colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"status":"ok","timestamp":1729729625563,"user_tz":-540,"elapsed":396,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"e0f15e09-4ee5-4173-dc2d-eb604257ff85"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      id    age city    f1  f2      f3    f4         f5  subscribed   views\n","0   id01    2.0   서울   NaN   0    gold  ENFJ  91.297791  2021-07-16  6820.0\n","1   id02    9.0   서울  70.0   1     NaN  ENFJ  60.339826  2021-05-12  2534.0\n","2   id03   27.0   서울  61.0   1    gold  ISTJ  17.252986  2021-03-16  7312.0\n","3   id04   75.0   서울   NaN   2     NaN  INFP  52.667078  2021-07-21   493.0\n","4   id05   24.0   서울  85.0   2     NaN  ISFJ  29.269869  2021-03-07  1338.0\n","..   ...    ...  ...   ...  ..     ...   ...        ...         ...     ...\n","95  id95   77.0   경기  43.0   1    gold  INTJ  91.297791  2021-05-21  8697.0\n","96  id96   92.0   경기  53.0   1  silver  ENTJ  52.667078  2021-05-06  4336.0\n","97  id97  100.0   경기   NaN   0    gold  INFP  67.886373  2021-03-18  6687.0\n","98  id98   39.0   경기  58.0   2     NaN  INFP  98.429899  2021-10-02   865.0\n","99  id99    1.0   경기  47.0   0    gold  ESFJ  97.381034  2021-12-02  6090.0\n","\n","[100 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-193bb379-b784-4b31-8150-12f2090db033\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>age</th>\n","      <th>city</th>\n","      <th>f1</th>\n","      <th>f2</th>\n","      <th>f3</th>\n","      <th>f4</th>\n","      <th>f5</th>\n","      <th>subscribed</th>\n","      <th>views</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>id01</td>\n","      <td>2.0</td>\n","      <td>서울</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>gold</td>\n","      <td>ENFJ</td>\n","      <td>91.297791</td>\n","      <td>2021-07-16</td>\n","      <td>6820.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>id02</td>\n","      <td>9.0</td>\n","      <td>서울</td>\n","      <td>70.0</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>ENFJ</td>\n","      <td>60.339826</td>\n","      <td>2021-05-12</td>\n","      <td>2534.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>id03</td>\n","      <td>27.0</td>\n","      <td>서울</td>\n","      <td>61.0</td>\n","      <td>1</td>\n","      <td>gold</td>\n","      <td>ISTJ</td>\n","      <td>17.252986</td>\n","      <td>2021-03-16</td>\n","      <td>7312.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>id04</td>\n","      <td>75.0</td>\n","      <td>서울</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>INFP</td>\n","      <td>52.667078</td>\n","      <td>2021-07-21</td>\n","      <td>493.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>id05</td>\n","      <td>24.0</td>\n","      <td>서울</td>\n","      <td>85.0</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>ISFJ</td>\n","      <td>29.269869</td>\n","      <td>2021-03-07</td>\n","      <td>1338.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>95</th>\n","      <td>id95</td>\n","      <td>77.0</td>\n","      <td>경기</td>\n","      <td>43.0</td>\n","      <td>1</td>\n","      <td>gold</td>\n","      <td>INTJ</td>\n","      <td>91.297791</td>\n","      <td>2021-05-21</td>\n","      <td>8697.0</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>id96</td>\n","      <td>92.0</td>\n","      <td>경기</td>\n","      <td>53.0</td>\n","      <td>1</td>\n","      <td>silver</td>\n","      <td>ENTJ</td>\n","      <td>52.667078</td>\n","      <td>2021-05-06</td>\n","      <td>4336.0</td>\n","    </tr>\n","    <tr>\n","      <th>97</th>\n","      <td>id97</td>\n","      <td>100.0</td>\n","      <td>경기</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>gold</td>\n","      <td>INFP</td>\n","      <td>67.886373</td>\n","      <td>2021-03-18</td>\n","      <td>6687.0</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>id98</td>\n","      <td>39.0</td>\n","      <td>경기</td>\n","      <td>58.0</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>INFP</td>\n","      <td>98.429899</td>\n","      <td>2021-10-02</td>\n","      <td>865.0</td>\n","    </tr>\n","    <tr>\n","      <th>99</th>\n","      <td>id99</td>\n","      <td>1.0</td>\n","      <td>경기</td>\n","      <td>47.0</td>\n","      <td>0</td>\n","      <td>gold</td>\n","      <td>ESFJ</td>\n","      <td>97.381034</td>\n","      <td>2021-12-02</td>\n","      <td>6090.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>100 rows × 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-193bb379-b784-4b31-8150-12f2090db033')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-193bb379-b784-4b31-8150-12f2090db033 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-193bb379-b784-4b31-8150-12f2090db033');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-44437629-55f7-4773-b374-a1540c0cdca0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-44437629-55f7-4773-b374-a1540c0cdca0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-44437629-55f7-4773-b374-a1540c0cdca0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_a6924ce2-8808-49b3-86a3-5cdb2b584651\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_a6924ce2-8808-49b3-86a3-5cdb2b584651 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 100,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 100,\n        \"samples\": [\n          \"id83\",\n          \"id53\",\n          \"id70\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 30.442758522588697,\n        \"min\": -13.5,\n        \"max\": 100.0,\n        \"num_unique_values\": 71,\n        \"samples\": [\n          34.0,\n          2.0,\n          43.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"city\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"\\uacbd\\uae30\",\n          \"\\ub300\\uad6c\",\n          \"\\uc11c\\uc6b8\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19.453893291430727,\n        \"min\": 12.0,\n        \"max\": 111.0,\n        \"num_unique_values\": 43,\n        \"samples\": [\n          98.0,\n          88.0,\n          78.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f3\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"gold\",\n          \"vip\",\n          \"silver\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f4\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"ENFJ\",\n          \"ISTJ\",\n          \"INFJ\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28.454243730610507,\n        \"min\": 9.796377581,\n        \"max\": 98.42989897,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          91.29779092,\n          37.11373918,\n          13.04992129\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"subscribed\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 93,\n        \"samples\": [\n          \"2021-10-04\",\n          \"2021-05-21\",\n          \"2021-11-24\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"views\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4170.860768106485,\n        \"min\": 42.0,\n        \"max\": 21550.0,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          5650.0,\n          4381.0,\n          2872.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":98}]},{"cell_type":"code","source":["# 1번 f1컬럼의 결측치는 중앙 값으로 대체하고\n","median_value = df['f1'].median()\n","df['f1'] = df['f1'].fillna(median_value)\n","df\n","print(df.isnull().sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"0Mr1j-BfM-f9","executionInfo":{"status":"ok","timestamp":1729729628500,"user_tz":-540,"elapsed":393,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"6c07345a-a0ed-41db-a62b-92ce8e49c459"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      id    age city    f1  f2      f3    f4         f5  subscribed   views\n","0   id01    2.0   서울  63.0   0    gold  ENFJ  91.297791  2021-07-16  6820.0\n","1   id02    9.0   서울  70.0   1     NaN  ENFJ  60.339826  2021-05-12  2534.0\n","2   id03   27.0   서울  61.0   1    gold  ISTJ  17.252986  2021-03-16  7312.0\n","3   id04   75.0   서울  63.0   2     NaN  INFP  52.667078  2021-07-21   493.0\n","4   id05   24.0   서울  85.0   2     NaN  ISFJ  29.269869  2021-03-07  1338.0\n","..   ...    ...  ...   ...  ..     ...   ...        ...         ...     ...\n","95  id95   77.0   경기  43.0   1    gold  INTJ  91.297791  2021-05-21  8697.0\n","96  id96   92.0   경기  53.0   1  silver  ENTJ  52.667078  2021-05-06  4336.0\n","97  id97  100.0   경기  63.0   0    gold  INFP  67.886373  2021-03-18  6687.0\n","98  id98   39.0   경기  58.0   2     NaN  INFP  98.429899  2021-10-02   865.0\n","99  id99    1.0   경기  47.0   0    gold  ESFJ  97.381034  2021-12-02  6090.0\n","\n","[100 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-ad9a2be5-ddc4-41bf-97d4-48d8564e60ef\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>age</th>\n","      <th>city</th>\n","      <th>f1</th>\n","      <th>f2</th>\n","      <th>f3</th>\n","      <th>f4</th>\n","      <th>f5</th>\n","      <th>subscribed</th>\n","      <th>views</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>id01</td>\n","      <td>2.0</td>\n","      <td>서울</td>\n","      <td>63.0</td>\n","      <td>0</td>\n","      <td>gold</td>\n","      <td>ENFJ</td>\n","      <td>91.297791</td>\n","      <td>2021-07-16</td>\n","      <td>6820.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>id02</td>\n","      <td>9.0</td>\n","      <td>서울</td>\n","      <td>70.0</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>ENFJ</td>\n","      <td>60.339826</td>\n","      <td>2021-05-12</td>\n","      <td>2534.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>id03</td>\n","      <td>27.0</td>\n","      <td>서울</td>\n","      <td>61.0</td>\n","      <td>1</td>\n","      <td>gold</td>\n","      <td>ISTJ</td>\n","      <td>17.252986</td>\n","      <td>2021-03-16</td>\n","      <td>7312.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>id04</td>\n","      <td>75.0</td>\n","      <td>서울</td>\n","      <td>63.0</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>INFP</td>\n","      <td>52.667078</td>\n","      <td>2021-07-21</td>\n","      <td>493.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>id05</td>\n","      <td>24.0</td>\n","      <td>서울</td>\n","      <td>85.0</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>ISFJ</td>\n","      <td>29.269869</td>\n","      <td>2021-03-07</td>\n","      <td>1338.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>95</th>\n","      <td>id95</td>\n","      <td>77.0</td>\n","      <td>경기</td>\n","      <td>43.0</td>\n","      <td>1</td>\n","      <td>gold</td>\n","      <td>INTJ</td>\n","      <td>91.297791</td>\n","      <td>2021-05-21</td>\n","      <td>8697.0</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>id96</td>\n","      <td>92.0</td>\n","      <td>경기</td>\n","      <td>53.0</td>\n","      <td>1</td>\n","      <td>silver</td>\n","      <td>ENTJ</td>\n","      <td>52.667078</td>\n","      <td>2021-05-06</td>\n","      <td>4336.0</td>\n","    </tr>\n","    <tr>\n","      <th>97</th>\n","      <td>id97</td>\n","      <td>100.0</td>\n","      <td>경기</td>\n","      <td>63.0</td>\n","      <td>0</td>\n","      <td>gold</td>\n","      <td>INFP</td>\n","      <td>67.886373</td>\n","      <td>2021-03-18</td>\n","      <td>6687.0</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>id98</td>\n","      <td>39.0</td>\n","      <td>경기</td>\n","      <td>58.0</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>INFP</td>\n","      <td>98.429899</td>\n","      <td>2021-10-02</td>\n","      <td>865.0</td>\n","    </tr>\n","    <tr>\n","      <th>99</th>\n","      <td>id99</td>\n","      <td>1.0</td>\n","      <td>경기</td>\n","      <td>47.0</td>\n","      <td>0</td>\n","      <td>gold</td>\n","      <td>ESFJ</td>\n","      <td>97.381034</td>\n","      <td>2021-12-02</td>\n","      <td>6090.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>100 rows × 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ad9a2be5-ddc4-41bf-97d4-48d8564e60ef')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ad9a2be5-ddc4-41bf-97d4-48d8564e60ef button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ad9a2be5-ddc4-41bf-97d4-48d8564e60ef');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5917ae66-d1c2-4c02-82e7-90dd2c504f93\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5917ae66-d1c2-4c02-82e7-90dd2c504f93')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5917ae66-d1c2-4c02-82e7-90dd2c504f93 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_12c12533-583e-4948-8170-002d3a9b9253\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_12c12533-583e-4948-8170-002d3a9b9253 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 100,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 100,\n        \"samples\": [\n          \"id83\",\n          \"id53\",\n          \"id70\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 30.442758522588697,\n        \"min\": -13.5,\n        \"max\": 100.0,\n        \"num_unique_values\": 71,\n        \"samples\": [\n          34.0,\n          2.0,\n          43.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"city\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"\\uacbd\\uae30\",\n          \"\\ub300\\uad6c\",\n          \"\\uc11c\\uc6b8\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16.184853874826764,\n        \"min\": 12.0,\n        \"max\": 111.0,\n        \"num_unique_values\": 43,\n        \"samples\": [\n          98.0,\n          48.0,\n          88.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f3\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"gold\",\n          \"vip\",\n          \"silver\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f4\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"ENFJ\",\n          \"ISTJ\",\n          \"INFJ\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28.454243730610507,\n        \"min\": 9.796377581,\n        \"max\": 98.42989897,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          91.29779092,\n          37.11373918,\n          13.04992129\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"subscribed\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 93,\n        \"samples\": [\n          \"2021-10-04\",\n          \"2021-05-21\",\n          \"2021-11-24\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"views\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4170.860768106485,\n        \"min\": 42.0,\n        \"max\": 21550.0,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          5650.0,\n          4381.0,\n          2872.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":99}]},{"cell_type":"code","source":["#2번 나머지 결측치가 있는 데이터(행)을 모두 제거하고\n","df.isnull().sum()\n","#이걸 통해서 f3와 views에 결측치 확인\n","#내가 막힌 부분 : 일부분만 drop해서 지우는 것 NaN 값만 drop해라 어떻게 함?\n","\n","# print(df.shape)\n","df.dropna()\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"AacI1YslND1Y","executionInfo":{"status":"ok","timestamp":1729729632406,"user_tz":-540,"elapsed":5,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"cdba86b8-30bd-4fe5-b559-140dc45b9e49"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      id    age city     f1  f2      f3    f4         f5  subscribed    views\n","0   id01    2.0   서울   63.0   0    gold  ENFJ  91.297791  2021-07-16   6820.0\n","2   id03   27.0   서울   61.0   1    gold  ISTJ  17.252986  2021-03-16   7312.0\n","5   id06   22.0   서울   57.0   0     vip  INTP  20.129444  2021-09-12  21550.0\n","7   id08   38.0   서울  101.0   1  silver  INFJ  83.685380  2021-03-06   3260.0\n","9   id10   95.0   서울   74.0   1    gold  ISFP  98.429899  2021-04-03   9992.0\n","..   ...    ...  ...    ...  ..     ...   ...        ...         ...      ...\n","94  id94   84.0   경기   63.0   1  silver  ESTJ  90.496999  2021-08-16   3774.0\n","95  id95   77.0   경기   43.0   1    gold  INTJ  91.297791  2021-05-21   8697.0\n","96  id96   92.0   경기   53.0   1  silver  ENTJ  52.667078  2021-05-06   4336.0\n","97  id97  100.0   경기   63.0   0    gold  INFP  67.886373  2021-03-18   6687.0\n","99  id99    1.0   경기   47.0   0    gold  ESFJ  97.381034  2021-12-02   6090.0\n","\n","[72 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-98cccb90-49ab-4d3a-bce7-e60ac84c0b1d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>age</th>\n","      <th>city</th>\n","      <th>f1</th>\n","      <th>f2</th>\n","      <th>f3</th>\n","      <th>f4</th>\n","      <th>f5</th>\n","      <th>subscribed</th>\n","      <th>views</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>id01</td>\n","      <td>2.0</td>\n","      <td>서울</td>\n","      <td>63.0</td>\n","      <td>0</td>\n","      <td>gold</td>\n","      <td>ENFJ</td>\n","      <td>91.297791</td>\n","      <td>2021-07-16</td>\n","      <td>6820.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>id03</td>\n","      <td>27.0</td>\n","      <td>서울</td>\n","      <td>61.0</td>\n","      <td>1</td>\n","      <td>gold</td>\n","      <td>ISTJ</td>\n","      <td>17.252986</td>\n","      <td>2021-03-16</td>\n","      <td>7312.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>id06</td>\n","      <td>22.0</td>\n","      <td>서울</td>\n","      <td>57.0</td>\n","      <td>0</td>\n","      <td>vip</td>\n","      <td>INTP</td>\n","      <td>20.129444</td>\n","      <td>2021-09-12</td>\n","      <td>21550.0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>id08</td>\n","      <td>38.0</td>\n","      <td>서울</td>\n","      <td>101.0</td>\n","      <td>1</td>\n","      <td>silver</td>\n","      <td>INFJ</td>\n","      <td>83.685380</td>\n","      <td>2021-03-06</td>\n","      <td>3260.0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>id10</td>\n","      <td>95.0</td>\n","      <td>서울</td>\n","      <td>74.0</td>\n","      <td>1</td>\n","      <td>gold</td>\n","      <td>ISFP</td>\n","      <td>98.429899</td>\n","      <td>2021-04-03</td>\n","      <td>9992.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>94</th>\n","      <td>id94</td>\n","      <td>84.0</td>\n","      <td>경기</td>\n","      <td>63.0</td>\n","      <td>1</td>\n","      <td>silver</td>\n","      <td>ESTJ</td>\n","      <td>90.496999</td>\n","      <td>2021-08-16</td>\n","      <td>3774.0</td>\n","    </tr>\n","    <tr>\n","      <th>95</th>\n","      <td>id95</td>\n","      <td>77.0</td>\n","      <td>경기</td>\n","      <td>43.0</td>\n","      <td>1</td>\n","      <td>gold</td>\n","      <td>INTJ</td>\n","      <td>91.297791</td>\n","      <td>2021-05-21</td>\n","      <td>8697.0</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>id96</td>\n","      <td>92.0</td>\n","      <td>경기</td>\n","      <td>53.0</td>\n","      <td>1</td>\n","      <td>silver</td>\n","      <td>ENTJ</td>\n","      <td>52.667078</td>\n","      <td>2021-05-06</td>\n","      <td>4336.0</td>\n","    </tr>\n","    <tr>\n","      <th>97</th>\n","      <td>id97</td>\n","      <td>100.0</td>\n","      <td>경기</td>\n","      <td>63.0</td>\n","      <td>0</td>\n","      <td>gold</td>\n","      <td>INFP</td>\n","      <td>67.886373</td>\n","      <td>2021-03-18</td>\n","      <td>6687.0</td>\n","    </tr>\n","    <tr>\n","      <th>99</th>\n","      <td>id99</td>\n","      <td>1.0</td>\n","      <td>경기</td>\n","      <td>47.0</td>\n","      <td>0</td>\n","      <td>gold</td>\n","      <td>ESFJ</td>\n","      <td>97.381034</td>\n","      <td>2021-12-02</td>\n","      <td>6090.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>72 rows × 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-98cccb90-49ab-4d3a-bce7-e60ac84c0b1d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-98cccb90-49ab-4d3a-bce7-e60ac84c0b1d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-98cccb90-49ab-4d3a-bce7-e60ac84c0b1d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a8e56468-c5c4-4131-bea7-84c559a4af24\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a8e56468-c5c4-4131-bea7-84c559a4af24')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a8e56468-c5c4-4131-bea7-84c559a4af24 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 72,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 72,\n        \"samples\": [\n          \"id10\",\n          \"id87\",\n          \"id25\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29.85289019202163,\n        \"min\": -13.5,\n        \"max\": 100.0,\n        \"num_unique_values\": 55,\n        \"samples\": [\n          75.0,\n          47.0,\n          36.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"city\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"\\uacbd\\uae30\",\n          \"\\ub300\\uad6c\",\n          \"\\uc11c\\uc6b8\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15.29357982045308,\n        \"min\": 34.0,\n        \"max\": 111.0,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          34.0,\n          94.0,\n          45.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f3\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"gold\",\n          \"vip\",\n          \"silver\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f4\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"ENFJ\",\n          \"ISTJ\",\n          \"ESFP\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28.643256535142374,\n        \"min\": 9.796377581,\n        \"max\": 98.42989897,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          91.29779092,\n          37.11373918,\n          13.04992129\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"subscribed\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 68,\n        \"samples\": [\n          \"2021-02-22\",\n          \"2021-05-21\",\n          \"2021-04-03\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"views\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3657.23029923723,\n        \"min\": 3084.0,\n        \"max\": 21550.0,\n        \"num_unique_values\": 72,\n        \"samples\": [\n          9992.0,\n          6516.0,\n          8954.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":100}]},{"cell_type":"code","source":["#3번 앞에서부터 70% 데이터 중 views 컬럼의 3사분위 수에서 1사분위 수를 뺀 값을 구하시오\n","# (단, 데이터 70% 지점은 정수형(int) 변환)\n","# 밑에는 나의 오답\n","# value = df['views'].quantile(0.3) > df['views']\n","# value2 = value(df['view']quantile(0.75)) - value(quantile(0.25))\n","\n","# 단순 앞에서 부터 len에 70% 데이터를 0.7곱해서 하고(큰값부터 이런말 x 그래서 그냥 0.7곱하면 되는거임)\n","# ★여기서 주의 df 넣어놓고 여기다가 다시 df 하면 70%의 또 70%가 되기 떄문에 밑에 셀에다 하는게 나음!!!\n","# 게다가 계속 실행 할 수록 위에 0.7이 계속 곱해져서 모수가 작아져서 값이 계속 달라짐 r1이걸 밑에다 하는게 나은듯!\n","df = df[:int(len(df) * 0.7)]\n","df\n","\n","r1 = df['views'].quantile(0.75)\n","r2 = df['views'].quantile(0.25)\n","print(r1-r2)\n","\n","\n","# value = df['views'].quantile(0.75) - df['views'].quantile(0.25)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vbpeAUAENDuH","executionInfo":{"status":"ok","timestamp":1729729656669,"user_tz":-540,"elapsed":493,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"dd75130e-1c4e-4e8e-ecce-7832805eb1b0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["6716.0\n"]}]},{"cell_type":"markdown","source":["len(df): df의 전체 행(row) 수를 반환합니다.\n","\n","1.   len(df) * 0.7: 전체 행 수의 70%를 계산합니다\n","2.   int(len(df) * 0.7): 계산된 70%의 값을 정수로 변환합니다.\n","3. df[:int(len(df) * 0.7)]: DataFrame의 처음부터 계산된 70%에 해당하는 행까지만\n","   선택합니다.\n","   :가 붙는건 처음부터라 그럼 즉 [0 : int(len(df) * 0.7)] 라는 뜻!\n","    * 이 부분은 슬라이싱을 의미합니다. 즉, df의 처음부터 int(len(df) * 0.7)번째 행까지를 가져옵니다.\n","\n","\n","\n","\n",".\n","\n"],"metadata":{"id":"xswlxCia3_we"}},{"cell_type":"code","source":["r1 = df['views'].quantile(0.75)\n","r2 = df['views'].quantile(0.25)\n","print(r1-r2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3G_Ei9u96ngv","executionInfo":{"status":"ok","timestamp":1729729611989,"user_tz":-540,"elapsed":412,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"84a0d583-9f49-4bcc-d5bb-b224daa5c737"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["3261.0\n"]}]},{"cell_type":"code","source":["# 1번 문제 한방 코딩 연습\n","# your code\n","import pandas as pd\n","df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/main/p1/members.csv\")\n","df\n","\n","# f1컬럼의 결측치는 중앙 값으로 대체하고\n","# 나머지 결측치가 있는 데이터(행)을 모두 제거하고,\n","# 앞에서부터 70% 데이터 중 views 컬럼의 3사분위 수에서 1사분위 수를 뺀 값을 구하시오\n","# (단, 데이터 70% 지점은 정수형(int) 변환)\n","\n","\n","#이걸 다시 df['f1']에 담아야 하는데 안담고 해서 틀림 즉) 적용이 안된 상태로 그냥 실행 되어서 코딩을 한 것임 그 결과 되기는 하지만 궁극적으로 마지막 값은 달라 질 수 밖에없음\n","#또한 이과정에서 결측값들이 중앙값으로 대체 된 상황이 아니기 때문에 뒤에 dropna 할때 결측값들이 그대로 남아 있어서 지워지는 행들이 더 많아짐 그게 아까 조회했을때 70개가 아닌 60개가 조회 됐었던 이유임★★★★★\n","#값이 달라진 상태에서 처리를 해야하면 df , df['f1'] 등등 반드시 담아야 함을 숙지 ★★★★★\n","df['f1'] = df['f1'].fillna(df['f1'].median())\n","df\n","\n","df.isnull().sum()\n","\n","#df에 안담아서 틀림\n","df = df.dropna()\n","\n","df = df[:int(len(df) * 0.7)]\n","df\n","\n","r = df['views'].quantile(0.75) - df['views'].quantile(0.25)\n","print(r)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5NQa8RoANDlo","executionInfo":{"status":"ok","timestamp":1729730454256,"user_tz":-540,"elapsed":383,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"0143e6b2-e10c-457a-a5d3-e17f7eeddaec"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["3261.0\n"]}]},{"cell_type":"markdown","source":["## 문제2\n","(변경 후) 변경 전과 동일한 문제입니다. 좀 더 명확하게 수정하였음\n","- 주어진 데이터에서 결측치가 30% 이상인 컬럼을 A, 결측치가 30% 미만, 20% 이상인 컬럼을 B라고 가정하자.\n","- A에 해당하는 컬럼은 결측치가 있는 데이터(행)를 삭제하시오.\n","- B에 해당하는 컬럼은 결측치를 최빈값으로 대체하시오.\n","- 'f3'컬럼의 'gold' 값을 가진 데이터 수를 구하시오\n","\n","\n","(변경 전)\n","- 주어진 데이터에서 결측치가 30%이상 되는 컬럼을 찾고 해당 컬럼에 결측치가 있는 데이터(행)를 삭제 함.\n","- 그리고 30% 미만, 20% 이상인 결측치가 있는 컬럼은 최빈값으로 값을 대체하고\n","- 'f3'컬럼의 'gold' 값을 가진 데이터 수를 출력하세요!"],"metadata":{"id":"h2IXr3A_QRWS"}},{"cell_type":"code","source":["# your code\n","import pandas as pd\n","df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/main/p1/members.csv\")\n","df"],"metadata":{"id":"SNMu1ew0QTnD","colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"status":"ok","timestamp":1729731961780,"user_tz":-540,"elapsed":1218,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"69b9e3a1-4252-4f78-c968-347b40596c84"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      id    age city    f1  f2      f3    f4         f5  subscribed   views\n","0   id01    2.0   서울   NaN   0    gold  ENFJ  91.297791  2021-07-16  6820.0\n","1   id02    9.0   서울  70.0   1     NaN  ENFJ  60.339826  2021-05-12  2534.0\n","2   id03   27.0   서울  61.0   1    gold  ISTJ  17.252986  2021-03-16  7312.0\n","3   id04   75.0   서울   NaN   2     NaN  INFP  52.667078  2021-07-21   493.0\n","4   id05   24.0   서울  85.0   2     NaN  ISFJ  29.269869  2021-03-07  1338.0\n","..   ...    ...  ...   ...  ..     ...   ...        ...         ...     ...\n","95  id95   77.0   경기  43.0   1    gold  INTJ  91.297791  2021-05-21  8697.0\n","96  id96   92.0   경기  53.0   1  silver  ENTJ  52.667078  2021-05-06  4336.0\n","97  id97  100.0   경기   NaN   0    gold  INFP  67.886373  2021-03-18  6687.0\n","98  id98   39.0   경기  58.0   2     NaN  INFP  98.429899  2021-10-02   865.0\n","99  id99    1.0   경기  47.0   0    gold  ESFJ  97.381034  2021-12-02  6090.0\n","\n","[100 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-ee05d7e3-8606-408a-846e-80f83428dec5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>age</th>\n","      <th>city</th>\n","      <th>f1</th>\n","      <th>f2</th>\n","      <th>f3</th>\n","      <th>f4</th>\n","      <th>f5</th>\n","      <th>subscribed</th>\n","      <th>views</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>id01</td>\n","      <td>2.0</td>\n","      <td>서울</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>gold</td>\n","      <td>ENFJ</td>\n","      <td>91.297791</td>\n","      <td>2021-07-16</td>\n","      <td>6820.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>id02</td>\n","      <td>9.0</td>\n","      <td>서울</td>\n","      <td>70.0</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>ENFJ</td>\n","      <td>60.339826</td>\n","      <td>2021-05-12</td>\n","      <td>2534.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>id03</td>\n","      <td>27.0</td>\n","      <td>서울</td>\n","      <td>61.0</td>\n","      <td>1</td>\n","      <td>gold</td>\n","      <td>ISTJ</td>\n","      <td>17.252986</td>\n","      <td>2021-03-16</td>\n","      <td>7312.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>id04</td>\n","      <td>75.0</td>\n","      <td>서울</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>INFP</td>\n","      <td>52.667078</td>\n","      <td>2021-07-21</td>\n","      <td>493.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>id05</td>\n","      <td>24.0</td>\n","      <td>서울</td>\n","      <td>85.0</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>ISFJ</td>\n","      <td>29.269869</td>\n","      <td>2021-03-07</td>\n","      <td>1338.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>95</th>\n","      <td>id95</td>\n","      <td>77.0</td>\n","      <td>경기</td>\n","      <td>43.0</td>\n","      <td>1</td>\n","      <td>gold</td>\n","      <td>INTJ</td>\n","      <td>91.297791</td>\n","      <td>2021-05-21</td>\n","      <td>8697.0</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>id96</td>\n","      <td>92.0</td>\n","      <td>경기</td>\n","      <td>53.0</td>\n","      <td>1</td>\n","      <td>silver</td>\n","      <td>ENTJ</td>\n","      <td>52.667078</td>\n","      <td>2021-05-06</td>\n","      <td>4336.0</td>\n","    </tr>\n","    <tr>\n","      <th>97</th>\n","      <td>id97</td>\n","      <td>100.0</td>\n","      <td>경기</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>gold</td>\n","      <td>INFP</td>\n","      <td>67.886373</td>\n","      <td>2021-03-18</td>\n","      <td>6687.0</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>id98</td>\n","      <td>39.0</td>\n","      <td>경기</td>\n","      <td>58.0</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>INFP</td>\n","      <td>98.429899</td>\n","      <td>2021-10-02</td>\n","      <td>865.0</td>\n","    </tr>\n","    <tr>\n","      <th>99</th>\n","      <td>id99</td>\n","      <td>1.0</td>\n","      <td>경기</td>\n","      <td>47.0</td>\n","      <td>0</td>\n","      <td>gold</td>\n","      <td>ESFJ</td>\n","      <td>97.381034</td>\n","      <td>2021-12-02</td>\n","      <td>6090.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>100 rows × 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ee05d7e3-8606-408a-846e-80f83428dec5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ee05d7e3-8606-408a-846e-80f83428dec5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ee05d7e3-8606-408a-846e-80f83428dec5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d432853e-895d-49db-a174-96237bdd5d2d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d432853e-895d-49db-a174-96237bdd5d2d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d432853e-895d-49db-a174-96237bdd5d2d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_48acea5d-4eb9-41e6-bf21-84d3a4310d91\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_48acea5d-4eb9-41e6-bf21-84d3a4310d91 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 100,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 100,\n        \"samples\": [\n          \"id83\",\n          \"id53\",\n          \"id70\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 30.442758522588697,\n        \"min\": -13.5,\n        \"max\": 100.0,\n        \"num_unique_values\": 71,\n        \"samples\": [\n          34.0,\n          2.0,\n          43.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"city\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"\\uacbd\\uae30\",\n          \"\\ub300\\uad6c\",\n          \"\\uc11c\\uc6b8\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19.453893291430727,\n        \"min\": 12.0,\n        \"max\": 111.0,\n        \"num_unique_values\": 43,\n        \"samples\": [\n          98.0,\n          88.0,\n          78.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f3\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"gold\",\n          \"vip\",\n          \"silver\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f4\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"ENFJ\",\n          \"ISTJ\",\n          \"INFJ\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28.454243730610507,\n        \"min\": 9.796377581,\n        \"max\": 98.42989897,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          91.29779092,\n          37.11373918,\n          13.04992129\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"subscribed\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 93,\n        \"samples\": [\n          \"2021-10-04\",\n          \"2021-05-21\",\n          \"2021-11-24\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"views\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4170.860768106485,\n        \"min\": 42.0,\n        \"max\": 21550.0,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          5650.0,\n          4381.0,\n          2872.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":170}]},{"cell_type":"code","source":["# - 주어진 데이터에서 결측치가 30% 이상인 컬럼을 A, 결측치가 30% 미만, 20% 이상인 컬럼을 B라고 가정하자.\n","# - A에 해당하는 컬럼은 결측치가 있는 데이터(행)를 삭제하시오.\n","# df.isnull().sum()\n","#f1 = A , f3 = B\n","\n","df = df.dropna(subset = ['f1'])\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"4lUFsJmo-7Yo","executionInfo":{"status":"ok","timestamp":1729731965370,"user_tz":-540,"elapsed":379,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"5283b7d7-b030-4bb8-b9d5-1adae61af8c3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      id   age city    f1  f2      f3    f4         f5  subscribed    views\n","1   id02   9.0   서울  70.0   1     NaN  ENFJ  60.339826  2021-05-12   2534.0\n","2   id03  27.0   서울  61.0   1    gold  ISTJ  17.252986  2021-03-16   7312.0\n","4   id05  24.0   서울  85.0   2     NaN  ISFJ  29.269869  2021-03-07   1338.0\n","5   id06  22.0   서울  57.0   0     vip  INTP  20.129444  2021-09-12  21550.0\n","6   id07  36.3   서울  60.0   1     NaN  ISFJ   9.796378  2021-01-11     61.0\n","..   ...   ...  ...   ...  ..     ...   ...        ...         ...      ...\n","93  id93  21.8   경기  57.0   0     NaN  ISFP  73.586397  2021-06-07     42.0\n","95  id95  77.0   경기  43.0   1    gold  INTJ  91.297791  2021-05-21   8697.0\n","96  id96  92.0   경기  53.0   1  silver  ENTJ  52.667078  2021-05-06   4336.0\n","98  id98  39.0   경기  58.0   2     NaN  INFP  98.429899  2021-10-02    865.0\n","99  id99   1.0   경기  47.0   0    gold  ESFJ  97.381034  2021-12-02   6090.0\n","\n","[69 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-8ff3cde0-0aba-4d8b-909c-57de7b0f4e47\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>age</th>\n","      <th>city</th>\n","      <th>f1</th>\n","      <th>f2</th>\n","      <th>f3</th>\n","      <th>f4</th>\n","      <th>f5</th>\n","      <th>subscribed</th>\n","      <th>views</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>id02</td>\n","      <td>9.0</td>\n","      <td>서울</td>\n","      <td>70.0</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>ENFJ</td>\n","      <td>60.339826</td>\n","      <td>2021-05-12</td>\n","      <td>2534.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>id03</td>\n","      <td>27.0</td>\n","      <td>서울</td>\n","      <td>61.0</td>\n","      <td>1</td>\n","      <td>gold</td>\n","      <td>ISTJ</td>\n","      <td>17.252986</td>\n","      <td>2021-03-16</td>\n","      <td>7312.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>id05</td>\n","      <td>24.0</td>\n","      <td>서울</td>\n","      <td>85.0</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>ISFJ</td>\n","      <td>29.269869</td>\n","      <td>2021-03-07</td>\n","      <td>1338.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>id06</td>\n","      <td>22.0</td>\n","      <td>서울</td>\n","      <td>57.0</td>\n","      <td>0</td>\n","      <td>vip</td>\n","      <td>INTP</td>\n","      <td>20.129444</td>\n","      <td>2021-09-12</td>\n","      <td>21550.0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>id07</td>\n","      <td>36.3</td>\n","      <td>서울</td>\n","      <td>60.0</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>ISFJ</td>\n","      <td>9.796378</td>\n","      <td>2021-01-11</td>\n","      <td>61.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>93</th>\n","      <td>id93</td>\n","      <td>21.8</td>\n","      <td>경기</td>\n","      <td>57.0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>ISFP</td>\n","      <td>73.586397</td>\n","      <td>2021-06-07</td>\n","      <td>42.0</td>\n","    </tr>\n","    <tr>\n","      <th>95</th>\n","      <td>id95</td>\n","      <td>77.0</td>\n","      <td>경기</td>\n","      <td>43.0</td>\n","      <td>1</td>\n","      <td>gold</td>\n","      <td>INTJ</td>\n","      <td>91.297791</td>\n","      <td>2021-05-21</td>\n","      <td>8697.0</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>id96</td>\n","      <td>92.0</td>\n","      <td>경기</td>\n","      <td>53.0</td>\n","      <td>1</td>\n","      <td>silver</td>\n","      <td>ENTJ</td>\n","      <td>52.667078</td>\n","      <td>2021-05-06</td>\n","      <td>4336.0</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>id98</td>\n","      <td>39.0</td>\n","      <td>경기</td>\n","      <td>58.0</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>INFP</td>\n","      <td>98.429899</td>\n","      <td>2021-10-02</td>\n","      <td>865.0</td>\n","    </tr>\n","    <tr>\n","      <th>99</th>\n","      <td>id99</td>\n","      <td>1.0</td>\n","      <td>경기</td>\n","      <td>47.0</td>\n","      <td>0</td>\n","      <td>gold</td>\n","      <td>ESFJ</td>\n","      <td>97.381034</td>\n","      <td>2021-12-02</td>\n","      <td>6090.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>69 rows × 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8ff3cde0-0aba-4d8b-909c-57de7b0f4e47')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8ff3cde0-0aba-4d8b-909c-57de7b0f4e47 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8ff3cde0-0aba-4d8b-909c-57de7b0f4e47');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f45855b2-7e9f-43c8-9e61-9e1aeafc0f94\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f45855b2-7e9f-43c8-9e61-9e1aeafc0f94')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f45855b2-7e9f-43c8-9e61-9e1aeafc0f94 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_5202b828-673f-4e05-9aed-d21f0dcd516e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_5202b828-673f-4e05-9aed-d21f0dcd516e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","repr_error":"0"}},"metadata":{},"execution_count":171}]},{"cell_type":"code","source":["#최빈값이 어떤건지 확인 하는 방법\n","# 이렇게 조회하면 최빈값이 2개인지 3개인지 확인 가능 ex gold가 4번, silver가 4번 이렇게 나올 수 도 있잖음\n","# 그래서 만약 여러개면 결측값을 가장 첫번째 최빈값으로 채워라 하려면 [0] 을 쓰는 거임!!!\n","mode_value = df['f3'].mode()\n","print(mode_value)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xK-vdGybFIzV","executionInfo":{"status":"ok","timestamp":1729732334494,"user_tz":-540,"elapsed":362,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"60485794-0324-42e7-dd28-c73eac43d3f4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0    gold\n","Name: f3, dtype: object\n"]}]},{"cell_type":"markdown","source":["df['f1'].fillna(df['f1'].dropna())\n","이런식으로 filna와 dropna를 괄호안에 넣어서 하는 방식은 값을 왜곡 할 수 있으니 지양해야함\n"],"metadata":{"id":"a7ykaZooCNP9"}},{"cell_type":"code","source":["# - B에 해당하는 컬럼은 결측치를 최빈값으로 대체하시오.\n","# 내가 틀린이유 : mode() 뒤에 [0]를 안넣었기 때문! 숫자 0 임   [0] 뜻은 첫번쨰 최빈값을 사용하라는 뜻\n","df['f3'] = df['f3'].fillna(df['f3'].mode()[0])\n","df\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":535},"id":"ML-nSdEo-7PC","executionInfo":{"status":"ok","timestamp":1729732408085,"user_tz":-540,"elapsed":611,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"8b6654d1-2355-4bdf-e710-359a0a6291c7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-179-8dbffdeb1d7d>:3: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df['f3'] = df['f3'].fillna(df['f3'].mode()[0])\n"]},{"output_type":"execute_result","data":{"text/plain":["      id   age city    f1  f2      f3    f4         f5  subscribed    views\n","1   id02   9.0   서울  70.0   1    gold  ENFJ  60.339826  2021-05-12   2534.0\n","2   id03  27.0   서울  61.0   1    gold  ISTJ  17.252986  2021-03-16   7312.0\n","4   id05  24.0   서울  85.0   2    gold  ISFJ  29.269869  2021-03-07   1338.0\n","5   id06  22.0   서울  57.0   0     vip  INTP  20.129444  2021-09-12  21550.0\n","6   id07  36.3   서울  60.0   1    gold  ISFJ   9.796378  2021-01-11     61.0\n","..   ...   ...  ...   ...  ..     ...   ...        ...         ...      ...\n","93  id93  21.8   경기  57.0   0    gold  ISFP  73.586397  2021-06-07     42.0\n","95  id95  77.0   경기  43.0   1    gold  INTJ  91.297791  2021-05-21   8697.0\n","96  id96  92.0   경기  53.0   1  silver  ENTJ  52.667078  2021-05-06   4336.0\n","98  id98  39.0   경기  58.0   2    gold  INFP  98.429899  2021-10-02    865.0\n","99  id99   1.0   경기  47.0   0    gold  ESFJ  97.381034  2021-12-02   6090.0\n","\n","[69 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-08460a62-235b-43f5-a453-aa2227b00573\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>age</th>\n","      <th>city</th>\n","      <th>f1</th>\n","      <th>f2</th>\n","      <th>f3</th>\n","      <th>f4</th>\n","      <th>f5</th>\n","      <th>subscribed</th>\n","      <th>views</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>id02</td>\n","      <td>9.0</td>\n","      <td>서울</td>\n","      <td>70.0</td>\n","      <td>1</td>\n","      <td>gold</td>\n","      <td>ENFJ</td>\n","      <td>60.339826</td>\n","      <td>2021-05-12</td>\n","      <td>2534.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>id03</td>\n","      <td>27.0</td>\n","      <td>서울</td>\n","      <td>61.0</td>\n","      <td>1</td>\n","      <td>gold</td>\n","      <td>ISTJ</td>\n","      <td>17.252986</td>\n","      <td>2021-03-16</td>\n","      <td>7312.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>id05</td>\n","      <td>24.0</td>\n","      <td>서울</td>\n","      <td>85.0</td>\n","      <td>2</td>\n","      <td>gold</td>\n","      <td>ISFJ</td>\n","      <td>29.269869</td>\n","      <td>2021-03-07</td>\n","      <td>1338.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>id06</td>\n","      <td>22.0</td>\n","      <td>서울</td>\n","      <td>57.0</td>\n","      <td>0</td>\n","      <td>vip</td>\n","      <td>INTP</td>\n","      <td>20.129444</td>\n","      <td>2021-09-12</td>\n","      <td>21550.0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>id07</td>\n","      <td>36.3</td>\n","      <td>서울</td>\n","      <td>60.0</td>\n","      <td>1</td>\n","      <td>gold</td>\n","      <td>ISFJ</td>\n","      <td>9.796378</td>\n","      <td>2021-01-11</td>\n","      <td>61.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>93</th>\n","      <td>id93</td>\n","      <td>21.8</td>\n","      <td>경기</td>\n","      <td>57.0</td>\n","      <td>0</td>\n","      <td>gold</td>\n","      <td>ISFP</td>\n","      <td>73.586397</td>\n","      <td>2021-06-07</td>\n","      <td>42.0</td>\n","    </tr>\n","    <tr>\n","      <th>95</th>\n","      <td>id95</td>\n","      <td>77.0</td>\n","      <td>경기</td>\n","      <td>43.0</td>\n","      <td>1</td>\n","      <td>gold</td>\n","      <td>INTJ</td>\n","      <td>91.297791</td>\n","      <td>2021-05-21</td>\n","      <td>8697.0</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>id96</td>\n","      <td>92.0</td>\n","      <td>경기</td>\n","      <td>53.0</td>\n","      <td>1</td>\n","      <td>silver</td>\n","      <td>ENTJ</td>\n","      <td>52.667078</td>\n","      <td>2021-05-06</td>\n","      <td>4336.0</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>id98</td>\n","      <td>39.0</td>\n","      <td>경기</td>\n","      <td>58.0</td>\n","      <td>2</td>\n","      <td>gold</td>\n","      <td>INFP</td>\n","      <td>98.429899</td>\n","      <td>2021-10-02</td>\n","      <td>865.0</td>\n","    </tr>\n","    <tr>\n","      <th>99</th>\n","      <td>id99</td>\n","      <td>1.0</td>\n","      <td>경기</td>\n","      <td>47.0</td>\n","      <td>0</td>\n","      <td>gold</td>\n","      <td>ESFJ</td>\n","      <td>97.381034</td>\n","      <td>2021-12-02</td>\n","      <td>6090.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>69 rows × 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-08460a62-235b-43f5-a453-aa2227b00573')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-08460a62-235b-43f5-a453-aa2227b00573 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-08460a62-235b-43f5-a453-aa2227b00573');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-561fbe63-3f4d-4640-a799-7f5a4cbd0f78\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-561fbe63-3f4d-4640-a799-7f5a4cbd0f78')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-561fbe63-3f4d-4640-a799-7f5a4cbd0f78 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_2a894a77-085c-4963-856e-2538f6826a76\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_2a894a77-085c-4963-856e-2538f6826a76 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","repr_error":"0"}},"metadata":{},"execution_count":179}]},{"cell_type":"code","source":["# - 'f3'컬럼의 'gold' 값을 가진 데이터 수를 구하시오\n","# ★만약 여기서 print를 사용하지 않고 sum 만써도 값은 나옴 but!!!! 화면에 표시 되지 않음, 즉) 다 구해놓고 print를 안하면! 값이 안나와서 값을 제출 못하게 됨! 꼭 신경쓰기!\n","print(sum(df['f3'] == 'gold'))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SIhH4anW-7IX","executionInfo":{"status":"ok","timestamp":1729732571958,"user_tz":-540,"elapsed":390,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"98d6bb82-e60b-4681-8fd0-b9f22b49b98f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["56\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"TEyfzOc3-7FY"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 문제3\n","- views 컬럼에 결측치가 있는 데이터(행)을 삭제하고,\n","- f3 컬럼의 결측치는 0, silver는 1, gold는 2, vip는 3 으로 변환한 후 총 합을 정수형으로 출력하시오"],"metadata":{"id":"gV-W-F2wQTuw"}},{"cell_type":"code","source":["# your code\n","import pandas as pd\n","df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/main/p1/members.csv\")\n","df\n"],"metadata":{"id":"TAP8aeX0QW3L","colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"status":"ok","timestamp":1729732742472,"user_tz":-540,"elapsed":5,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"124b9a90-49aa-4e97-b702-138bc3afdd7d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      id    age city    f1  f2      f3    f4         f5  subscribed   views\n","0   id01    2.0   서울   NaN   0    gold  ENFJ  91.297791  2021-07-16  6820.0\n","1   id02    9.0   서울  70.0   1     NaN  ENFJ  60.339826  2021-05-12  2534.0\n","2   id03   27.0   서울  61.0   1    gold  ISTJ  17.252986  2021-03-16  7312.0\n","3   id04   75.0   서울   NaN   2     NaN  INFP  52.667078  2021-07-21   493.0\n","4   id05   24.0   서울  85.0   2     NaN  ISFJ  29.269869  2021-03-07  1338.0\n","..   ...    ...  ...   ...  ..     ...   ...        ...         ...     ...\n","95  id95   77.0   경기  43.0   1    gold  INTJ  91.297791  2021-05-21  8697.0\n","96  id96   92.0   경기  53.0   1  silver  ENTJ  52.667078  2021-05-06  4336.0\n","97  id97  100.0   경기   NaN   0    gold  INFP  67.886373  2021-03-18  6687.0\n","98  id98   39.0   경기  58.0   2     NaN  INFP  98.429899  2021-10-02   865.0\n","99  id99    1.0   경기  47.0   0    gold  ESFJ  97.381034  2021-12-02  6090.0\n","\n","[100 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-cde4d044-a74b-4c49-b92a-a1a9fbad9742\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>age</th>\n","      <th>city</th>\n","      <th>f1</th>\n","      <th>f2</th>\n","      <th>f3</th>\n","      <th>f4</th>\n","      <th>f5</th>\n","      <th>subscribed</th>\n","      <th>views</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>id01</td>\n","      <td>2.0</td>\n","      <td>서울</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>gold</td>\n","      <td>ENFJ</td>\n","      <td>91.297791</td>\n","      <td>2021-07-16</td>\n","      <td>6820.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>id02</td>\n","      <td>9.0</td>\n","      <td>서울</td>\n","      <td>70.0</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>ENFJ</td>\n","      <td>60.339826</td>\n","      <td>2021-05-12</td>\n","      <td>2534.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>id03</td>\n","      <td>27.0</td>\n","      <td>서울</td>\n","      <td>61.0</td>\n","      <td>1</td>\n","      <td>gold</td>\n","      <td>ISTJ</td>\n","      <td>17.252986</td>\n","      <td>2021-03-16</td>\n","      <td>7312.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>id04</td>\n","      <td>75.0</td>\n","      <td>서울</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>INFP</td>\n","      <td>52.667078</td>\n","      <td>2021-07-21</td>\n","      <td>493.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>id05</td>\n","      <td>24.0</td>\n","      <td>서울</td>\n","      <td>85.0</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>ISFJ</td>\n","      <td>29.269869</td>\n","      <td>2021-03-07</td>\n","      <td>1338.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>95</th>\n","      <td>id95</td>\n","      <td>77.0</td>\n","      <td>경기</td>\n","      <td>43.0</td>\n","      <td>1</td>\n","      <td>gold</td>\n","      <td>INTJ</td>\n","      <td>91.297791</td>\n","      <td>2021-05-21</td>\n","      <td>8697.0</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>id96</td>\n","      <td>92.0</td>\n","      <td>경기</td>\n","      <td>53.0</td>\n","      <td>1</td>\n","      <td>silver</td>\n","      <td>ENTJ</td>\n","      <td>52.667078</td>\n","      <td>2021-05-06</td>\n","      <td>4336.0</td>\n","    </tr>\n","    <tr>\n","      <th>97</th>\n","      <td>id97</td>\n","      <td>100.0</td>\n","      <td>경기</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>gold</td>\n","      <td>INFP</td>\n","      <td>67.886373</td>\n","      <td>2021-03-18</td>\n","      <td>6687.0</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>id98</td>\n","      <td>39.0</td>\n","      <td>경기</td>\n","      <td>58.0</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>INFP</td>\n","      <td>98.429899</td>\n","      <td>2021-10-02</td>\n","      <td>865.0</td>\n","    </tr>\n","    <tr>\n","      <th>99</th>\n","      <td>id99</td>\n","      <td>1.0</td>\n","      <td>경기</td>\n","      <td>47.0</td>\n","      <td>0</td>\n","      <td>gold</td>\n","      <td>ESFJ</td>\n","      <td>97.381034</td>\n","      <td>2021-12-02</td>\n","      <td>6090.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>100 rows × 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cde4d044-a74b-4c49-b92a-a1a9fbad9742')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cde4d044-a74b-4c49-b92a-a1a9fbad9742 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cde4d044-a74b-4c49-b92a-a1a9fbad9742');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-487f253f-c9b5-4618-8f99-61e8add2abd9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-487f253f-c9b5-4618-8f99-61e8add2abd9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-487f253f-c9b5-4618-8f99-61e8add2abd9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_f1df12e4-78fd-4c2b-b4e1-01e50468d40e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_f1df12e4-78fd-4c2b-b4e1-01e50468d40e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 100,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 100,\n        \"samples\": [\n          \"id83\",\n          \"id53\",\n          \"id70\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 30.442758522588697,\n        \"min\": -13.5,\n        \"max\": 100.0,\n        \"num_unique_values\": 71,\n        \"samples\": [\n          34.0,\n          2.0,\n          43.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"city\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"\\uacbd\\uae30\",\n          \"\\ub300\\uad6c\",\n          \"\\uc11c\\uc6b8\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19.453893291430727,\n        \"min\": 12.0,\n        \"max\": 111.0,\n        \"num_unique_values\": 43,\n        \"samples\": [\n          98.0,\n          88.0,\n          78.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f3\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"gold\",\n          \"vip\",\n          \"silver\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f4\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"ENFJ\",\n          \"ISTJ\",\n          \"INFJ\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28.454243730610507,\n        \"min\": 9.796377581,\n        \"max\": 98.42989897,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          91.29779092,\n          37.11373918,\n          13.04992129\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"subscribed\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 93,\n        \"samples\": [\n          \"2021-10-04\",\n          \"2021-05-21\",\n          \"2021-11-24\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"views\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4170.860768106485,\n        \"min\": 42.0,\n        \"max\": 21550.0,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          5650.0,\n          4381.0,\n          2872.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":189}]},{"cell_type":"code","source":["# - views 컬럼에 결측치가 있는 데이터(행)을 삭제하고,\n","\n","df = df.dropna(subset = ['views'])\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"5QGMLqb8Gugf","executionInfo":{"status":"ok","timestamp":1729732848795,"user_tz":-540,"elapsed":4,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"77fc536a-b640-463a-eb21-a09bdf3109b7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      id    age city    f1  f2      f3    f4         f5  subscribed   views\n","0   id01    2.0   서울   NaN   0    gold  ENFJ  91.297791  2021-07-16  6820.0\n","1   id02    9.0   서울  70.0   1     NaN  ENFJ  60.339826  2021-05-12  2534.0\n","2   id03   27.0   서울  61.0   1    gold  ISTJ  17.252986  2021-03-16  7312.0\n","3   id04   75.0   서울   NaN   2     NaN  INFP  52.667078  2021-07-21   493.0\n","4   id05   24.0   서울  85.0   2     NaN  ISFJ  29.269869  2021-03-07  1338.0\n","..   ...    ...  ...   ...  ..     ...   ...        ...         ...     ...\n","95  id95   77.0   경기  43.0   1    gold  INTJ  91.297791  2021-05-21  8697.0\n","96  id96   92.0   경기  53.0   1  silver  ENTJ  52.667078  2021-05-06  4336.0\n","97  id97  100.0   경기   NaN   0    gold  INFP  67.886373  2021-03-18  6687.0\n","98  id98   39.0   경기  58.0   2     NaN  INFP  98.429899  2021-10-02   865.0\n","99  id99    1.0   경기  47.0   0    gold  ESFJ  97.381034  2021-12-02  6090.0\n","\n","[96 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-7c443c34-787b-4ddf-a8d9-fa9523554ac0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>age</th>\n","      <th>city</th>\n","      <th>f1</th>\n","      <th>f2</th>\n","      <th>f3</th>\n","      <th>f4</th>\n","      <th>f5</th>\n","      <th>subscribed</th>\n","      <th>views</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>id01</td>\n","      <td>2.0</td>\n","      <td>서울</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>gold</td>\n","      <td>ENFJ</td>\n","      <td>91.297791</td>\n","      <td>2021-07-16</td>\n","      <td>6820.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>id02</td>\n","      <td>9.0</td>\n","      <td>서울</td>\n","      <td>70.0</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>ENFJ</td>\n","      <td>60.339826</td>\n","      <td>2021-05-12</td>\n","      <td>2534.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>id03</td>\n","      <td>27.0</td>\n","      <td>서울</td>\n","      <td>61.0</td>\n","      <td>1</td>\n","      <td>gold</td>\n","      <td>ISTJ</td>\n","      <td>17.252986</td>\n","      <td>2021-03-16</td>\n","      <td>7312.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>id04</td>\n","      <td>75.0</td>\n","      <td>서울</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>INFP</td>\n","      <td>52.667078</td>\n","      <td>2021-07-21</td>\n","      <td>493.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>id05</td>\n","      <td>24.0</td>\n","      <td>서울</td>\n","      <td>85.0</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>ISFJ</td>\n","      <td>29.269869</td>\n","      <td>2021-03-07</td>\n","      <td>1338.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>95</th>\n","      <td>id95</td>\n","      <td>77.0</td>\n","      <td>경기</td>\n","      <td>43.0</td>\n","      <td>1</td>\n","      <td>gold</td>\n","      <td>INTJ</td>\n","      <td>91.297791</td>\n","      <td>2021-05-21</td>\n","      <td>8697.0</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>id96</td>\n","      <td>92.0</td>\n","      <td>경기</td>\n","      <td>53.0</td>\n","      <td>1</td>\n","      <td>silver</td>\n","      <td>ENTJ</td>\n","      <td>52.667078</td>\n","      <td>2021-05-06</td>\n","      <td>4336.0</td>\n","    </tr>\n","    <tr>\n","      <th>97</th>\n","      <td>id97</td>\n","      <td>100.0</td>\n","      <td>경기</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>gold</td>\n","      <td>INFP</td>\n","      <td>67.886373</td>\n","      <td>2021-03-18</td>\n","      <td>6687.0</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>id98</td>\n","      <td>39.0</td>\n","      <td>경기</td>\n","      <td>58.0</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>INFP</td>\n","      <td>98.429899</td>\n","      <td>2021-10-02</td>\n","      <td>865.0</td>\n","    </tr>\n","    <tr>\n","      <th>99</th>\n","      <td>id99</td>\n","      <td>1.0</td>\n","      <td>경기</td>\n","      <td>47.0</td>\n","      <td>0</td>\n","      <td>gold</td>\n","      <td>ESFJ</td>\n","      <td>97.381034</td>\n","      <td>2021-12-02</td>\n","      <td>6090.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>96 rows × 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7c443c34-787b-4ddf-a8d9-fa9523554ac0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7c443c34-787b-4ddf-a8d9-fa9523554ac0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7c443c34-787b-4ddf-a8d9-fa9523554ac0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6b2c1a97-7a03-4884-8b88-1614ba6ab6e5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6b2c1a97-7a03-4884-8b88-1614ba6ab6e5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6b2c1a97-7a03-4884-8b88-1614ba6ab6e5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_1aa69bc4-cd2b-4919-bea6-93d6afd9ae37\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_1aa69bc4-cd2b-4919-bea6-93d6afd9ae37 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 96,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 96,\n        \"samples\": [\n          \"id84\",\n          \"id80\",\n          \"id76\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 30.604325441767436,\n        \"min\": -13.5,\n        \"max\": 100.0,\n        \"num_unique_values\": 68,\n        \"samples\": [\n          88.0,\n          74.0,\n          24.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"city\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"\\uacbd\\uae30\",\n          \"\\ub300\\uad6c\",\n          \"\\uc11c\\uc6b8\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19.554409821431474,\n        \"min\": 12.0,\n        \"max\": 111.0,\n        \"num_unique_values\": 42,\n        \"samples\": [\n          82.0,\n          72.0,\n          53.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f3\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"gold\",\n          \"vip\",\n          \"silver\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f4\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"ENFJ\",\n          \"ISTJ\",\n          \"INFJ\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28.407800130830285,\n        \"min\": 9.796377581,\n        \"max\": 98.42989897,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          91.29779092,\n          37.11373918,\n          13.04992129\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"subscribed\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 90,\n        \"samples\": [\n          \"2021-05-18\",\n          \"2021-05-21\",\n          \"2021-04-10\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"views\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4170.860768106485,\n        \"min\": 42.0,\n        \"max\": 21550.0,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          5650.0,\n          4381.0,\n          2872.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":193}]},{"cell_type":"code","source":["# - f3 컬럼의 결측치는 0, silver는 1, gold는 2, vip는 3 으로 변환한 후 총 합을 정수형으로 출력하시오\n","# replace 쓸때 결측치를 뭐로 써야 해야하는지 -> 따로 결측치는 fillna 그리고 글자는 replace  혹은  replace를 결측치에 쓰려면 import numpy as np 로 해주고 replace(np.nan,o) 으로 해야함!!!\n","# 아래처럼 나열식 보다는 따로 따로 하나씩 해주는게좋음, 이유는 replace가 각각 연속적으로 호출을 못할 수 도 있어서 따로 하는 걸 지향해라\n","df['f3'] = df['f3'].fillna(0)\n","df['f3'] = df['f3'].replace('silver',1)\n","df['f3'] = df['f3'].replace('gold',2)\n","df['f3'] = df['f3'].replace('vip',3)\n","#프린트 할 때 아래처럼 내가 한것 처럼 하면 안됨 잘 생각해\n","# print(int(sum(df)))\n","\n","#정수형으로 바꿔주기\n","\n","df['f3'] =df['f3'].astype(int)\n","\n","print(df['f3'].sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AUUOYWjjGuck","executionInfo":{"status":"ok","timestamp":1729733750755,"user_tz":-540,"elapsed":406,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"7417236a-7ca4-46ec-e819-16563f21fd54"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["133\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-219-ace769cac2eb>:5: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n","  df['f3'] = df['f3'].replace('silver',1)\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"hlx5zs29GuaD"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 풀이"],"metadata":{"id":"7wXaul1WQZth"}},{"cell_type":"markdown","source":["## 문제1\n","- f1컬럼의 결측치는 중앙 값으로 대체하고\n","- 나머지 결측치가 있는 데이터(행)을 모두 제거하고,\n","- 앞에서부터 70% 데이터 중 views 컬럼의 3사분위 수에서 1사분위 수를 뺀 값을 구하시오\n","- (단, 데이터 70% 지점은 정수형(int) 변환)"],"metadata":{"id":"oz7POiFg5BbF"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"T0JqOyc24q9O","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729729602812,"user_tz":-540,"elapsed":387,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"1132e1ff-5884-4801-d0ee-9b9f4095a87e"},"outputs":[{"output_type":"stream","name":"stdout","text":["3261.0\n"]}],"source":["# 풀이\n","import pandas as pd\n","df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/main/p1/members.csv\")\n","# df = pd.read_csv(\"members.csv\")\n","\n","df['f1'] = df['f1'].fillna(df['f1'].median())\n","# print(df.isnull().sum())\n","\n","# print(df.shape)\n","df = df.dropna()\n","# print(df.shape)\n","\n","df = df[:int(len(df) * 0.7)]\n","\n","r1 = df['views'].quantile(.75)\n","r2 = df['views'].quantile(.25)\n","\n","print(r1 - r2)"]},{"cell_type":"markdown","source":["## 문제2\n","(변경 후) 변경 전과 동일한 문제입니다. 좀 더 명확하게 수정하였음\n","- 주어진 데이터에서 결측치가 30% 이상인 컬럼을 A, 결측치가 30% 미만, 20% 이상인 컬럼을 B라고 가정하자.\n","- A에 해당하는 컬럼은 결측치가 있는 데이터(행)를 삭제하시오.\n","- B에 해당하는 컬럼은 결측치를 최빈값으로 대체하시오.\n","- 'f3'컬럼의 'gold' 값을 가진 데이터 수를 구하시오\n","\n","\n","(변경 전)\n","- 주어진 데이터에서 결측치가 30%이상 되는 컬럼을 찾고 해당 컬럼에 결측치가 있는 데이터(행)를 삭제 함.\n","- 그리고 30% 미만, 20% 이상인 결측치가 있는 컬럼은 최빈값으로 값을 대체하고\n","- 'f3'컬럼의 'gold' 값을 가진 데이터 수를 출력하세요!\n"],"metadata":{"id":"s8s-g51Z5EA7"}},{"cell_type":"code","source":["# 풀이\n","import pandas as pd\n","df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/main/p1/members.csv\")\n","# df = pd.read_csv(\"members.csv\")\n","\n","# print(df.isnull().sum())\n","\n","# print(len(df) * 0.3)\n","# f1 삭제\n","# f3 최빈값\n","\n","# print(df.shape)\n","df = df.dropna(subset=['f1'])\n","# print(df.shape)\n","\n","# print(df.head())\n","df['f3'] = df['f3'].fillna(df['f3'].mode()[0])\n","# print(df.head())\n","\n","# df.isnull().sum()\n","\n","print(sum(df['f3'] == 'gold'))"],"metadata":{"id":"9mpdqGoJD_zM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729583263732,"user_tz":-540,"elapsed":954,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"d4afde42-eab6-409b-a2c0-b51f5a2d5523"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["56\n"]}]},{"cell_type":"markdown","source":["## 문제3\n","- views 컬럼에 결측치가 있는 데이터(행)을 삭제하고,\n","- f3 컬럼의 결측치는 0, silver는 1, gold는 2, vip는 3 으로 변환한 후 f3 컬럼의 총 합을 정수형으로 출력하시오"],"metadata":{"id":"b2cZLPY75WQZ"}},{"cell_type":"code","source":["# replace 활용\n","import pandas as pd\n","df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/main/p1/members.csv\")\n","# df = pd.read_csv(\"members.csv\")\n","\n","# print(df.shape)\n","df = df.dropna(subset=['views'])\n","# print(df.shape)\n","\n","# print(df.head(7))\n","import numpy as np\n","df['f3'] = df['f3'].replace(np.nan,0).replace('silver',1).replace('gold',2).replace('vip',3)\n","# df['f3'] = df['f3'].replace('silver',1)\n","# df['f3'] = df['f3'].replace('gold',2)\n","# df['f3'] = df['f3'].replace('vip',3)\n","# print(df.head(7))\n","\n","print(df['f3'].sum())"],"metadata":{"id":"sxBinjrCrEhE","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1726824220180,"user_tz":-540,"elapsed":440,"user":{"displayName":"Tae Heon Kim","userId":"07653788752262629837"}},"outputId":"5bd38f2b-c1c0-4922-dad2-3bad57d598d0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["133\n"]}]},{"cell_type":"code","source":["# map 활용\n","import pandas as pd\n","df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/main/p1/members.csv\")\n","# df = pd.read_csv(\"members.csv\")\n","\n","df = df.dropna(subset=['views'])\n","\n","dict_list = {np.nan:0, 'silver':1, 'gold':2, 'vip':3}\n","df['f3'] = df['f3'].map(dict_list)\n","\n","print(df['f3'].sum())"],"metadata":{"id":"zvQPlDj4rEmD","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1726824226892,"user_tz":-540,"elapsed":322,"user":{"displayName":"Tae Heon Kim","userId":"07653788752262629837"}},"outputId":"d952cdec-07bf-40d0-8528-ab2717365189"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["133\n"]}]},{"cell_type":"code","source":["# 조건 활용\n","import pandas as pd\n","df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/main/p1/members.csv\")\n","# df = pd.read_csv(\"members.csv\")\n","\n","df = df.dropna(subset=['views'])\n","\n","r1 = sum(df['f3'] == 'silver') * 1\n","r2 = sum(df['f3'] == 'gold') * 2\n","r3 = sum(df['f3'] == 'vip') * 3\n","print(r1 + r2 + r3)"],"metadata":{"id":"nwd_BJuZrEv9","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1726824234949,"user_tz":-540,"elapsed":451,"user":{"displayName":"Tae Heon Kim","userId":"07653788752262629837"}},"outputId":"92033fd1-b783-4cc2-9543-7a4323f159ac"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["133\n"]}]},{"cell_type":"code","source":["#  코딩 연습 후 인강보고 피드백\n","# ## 문제1\n","# - f1컬럼의 결측치는 중앙 값으로 대체하고\n","# - 나머지 결측치가 있는 데이터(행)을 모두 제거하고,\n","# - 앞에서부터 70% 데이터 중 views 컬럼의 3사분위 수에서 1사분위 수를 뺀 값을 구하시오\n","# - (단, 데이터 70% 지점은 정수형(int) 변환)\n","import pandas as pd\n","df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/main/p1/members.csv\")\n","df\n","\n","df['f1'] = df['f1'].fillna(df['f1'].median())\n","# print(df.isnull().sum())\n","print(df.shape)\n","\n","df = df.dropna()\n","# print(df.isnull().sum())\n","print(df.shape)\n","\n","\n","#항상 drop 하고 shape로 삭제 되었는지 확인해라!\n","#그럼 위에꺼에 원래 100\n","\n","#앞에서부터 70% 데이터 중 여기서 막힘\n","# 70% 데이터를 찾으려면 데이터가 총 몇개있지 내가 먼저 알아야함\n","# len(df) * 0.7\n","#위처럼 하면 50.4 가 나오니 int 통해서 정수로 만들어주기!! 그다음에 70%가 된 데이터를 기준을 쓸거니까 df 로 넣어주기\n","df = df[:int(len(df) * 0.7)]\n","df\n","\n","\n","# df['views'](:int(len(df) * 0.7)) -> 틀린이유 전체 70% 중에서 해야하는데 views에서 하려고 하니 당연히 코드가 작동이 안됨. -> 전체를 바꾼 후 그 다음에 따로 할 생각을 하자\n","# r1 = df['views'].quantile(df) * 0.75 -> 틀린이유 qunatile() 괄호 안에 0.75를 해야하는데, df를 넣고 0.75를 곱해서 오류\n","r1 = df['views'].quantile(.75)\n","r2 = df['views'].quantile(.25)\n","print(r1-r2)"],"metadata":{"id":"X2yb_subZq9h","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729746768906,"user_tz":-540,"elapsed":512,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"9c344ba8-202e-402d-d27c-f9451077fa27"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(100, 10)\n","(72, 10)\n","3261.0\n"]}]},{"cell_type":"code","source":["# 한개 가지고 코딩 연습 후 삭제\n","# ## 문제2\n","\n","# (변경 후) 변경 전과 동일한 문제입니다. 좀 더 명확하게 수정하였음\n","# - 주어진 데이터에서 결측치가 30% 이상인 컬럼을 A, 결측치가 30% 미만, 20% 이상인 컬럼을 B라고 가정하자.\n","# - A에 해당하는 컬럼은 결측치가 있는 데이터(행)를 삭제하시오.\n","# - B에 해당하는 컬럼은 결측치를 최빈값으로 대체하시오.\n","# - 'f3'컬럼의 'gold' 값을 가진 데이터 수를 구하시오\n","\n","# your code\n","import pandas as pd\n","df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/main/p1/members.csv\")\n","df\n","\n","# df.isnull().sum()\n","print(len(df) * 0.3)\n","# A = f1 삭제, B = f3 최빈값 대체\n","\n","\n","#데이터 삭제는 shape로 삭제 되었는지 꼮꼮꼮 확인\n","print(df.shape)\n","df = df.dropna(subset = ['f1'])\n","print(df.shape)\n","\n","#아래 코드로 최빈값을 구하고 확인 후 진행\n","# df['f3'].mode()[0]\n","\n","#결측치가 잘 채워졌는지 검토하면서 코딩하기 위해 print(df.head) 꼭 습관적으로 사용하기\n","print(df.head())\n","df['f3'] = df['f3'].fillna(df['f3'].mode()[0])\n","print(df.head())\n","\n","df.isnull().sum()\n","\n","# f3컬럼의 'gold 값을 가진 데이터 수를 구하시오에서 막힘\n","print(sum(df['f3'] == 'gold'))\n"],"metadata":{"id":"YN8tl1SLsFZ0","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729747699607,"user_tz":-540,"elapsed":382,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"ec16e059-e2d2-4ece-c6b2-883241ed79b9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["30.0\n","(100, 10)\n","(69, 10)\n","     id   age city    f1  f2    f3    f4         f5  subscribed    views\n","1  id02   9.0   서울  70.0   1   NaN  ENFJ  60.339826  2021-05-12   2534.0\n","2  id03  27.0   서울  61.0   1  gold  ISTJ  17.252986  2021-03-16   7312.0\n","4  id05  24.0   서울  85.0   2   NaN  ISFJ  29.269869  2021-03-07   1338.0\n","5  id06  22.0   서울  57.0   0   vip  INTP  20.129444  2021-09-12  21550.0\n","6  id07  36.3   서울  60.0   1   NaN  ISFJ   9.796378  2021-01-11     61.0\n","     id   age city    f1  f2    f3    f4         f5  subscribed    views\n","1  id02   9.0   서울  70.0   1  gold  ENFJ  60.339826  2021-05-12   2534.0\n","2  id03  27.0   서울  61.0   1  gold  ISTJ  17.252986  2021-03-16   7312.0\n","4  id05  24.0   서울  85.0   2  gold  ISFJ  29.269869  2021-03-07   1338.0\n","5  id06  22.0   서울  57.0   0   vip  INTP  20.129444  2021-09-12  21550.0\n","6  id07  36.3   서울  60.0   1  gold  ISFJ   9.796378  2021-01-11     61.0\n","56\n"]}]},{"cell_type":"code","source":["# 한개 가지고 코딩 연습 후 삭제\n","## 문제3\n","# - views 컬럼에 결측치가 있는 데이터(행)을 삭제하고,\n","# - f3 컬럼의 결측치는 0, silver는 1, gold는 2, vip는 3 으로 변환한 후 f3 컬럼의 총 합을 정수형으로 출력하시오\n","# your code\n","import pandas as pd\n","df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/main/p1/members.csv\")\n","df\n","\n","# df.isnull().sum()\n","# print(df.shape)\n","df = df.dropna(subset = 'views')\n","# print(df.shape)\n","# print(df.isnull().sum())\n","\n","# print(df.head(7))\n","import numpy as np\n","\n","df['f3'] = df['f3'].replace(np.nan, 0)\n","# df['f3'].fillna(0)\n","df['f3'] = df['f3'].replace('silver',1)\n","df['f3'] = df['f3'].replace('gold', 2)\n","df['f3'] = df['f3'].replace('vip', 3)\n","# print(df.head(7))\n","\n","#마지막 프린트 꼭 하기!!!\n","print(df['f3'].sum())\n","\n","#결측치 replace 하는 거에서 막힘 -> 사유 np.nan 인데, nan.np라고 해서틀림 + 마지막 정의 하는거에 df['f3] 를 df['f3'] 에 저장을 안했음"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rWSgbABPOWhp","executionInfo":{"status":"ok","timestamp":1729821646448,"user_tz":-540,"elapsed":370,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"371956c3-6d99-4da8-c2aa-f171119d4758"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["133\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-3-f5db15f4e221>:23: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n","  df['f3'] = df['f3'].replace('vip', 3)\n"]}]}]}