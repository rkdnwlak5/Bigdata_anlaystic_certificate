{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPlb5nCFEXY9SWXRetmBPoP"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["작업 1유형"],"metadata":{"id":"m8F0q2auV4-y"}},{"cell_type":"markdown","source":["데이터 설명 : 2010-2019 스포티파이 TOP100 노래"],"metadata":{"id":"aBgjwcHrV6a-"}},{"cell_type":"code","execution_count":51,"metadata":{"id":"jlu_bD3aVyrQ","executionInfo":{"status":"ok","timestamp":1750208161015,"user_tz":-540,"elapsed":182,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}}},"outputs":[],"source":["import pandas as pd\n","df = pd.read_csv('https://raw.githubusercontent.com/Datamanim/datarepo/main/spotify/spotify.csv')\n","df.head()\n","df = df.dropna()"]},{"cell_type":"markdown","source":["1.데이터는 현재 년도별 100곡이 인기순으로 정렬되어 있다. 각 년도별 1~100위의 랭킹을 나타내는 rank컬럼을 만들고 매년도 1위의 bpm컬럼의 평균값을 구하여라"],"metadata":{"id":"nM6TCkL_aCEI"}},{"cell_type":"code","source":["#cumcount() + 1 함수 매우 중요!!\n","\n","# df = df.dropna()\n","df['rank'] = df.groupby('top year').cumcount() +1\n","cond = df[df['rank'] == 1]\n","\n","cond['bpm'].mean()\n","\n","#정답 125.6"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RCTPDCMhV1T4","executionInfo":{"status":"ok","timestamp":1750209543467,"user_tz":-540,"elapsed":44,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"3e57be1c-9a00-4eeb-8271-650b833ddc0d"},"execution_count":118,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.float64(125.6)"]},"metadata":{},"execution_count":118}]},{"cell_type":"markdown","source":["2.2015년도에 가장많은 top100곡을 올린 artist는 누구인가?"],"metadata":{"id":"KA77FgX-fimD"}},{"cell_type":"code","source":["cond = df[df['top year'] == 2015]\n","cond.value_counts('artist')\n","\n","#정답 : The Weeknd, Taylor Swift"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"id":"Y2683PoKV1Rl","executionInfo":{"status":"ok","timestamp":1750207514618,"user_tz":-540,"elapsed":47,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"d984f4a3-dee0-437f-93f7-50e86be96958"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["artist\n","The Weeknd           4\n","Taylor Swift         4\n","Selena Gomez         3\n","Fetty Wap            3\n","Avicii               2\n","                    ..\n","Twenty One Pilots    1\n","WALK THE MOON        1\n","Wiz Khalifa          1\n","Years & Years        1\n","Zedd                 1\n","Name: count, Length: 78, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>artist</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>The Weeknd</th>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>Taylor Swift</th>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>Selena Gomez</th>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>Fetty Wap</th>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>Avicii</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>Twenty One Pilots</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>WALK THE MOON</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Wiz Khalifa</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Years &amp; Years</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Zedd</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>78 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":35}]},{"cell_type":"markdown","source":["3.년도별 rank값이 1~10위 까지의 곡들 중 두번째로 많은 top genre는 무엇인가?"],"metadata":{"id":"nIMiHDj0f-wq"}},{"cell_type":"code","source":["#1번 방법 between\n"," cond = df[df['rank'].between(1,10)]\n"," cond['top genre'].value_counts()\n","\n","\n","#2번방법 isin.range(A,B) B는 불포함\n","# result = df[df['rank'].isin(range(1,11))]['top genre'].value_counts()\n","# print(result)\n","#정답 : atl hip hop\t & british soul"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"hTyLr_p5V1KR","executionInfo":{"status":"ok","timestamp":1750207706584,"user_tz":-540,"elapsed":25,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"e05f1891-1930-4727-fb9a-32466d330403"},"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["top genre\n","dance pop                    40\n","atl hip hop                   7\n","british soul                  7\n","boy band                      4\n","garage rock                   3\n","detroit hip hop               3\n","melodic rap                   3\n","pop soul                      2\n","canadian pop                  2\n","canadian contemporary r&b     2\n","emo rap                       2\n","latin                         2\n","modern rock                   2\n","israeli pop                   1\n","indie rock                    1\n","modern alternative rock       1\n","contemporary country          1\n","pop                           1\n","indie poptimism               1\n","bass trap                     1\n","east coast hip hop            1\n","la indie                      1\n","metropopolis                  1\n","gangster rap                  1\n","alt z                         1\n","kentucky hip hop              1\n","social media pop              1\n","hip hop                       1\n","afroswing                     1\n","london rap                    1\n","basshall                      1\n","electropop                    1\n","art pop                       1\n","grime                         1\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>top genre</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>dance pop</th>\n","      <td>40</td>\n","    </tr>\n","    <tr>\n","      <th>atl hip hop</th>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>british soul</th>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>boy band</th>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>garage rock</th>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>detroit hip hop</th>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>melodic rap</th>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>pop soul</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>canadian pop</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>canadian contemporary r&amp;b</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>emo rap</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>latin</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>modern rock</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>israeli pop</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>indie rock</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>modern alternative rock</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>contemporary country</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>pop</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>indie poptimism</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>bass trap</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>east coast hip hop</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>la indie</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>metropopolis</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>gangster rap</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>alt z</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>kentucky hip hop</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>social media pop</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>hip hop</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>afroswing</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>london rap</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>basshall</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>electropop</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>art pop</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>grime</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":46}]},{"cell_type":"markdown","source":["4.피처링의 경우 title에 표시된다. 피처링을 가장 많이 해준 가수는 누구인가?"],"metadata":{"id":"F2JQitU_iMQH"}},{"cell_type":"code","source":["cond = df['title'].str.split('(')\n","cond\n","cond.str[1].value_counts()\n","\n","\n","#2번 방법 글자로 나누기\n","\n","cond2 = df['title'].str.split('feat.')\n","cond2.str[1]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"id":"rVc4c95rV07u","executionInfo":{"status":"ok","timestamp":1750208567813,"user_tz":-540,"elapsed":50,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"9125e7bf-4ab4-4950-c964-9b850ef73028"},"execution_count":83,"outputs":[{"output_type":"execute_result","data":{"text/plain":["title\n","feat. Bruno Mars)                4\n","feat. Nicki Minaj)               3\n","feat. Chris Brown)               3\n","feat. Tinie Tempah)              3\n","feat. Drake)                     3\n","                                ..\n","feat. Lil Tjay)                  1\n","feat. RANI)                      1\n","feat. Idris Elba)                1\n","feat. Aitch)                     1\n","feat. J. Cole & Travis Scott)    1\n","Name: count, Length: 190, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>title</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>feat. Bruno Mars)</th>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>feat. Nicki Minaj)</th>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>feat. Chris Brown)</th>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>feat. Tinie Tempah)</th>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>feat. Drake)</th>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>feat. Lil Tjay)</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>feat. RANI)</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>feat. Idris Elba)</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>feat. Aitch)</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>feat. J. Cole &amp; Travis Scott)</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>190 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":83}]},{"cell_type":"markdown","source":["5.top year 년도를 기준으로 발매일(year released)과 top100에 진입한 일자 (top year)가 다른 곡의 숫자를 count 했을때 가장 많은 년도는?"],"metadata":{"id":"44uFA-lNlSc_"}},{"cell_type":"code","source":["df[df['year released'] != df['top year']].value_counts('top year')\n","\n","#정답 2016년"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":429},"id":"_4DS6KrtlT8e","executionInfo":{"status":"ok","timestamp":1750209013100,"user_tz":-540,"elapsed":49,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"e5b2a598-3156-49e3-a27b-7785374264f7"},"execution_count":86,"outputs":[{"output_type":"execute_result","data":{"text/plain":["top year\n","2016.0    37\n","2011.0    34\n","2010.0    33\n","2013.0    33\n","2015.0    31\n","2012.0    28\n","2017.0    26\n","2014.0    23\n","2019.0    21\n","2018.0    19\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>top year</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2016.0</th>\n","      <td>37</td>\n","    </tr>\n","    <tr>\n","      <th>2011.0</th>\n","      <td>34</td>\n","    </tr>\n","    <tr>\n","      <th>2010.0</th>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>2013.0</th>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>2015.0</th>\n","      <td>31</td>\n","    </tr>\n","    <tr>\n","      <th>2012.0</th>\n","      <td>28</td>\n","    </tr>\n","    <tr>\n","      <th>2017.0</th>\n","      <td>26</td>\n","    </tr>\n","    <tr>\n","      <th>2014.0</th>\n","      <td>23</td>\n","    </tr>\n","    <tr>\n","      <th>2019.0</th>\n","      <td>21</td>\n","    </tr>\n","    <tr>\n","      <th>2018.0</th>\n","      <td>19</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":86}]},{"cell_type":"markdown","source":["6. artist 컬럼의 값에 대소문자 상관없이 q 단어가 들어가는 아티스트는 몇명인가?"],"metadata":{"id":"zHvHx31wll6M"}},{"cell_type":"code","source":["cond = df[df['artist'].str.upper().str.contains('q')]\n","cond"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":89},"id":"bW36uNXFmrac","executionInfo":{"status":"ok","timestamp":1750209330139,"user_tz":-540,"elapsed":34,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"91467907-2446-4a64-a245-87a45ddd171f"},"execution_count":112,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Empty DataFrame\n","Columns: [title, artist, top genre, year released, added, bpm, nrgy, dnce, dB, live, val, dur, acous, spch, pop, top year, artist type]\n","Index: []"],"text/html":["\n","  <div id=\"df-8a7a98b2-f487-45fd-9d00-06bae0b95b8e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>title</th>\n","      <th>artist</th>\n","      <th>top genre</th>\n","      <th>year released</th>\n","      <th>added</th>\n","      <th>bpm</th>\n","      <th>nrgy</th>\n","      <th>dnce</th>\n","      <th>dB</th>\n","      <th>live</th>\n","      <th>val</th>\n","      <th>dur</th>\n","      <th>acous</th>\n","      <th>spch</th>\n","      <th>pop</th>\n","      <th>top year</th>\n","      <th>artist type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8a7a98b2-f487-45fd-9d00-06bae0b95b8e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8a7a98b2-f487-45fd-9d00-06bae0b95b8e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8a7a98b2-f487-45fd-9d00-06bae0b95b8e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","  <div id=\"id_56b2c41b-5236-4257-b337-e7e334c4fa6d\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cond')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_56b2c41b-5236-4257-b337-e7e334c4fa6d button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cond');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cond","repr_error":"Out of range float values are not JSON compliant: nan"}},"metadata":{},"execution_count":112}]},{"cell_type":"code","source":["cond = df[df['artist'].str.lower().str.contains('q')]\n","cond['artist'].nunique()\n","#정답 6명\n","\n","# or\n","# result = df[df.artist.str.upper().str.contains('Q')].artist.nunique()\n","# print(result)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5lWvISbrlT6O","executionInfo":{"status":"ok","timestamp":1750209432866,"user_tz":-540,"elapsed":49,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"067e94e6-fbb2-4bad-fec5-2d20bc66166d"},"execution_count":114,"outputs":[{"output_type":"execute_result","data":{"text/plain":["6"]},"metadata":{},"execution_count":114}]},{"cell_type":"markdown","source":["7.년도 상관없이 전체데이터에서 1 ~ 50위와 51 ~ 100위간의 dur 컬럼의 평균값의 차이는?"],"metadata":{"id":"16_oUwaJnX41"}},{"cell_type":"code","source":["cond1 = df[df['rank'].between(1,50)]\n","cond2 = df[df['rank'].between(51,100)]\n","result1 = cond1['dur'].mean()\n","result2 = cond2['dur'].mean()\n","print(abs(result1 - result2))\n","\n","#정답: 0.896000000000015\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HIf5wfcWV01D","executionInfo":{"status":"ok","timestamp":1750209664505,"user_tz":-540,"elapsed":21,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"250397af-8516-423c-9bb9-633a18cc0b77"},"execution_count":128,"outputs":[{"output_type":"stream","name":"stdout","text":["0.896000000000015\n"]}]},{"cell_type":"markdown","source":["8.title을 띄어쓰기 단어로 구분 했을때 가장 많이 나온 단어는 무엇인가? (대소문자 구분 x)"],"metadata":{"id":"FiVnrTrHoJCm"}},{"cell_type":"code","source":["result = df.title.str.split('\\(feat').str[0].str.split().explode().str.lower().value_counts().index[0]\n","print(result)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"id":"nsWkTJptV0yW","executionInfo":{"status":"ok","timestamp":1750209802879,"user_tz":-540,"elapsed":96,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"ea5cd7c1-c11a-4f2b-fce1-a864b259e0ad"},"execution_count":146,"outputs":[{"output_type":"execute_result","data":{"text/plain":["title\n","[paradise]                                                           3\n","[don't]                                                              3\n","[sorry]                                                              3\n","[no, hands, (feat., roscoe, dash, &, wale)]                          2\n","[all, my, friends, (feat., tinashe, &, chance, the, rapper)]         2\n","                                                                    ..\n","[the, monster]                                                       1\n","[berzerk]                                                            1\n","[my, songs, know, what, you, did, in, the, dark, (light, em, up)]    1\n","[i, cry]                                                             1\n","[3005]                                                               1\n","Name: count, Length: 945, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>title</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>[paradise]</th>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>[don't]</th>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>[sorry]</th>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>[no, hands, (feat., roscoe, dash, &amp;, wale)]</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>[all, my, friends, (feat., tinashe, &amp;, chance, the, rapper)]</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>[the, monster]</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>[berzerk]</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>[my, songs, know, what, you, did, in, the, dark, (light, em, up)]</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>[i, cry]</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>[3005]</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>945 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":146}]},{"cell_type":"markdown","source":["9. 년도별 nrgy값의 평균값을 구할때 최대 평균값과 최소 평균값의 차이를 구하여라"],"metadata":{"id":"S2_Gg-w1tZ3a"}},{"cell_type":"code","source":["cond = df.groupby('top year')['nrgy'].mean().sort_values()\n","result = cond.iloc[-1] - cond.iloc[0]\n","result\n","\n","# 정답 :13.860000000000007"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cOkESClqtbZB","executionInfo":{"status":"ok","timestamp":1750211165523,"user_tz":-540,"elapsed":29,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"9d2aa5cd-4e93-414e-a22c-548efff7dbd5"},"execution_count":167,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.float64(13.860000000000007)"]},"metadata":{},"execution_count":167}]},{"cell_type":"markdown","source":["10.artist중 artist type 타입을 여러개 가지고 있는 artist는 누구인가"],"metadata":{"id":"wTXc45xYt1nX"}},{"cell_type":"code","source":["# cond = df.groupby(['artist', 'artist type']).size()\n","# cond\n","\n","cond = df[['artist', 'artist type']].value_counts().reset_index()\n","# cond\n","cond['artist'].value_counts()\n","\n","#정답 : Rudimental"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"id":"76xqEP3It4Ka","executionInfo":{"status":"ok","timestamp":1750211553146,"user_tz":-540,"elapsed":31,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"80f3387e-05f3-46eb-82ae-b837932c5de2"},"execution_count":185,"outputs":[{"output_type":"execute_result","data":{"text/plain":["artist\n","Rudimental            2\n","Eric Church           1\n","Eliza Doolittle       1\n","Calum Scott           1\n","Cali Swag District    1\n","                     ..\n","Natalie La Rose       1\n","Neon Trees            1\n","Niall Horan           1\n","Nick Jonas            1\n","Machine Gun Kelly     1\n","Name: count, Length: 444, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>artist</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Rudimental</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>Eric Church</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Eliza Doolittle</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Calum Scott</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Cali Swag District</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>Natalie La Rose</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Neon Trees</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Niall Horan</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Nick Jonas</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Machine Gun Kelly</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>444 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":185}]},{"cell_type":"code","source":["result = df[['artist','artist type']].value_counts().reset_index().artist.value_counts().index[0]\n","print(result)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"id":"BHpj0azOtbWk","executionInfo":{"status":"ok","timestamp":1750211438249,"user_tz":-540,"elapsed":32,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"ba3004bf-e0e3-48fa-bd5b-84fec59a688f"},"execution_count":179,"outputs":[{"output_type":"execute_result","data":{"text/plain":["artist\n","Rudimental            2\n","Eric Church           1\n","Eliza Doolittle       1\n","Calum Scott           1\n","Cali Swag District    1\n","                     ..\n","Natalie La Rose       1\n","Neon Trees            1\n","Niall Horan           1\n","Nick Jonas            1\n","Machine Gun Kelly     1\n","Name: count, Length: 444, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>artist</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Rudimental</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>Eric Church</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Eliza Doolittle</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Calum Scott</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Cali Swag District</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>Natalie La Rose</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Neon Trees</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Niall Horan</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Nick Jonas</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Machine Gun Kelly</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>444 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":179}]},{"cell_type":"markdown","source":["작업형 2유형"],"metadata":{"id":"X3W_HlySv5qd"}},{"cell_type":"markdown","source":["데이터 설명 : 센서데이터로 동작 유형 분류 (종속변수 pose : 0 ,1 구분)"],"metadata":{"id":"a6dHjREav7gQ"}},{"cell_type":"code","source":["import pandas as pd\n","#데이터 로드\n","X_train = pd.read_csv(\"https://raw.githubusercontent.com/Datamanim/datarepo/main/muscle/x_train.csv\")\n","y_train = pd.read_csv(\"https://raw.githubusercontent.com/Datamanim/datarepo/main/muscle/y_train.csv\")\n","test= pd.read_csv(\"https://raw.githubusercontent.com/Datamanim/datarepo/main/muscle/x_test.csv\")\n","\n","\n","display(x_train.head())\n","display(y_train.head())\n","test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":851},"id":"w4cbbPJdtbUM","executionInfo":{"status":"ok","timestamp":1750220603826,"user_tz":-540,"elapsed":629,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"37ba9061-6d51-4c55-c787-a6115153c035"},"execution_count":16,"outputs":[{"output_type":"display_data","data":{"text/plain":["   ID  motion_0  motion_1  motion_2  motion_3  motion_4  motion_5  motion_6  \\\n","0   0       1.0      -2.0      -1.0       4.0      -5.0      -4.0       1.0   \n","1   2      20.0       0.0       0.0       1.0       5.0       6.0     -52.0   \n","2   4       1.0      -1.0       1.0       4.0      -5.0      -8.0       1.0   \n","3   5      13.0       2.0       1.0      -3.0       1.0       3.0      28.0   \n","4   6      -2.0      -7.0      -4.0      -8.0      16.0      44.0       1.0   \n","\n","   motion_7  motion_8  ...  motion_54  motion_55  motion_56  motion_57  \\\n","0       0.0     -15.0  ...        0.0       -1.0      -13.0       -3.0   \n","1      18.0      15.0  ...      -70.0      -55.0      -38.0      -14.0   \n","2      -3.0     -14.0  ...        1.0       12.0      -25.0        0.0   \n","3       3.0      12.0  ...        0.0      -21.0      -17.0       -2.0   \n","4       3.0     -16.0  ...       -1.0        2.0       -1.0        1.0   \n","\n","   motion_58  motion_59  motion_60  motion_61  motion_62  motion_63  \n","0        1.0       -1.0      -32.0      -22.0       -2.0       -3.0  \n","1      -12.0       -8.0      -34.0      -63.0      -87.0      -77.0  \n","2        0.0        3.0        2.0      -27.0        1.0        0.0  \n","3        0.0       -4.0      -17.0      -21.0      -21.0       25.0  \n","4        4.0        4.0      -17.0      -38.0       -3.0        3.0  \n","\n","[5 rows x 65 columns]"],"text/html":["\n","  <div id=\"df-55eddb6b-4383-43b6-8616-cd787e823834\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>motion_0</th>\n","      <th>motion_1</th>\n","      <th>motion_2</th>\n","      <th>motion_3</th>\n","      <th>motion_4</th>\n","      <th>motion_5</th>\n","      <th>motion_6</th>\n","      <th>motion_7</th>\n","      <th>motion_8</th>\n","      <th>...</th>\n","      <th>motion_54</th>\n","      <th>motion_55</th>\n","      <th>motion_56</th>\n","      <th>motion_57</th>\n","      <th>motion_58</th>\n","      <th>motion_59</th>\n","      <th>motion_60</th>\n","      <th>motion_61</th>\n","      <th>motion_62</th>\n","      <th>motion_63</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>-2.0</td>\n","      <td>-1.0</td>\n","      <td>4.0</td>\n","      <td>-5.0</td>\n","      <td>-4.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>-15.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>-1.0</td>\n","      <td>-13.0</td>\n","      <td>-3.0</td>\n","      <td>1.0</td>\n","      <td>-1.0</td>\n","      <td>-32.0</td>\n","      <td>-22.0</td>\n","      <td>-2.0</td>\n","      <td>-3.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>20.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>5.0</td>\n","      <td>6.0</td>\n","      <td>-52.0</td>\n","      <td>18.0</td>\n","      <td>15.0</td>\n","      <td>...</td>\n","      <td>-70.0</td>\n","      <td>-55.0</td>\n","      <td>-38.0</td>\n","      <td>-14.0</td>\n","      <td>-12.0</td>\n","      <td>-8.0</td>\n","      <td>-34.0</td>\n","      <td>-63.0</td>\n","      <td>-87.0</td>\n","      <td>-77.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4</td>\n","      <td>1.0</td>\n","      <td>-1.0</td>\n","      <td>1.0</td>\n","      <td>4.0</td>\n","      <td>-5.0</td>\n","      <td>-8.0</td>\n","      <td>1.0</td>\n","      <td>-3.0</td>\n","      <td>-14.0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>12.0</td>\n","      <td>-25.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>3.0</td>\n","      <td>2.0</td>\n","      <td>-27.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5</td>\n","      <td>13.0</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>-3.0</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>28.0</td>\n","      <td>3.0</td>\n","      <td>12.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>-21.0</td>\n","      <td>-17.0</td>\n","      <td>-2.0</td>\n","      <td>0.0</td>\n","      <td>-4.0</td>\n","      <td>-17.0</td>\n","      <td>-21.0</td>\n","      <td>-21.0</td>\n","      <td>25.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>6</td>\n","      <td>-2.0</td>\n","      <td>-7.0</td>\n","      <td>-4.0</td>\n","      <td>-8.0</td>\n","      <td>16.0</td>\n","      <td>44.0</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>-16.0</td>\n","      <td>...</td>\n","      <td>-1.0</td>\n","      <td>2.0</td>\n","      <td>-1.0</td>\n","      <td>1.0</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>-17.0</td>\n","      <td>-38.0</td>\n","      <td>-3.0</td>\n","      <td>3.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 65 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-55eddb6b-4383-43b6-8616-cd787e823834')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-55eddb6b-4383-43b6-8616-cd787e823834 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-55eddb6b-4383-43b6-8616-cd787e823834');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-255f9882-f18f-48ae-96bd-6b5924a59fa1\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-255f9882-f18f-48ae-96bd-6b5924a59fa1')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-255f9882-f18f-48ae-96bd-6b5924a59fa1 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["   ID  pose\n","0   0     1\n","1   2     0\n","2   4     1\n","3   5     0\n","4   6     1"],"text/html":["\n","  <div id=\"df-3c3560ec-aa52-4bab-a2cc-efb63013d516\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>pose</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>6</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3c3560ec-aa52-4bab-a2cc-efb63013d516')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3c3560ec-aa52-4bab-a2cc-efb63013d516 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3c3560ec-aa52-4bab-a2cc-efb63013d516');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-a0f5f3cd-6285-46c9-bff3-9a9087520988\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a0f5f3cd-6285-46c9-bff3-9a9087520988')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-a0f5f3cd-6285-46c9-bff3-9a9087520988 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"test\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2,\n          6,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pose\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["        ID  motion_0  motion_1  motion_2  motion_3  motion_4  motion_5  \\\n","0        1     -12.0      -7.0       3.0       6.0     -21.0     -28.0   \n","1        3      -9.0     -16.0      -2.0      -1.0      39.0      17.0   \n","2        8      -4.0      -1.0      -1.0       1.0       3.0      -1.0   \n","3       10       2.0       1.0       2.0       1.0     -14.0      -2.0   \n","4       17      33.0      -8.0      -4.0      -3.0     -14.0      -6.0   \n","...    ...       ...       ...       ...       ...       ...       ...   \n","1158  5786      -2.0       5.0      -1.0     -13.0      -9.0     -12.0   \n","1159  5796     -13.0     -21.0     -15.0      -8.0      -3.0       8.0   \n","1160  5802       9.0       2.0      -1.0      -1.0      -9.0      -1.0   \n","1161  5811      -1.0      -1.0       0.0      -3.0     -45.0     -32.0   \n","1162  5812      18.0       0.0       4.0       2.0      -7.0     -30.0   \n","\n","      motion_6  motion_7  motion_8  ...  motion_54  motion_55  motion_56  \\\n","0          1.0       6.0     -18.0  ...        2.0       20.0      -25.0   \n","1          3.0       1.0      -9.0  ...        0.0        1.0       -1.0   \n","2          4.0       7.0       3.0  ...       -4.0       -8.0        5.0   \n","3          0.0      -3.0     -25.0  ...       -1.0       -5.0       12.0   \n","4         -1.0       0.0      23.0  ...      -20.0       -2.0        6.0   \n","...        ...       ...       ...  ...        ...        ...        ...   \n","1158    -108.0     -27.0      10.0  ...       10.0        4.0       -4.0   \n","1159      -8.0       0.0       5.0  ...       23.0       -7.0       13.0   \n","1160      -2.0       3.0       1.0  ...        2.0        0.0       -8.0   \n","1161      -4.0       0.0       3.0  ...       -1.0       -1.0      -20.0   \n","1162     -47.0     -25.0      -1.0  ...       18.0        3.0      -22.0   \n","\n","      motion_57  motion_58  motion_59  motion_60  motion_61  motion_62  \\\n","0          -2.0        1.0        0.0       12.0       -2.0       -1.0   \n","1          -5.0       -4.0       -7.0       56.0       28.0        1.0   \n","2           2.0        0.0        2.0       13.0       -3.0        0.0   \n","3          -3.0       -5.0       -9.0        4.0       20.0       -1.0   \n","4           2.0        5.0       23.0        2.0      -21.0      -41.0   \n","...         ...        ...        ...        ...        ...        ...   \n","1158      -15.0      -11.0      -29.0      -21.0      -25.0      -17.0   \n","1159      -10.0       -7.0       -3.0       10.0       -6.0      -18.0   \n","1160       -1.0        1.0        3.0       22.0       -6.0       -1.0   \n","1161       -6.0       -3.0       -2.0        4.0       15.0       -2.0   \n","1162        1.0      -15.0      -15.0       -1.0       -8.0       15.0   \n","\n","      motion_63  \n","0          -4.0  \n","1           6.0  \n","2           4.0  \n","3          -4.0  \n","4         -23.0  \n","...         ...  \n","1158      -47.0  \n","1159      -18.0  \n","1160       -3.0  \n","1161      -12.0  \n","1162        9.0  \n","\n","[1163 rows x 65 columns]"],"text/html":["\n","  <div id=\"df-bdc0423f-21b9-49cd-9719-84f3dffb732f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>motion_0</th>\n","      <th>motion_1</th>\n","      <th>motion_2</th>\n","      <th>motion_3</th>\n","      <th>motion_4</th>\n","      <th>motion_5</th>\n","      <th>motion_6</th>\n","      <th>motion_7</th>\n","      <th>motion_8</th>\n","      <th>...</th>\n","      <th>motion_54</th>\n","      <th>motion_55</th>\n","      <th>motion_56</th>\n","      <th>motion_57</th>\n","      <th>motion_58</th>\n","      <th>motion_59</th>\n","      <th>motion_60</th>\n","      <th>motion_61</th>\n","      <th>motion_62</th>\n","      <th>motion_63</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>-12.0</td>\n","      <td>-7.0</td>\n","      <td>3.0</td>\n","      <td>6.0</td>\n","      <td>-21.0</td>\n","      <td>-28.0</td>\n","      <td>1.0</td>\n","      <td>6.0</td>\n","      <td>-18.0</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>20.0</td>\n","      <td>-25.0</td>\n","      <td>-2.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>12.0</td>\n","      <td>-2.0</td>\n","      <td>-1.0</td>\n","      <td>-4.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3</td>\n","      <td>-9.0</td>\n","      <td>-16.0</td>\n","      <td>-2.0</td>\n","      <td>-1.0</td>\n","      <td>39.0</td>\n","      <td>17.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>-9.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>-1.0</td>\n","      <td>-5.0</td>\n","      <td>-4.0</td>\n","      <td>-7.0</td>\n","      <td>56.0</td>\n","      <td>28.0</td>\n","      <td>1.0</td>\n","      <td>6.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>8</td>\n","      <td>-4.0</td>\n","      <td>-1.0</td>\n","      <td>-1.0</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>-1.0</td>\n","      <td>4.0</td>\n","      <td>7.0</td>\n","      <td>3.0</td>\n","      <td>...</td>\n","      <td>-4.0</td>\n","      <td>-8.0</td>\n","      <td>5.0</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>13.0</td>\n","      <td>-3.0</td>\n","      <td>0.0</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>-14.0</td>\n","      <td>-2.0</td>\n","      <td>0.0</td>\n","      <td>-3.0</td>\n","      <td>-25.0</td>\n","      <td>...</td>\n","      <td>-1.0</td>\n","      <td>-5.0</td>\n","      <td>12.0</td>\n","      <td>-3.0</td>\n","      <td>-5.0</td>\n","      <td>-9.0</td>\n","      <td>4.0</td>\n","      <td>20.0</td>\n","      <td>-1.0</td>\n","      <td>-4.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>17</td>\n","      <td>33.0</td>\n","      <td>-8.0</td>\n","      <td>-4.0</td>\n","      <td>-3.0</td>\n","      <td>-14.0</td>\n","      <td>-6.0</td>\n","      <td>-1.0</td>\n","      <td>0.0</td>\n","      <td>23.0</td>\n","      <td>...</td>\n","      <td>-20.0</td>\n","      <td>-2.0</td>\n","      <td>6.0</td>\n","      <td>2.0</td>\n","      <td>5.0</td>\n","      <td>23.0</td>\n","      <td>2.0</td>\n","      <td>-21.0</td>\n","      <td>-41.0</td>\n","      <td>-23.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1158</th>\n","      <td>5786</td>\n","      <td>-2.0</td>\n","      <td>5.0</td>\n","      <td>-1.0</td>\n","      <td>-13.0</td>\n","      <td>-9.0</td>\n","      <td>-12.0</td>\n","      <td>-108.0</td>\n","      <td>-27.0</td>\n","      <td>10.0</td>\n","      <td>...</td>\n","      <td>10.0</td>\n","      <td>4.0</td>\n","      <td>-4.0</td>\n","      <td>-15.0</td>\n","      <td>-11.0</td>\n","      <td>-29.0</td>\n","      <td>-21.0</td>\n","      <td>-25.0</td>\n","      <td>-17.0</td>\n","      <td>-47.0</td>\n","    </tr>\n","    <tr>\n","      <th>1159</th>\n","      <td>5796</td>\n","      <td>-13.0</td>\n","      <td>-21.0</td>\n","      <td>-15.0</td>\n","      <td>-8.0</td>\n","      <td>-3.0</td>\n","      <td>8.0</td>\n","      <td>-8.0</td>\n","      <td>0.0</td>\n","      <td>5.0</td>\n","      <td>...</td>\n","      <td>23.0</td>\n","      <td>-7.0</td>\n","      <td>13.0</td>\n","      <td>-10.0</td>\n","      <td>-7.0</td>\n","      <td>-3.0</td>\n","      <td>10.0</td>\n","      <td>-6.0</td>\n","      <td>-18.0</td>\n","      <td>-18.0</td>\n","    </tr>\n","    <tr>\n","      <th>1160</th>\n","      <td>5802</td>\n","      <td>9.0</td>\n","      <td>2.0</td>\n","      <td>-1.0</td>\n","      <td>-1.0</td>\n","      <td>-9.0</td>\n","      <td>-1.0</td>\n","      <td>-2.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>-8.0</td>\n","      <td>-1.0</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>22.0</td>\n","      <td>-6.0</td>\n","      <td>-1.0</td>\n","      <td>-3.0</td>\n","    </tr>\n","    <tr>\n","      <th>1161</th>\n","      <td>5811</td>\n","      <td>-1.0</td>\n","      <td>-1.0</td>\n","      <td>0.0</td>\n","      <td>-3.0</td>\n","      <td>-45.0</td>\n","      <td>-32.0</td>\n","      <td>-4.0</td>\n","      <td>0.0</td>\n","      <td>3.0</td>\n","      <td>...</td>\n","      <td>-1.0</td>\n","      <td>-1.0</td>\n","      <td>-20.0</td>\n","      <td>-6.0</td>\n","      <td>-3.0</td>\n","      <td>-2.0</td>\n","      <td>4.0</td>\n","      <td>15.0</td>\n","      <td>-2.0</td>\n","      <td>-12.0</td>\n","    </tr>\n","    <tr>\n","      <th>1162</th>\n","      <td>5812</td>\n","      <td>18.0</td>\n","      <td>0.0</td>\n","      <td>4.0</td>\n","      <td>2.0</td>\n","      <td>-7.0</td>\n","      <td>-30.0</td>\n","      <td>-47.0</td>\n","      <td>-25.0</td>\n","      <td>-1.0</td>\n","      <td>...</td>\n","      <td>18.0</td>\n","      <td>3.0</td>\n","      <td>-22.0</td>\n","      <td>1.0</td>\n","      <td>-15.0</td>\n","      <td>-15.0</td>\n","      <td>-1.0</td>\n","      <td>-8.0</td>\n","      <td>15.0</td>\n","      <td>9.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1163 rows × 65 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bdc0423f-21b9-49cd-9719-84f3dffb732f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-bdc0423f-21b9-49cd-9719-84f3dffb732f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-bdc0423f-21b9-49cd-9719-84f3dffb732f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-8191608d-4fe4-412b-94c8-018e52a3bd82\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8191608d-4fe4-412b-94c8-018e52a3bd82')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-8191608d-4fe4-412b-94c8-018e52a3bd82 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_4b7c464b-ba9b-4084-b31b-a3ae8f5cb5fc\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('test')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_4b7c464b-ba9b-4084-b31b-a3ae8f5cb5fc button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('test');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"test"}},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["#roc_auc 예측\n","import pandas as pd\n","X_train = pd.read_csv(\"https://raw.githubusercontent.com/Datamanim/datarepo/main/muscle/x_train.csv\")\n","y_train = pd.read_csv(\"https://raw.githubusercontent.com/Datamanim/datarepo/main/muscle/y_train.csv\")\n","test= pd.read_csv(\"https://raw.githubusercontent.com/Datamanim/datarepo/main/muscle/x_test.csv\")\n","\n","\n","X_train = X_train.drop('ID' ,axis=1)\n","test_id = test.pop('ID')\n","target = y_train.pop('pose')\n","\n","\n","\n","# #스켈링 필요없음\n","# #인코딩 필요없음\n","\n","from sklearn.model_selection import train_test_split\n","X_tr, X_val, y_tr, y_val = train_test_split(X_train,\n","                                            target,\n","                                            test_size=0.2,\n","                                            random_state=25,\n","                                            stratify = target)\n","print(X_tr.shape, X_val.shape, y_tr.shape, y_val.shape)\n","\n","\n","from sklearn.ensemble import RandomForestClassifier\n","model = RandomForestClassifier()\n","model.fit(X_tr, y_tr)\n","pred_proba = model.predict_proba(X_val)[:,1]\n","\n","#평가\n","from sklearn.metrics import roc_auc_score\n","roc_auc = roc_auc_score(y_val, pred_proba)\n","print(roc_auc)\n","\n","#최종test 및 제출\n","real_pred_proba = model.predict_proba(test)[:,1]\n","submit = pd.DataFrame({\n","                      'ID' : test_id,\n","                      'pose' : real_pred_proba\n","})\n","\n","submit.to_csv('123423.csv', index=False)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tZ-yGwTCopwv","executionInfo":{"status":"ok","timestamp":1750221115415,"user_tz":-540,"elapsed":1755,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"1f918664-c913-4f82-eb1c-08ba171d5ebf"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["(3720, 64) (930, 64) (3720,) (930,)\n","0.9999075033298802\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"g_LP2jfhv-jV"},"execution_count":null,"outputs":[]}]}