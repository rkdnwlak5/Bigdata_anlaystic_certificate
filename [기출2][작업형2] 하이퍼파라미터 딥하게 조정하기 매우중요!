{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1sIYJm6LJtk_bzQPxZGZaakSRGou6fNny","timestamp":1734045580847},{"file_id":"1KhM0jqUi8oQNr9bPWudiIjUIqJ0ylc6L","timestamp":1732950744813}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# 작업형2\n","- 빅데이터 분석기사 2회 실기\n","- 데이터 다운로드 : https://www.kaggle.com/prachi13/customer-analytics\n","- 데이터 파일 명 : Train.csv (파일명이 다를 경우 파일명을 수정해주세요)\n","- (데이터가 삭제될 시 수업노트에 유사 데이터 셋을 올려두겠습니다)\n","\n","\n","## 제품 배송 시간에 맞춰 배송되었는지 예측모델 만들기\n","- 제공된 데이터\n","    - X_train.csv\n","    - y_train.csv\n","    - X_test.csv\n","\n","- 학습용 데이터 (X_train, y_train)을 이용하여 배송 예측 모형을 만든 후, 이를 평가용 데이터(X_test)에 적용하여 얻은 예측(시간에 맞춰 도착하지 않을 확률)값을 다음과 같은 형식의 CSV파일로 생성하시오(제출한 모델의 성능은 ROC-AUC 평가지표에 따라 채점)\n","- 0 정시 도착, 1 정시 도착하지 않음\n","\n","```\n","ID,Reached.on.Time_Y.N\n","3500,0.267\n","3501,0.578\n","3502,0.123\n","\n","```\n","\n","- 출력을 원하실 경우 print() 함수 활용\n","- 예시) print(df.head())\n","- getcwd(), chdir() 등 작업 폴더 설정 불필요\n","- 파일 경로 상 내부 드라이브 경로(C: 등) 접근 불가\n","\n","- 데이터 파일 읽기 예제\n","\n","```\n","# 데이터 불러오기\n","import pandas as pd\n","X_test = pd.read_csv(\"data/X_test.csv\")\n","X_train = pd.read_csv(\"data/X_train.csv\")\n","y_train = pd.read_csv(\"data/y_train.csv\")\n","```\n","\n","- csv파일 생성 예시\n","\n","```\n","pd.DataFrame({'ID': X_test['cust_id'], 'Reached.on.Time_Y.N': pred}).to_csv('003000000.csv', index=False)\n","```\n"],"metadata":{"id":"yOX8hBk5gKrW"}},{"cell_type":"code","source":["# 시험환경 세팅 3개 파일 생성 (코드 변경 X)\n","# 원래 시험에서는 파일을 3개 다 제공해주는데, 여기는 없어서 아래 코드로 3개의\n","#  파일을 코랩에 만들라고 하는 코드를 넣어 준거임!\n","import pandas as pd\n","import numpy as np\n","from sklearn.model_selection import train_test_split\n","\n","def exam_data_load(df, target, id_name=\"\", null_name=\"\"):\n","    if id_name == \"\":\n","        df = df.reset_index().rename(columns={\"index\": \"id\"})\n","        id_name = 'id'\n","    else:\n","        id_name = id_name\n","\n","    if null_name != \"\":\n","        df[df == null_name] = np.nan\n","\n","    X_train, X_test = train_test_split(df, test_size=0.2, random_state=2022)\n","    y_train = X_train[[id_name, target]]\n","    X_train = X_train.drop(columns=[target])\n","\n","    y_test = X_test[[id_name, target]]\n","    X_test = X_test.drop(columns=[target])\n","    return X_train, X_test, y_train, y_test\n","\n","df = pd.read_csv(\"Train.csv\") # 파일명이 다를 경우 파일명을 수정해주세요\n","X_train, X_test, y_train, y_test = exam_data_load(df, target='Reached.on.Time_Y.N', id_name='ID')\n","X_train.to_csv(\"X_train.csv\", index=False)\n","y_train.to_csv(\"y_train.csv\", index=False)\n","X_test.to_csv(\"X_test.csv\", index=False)"],"metadata":{"id":"hyw3NhLlgN0f"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 데이터 불러오기\n","import pandas as pd\n","X_test = pd.read_csv(\"X_test.csv\")\n","X_train = pd.read_csv(\"X_train.csv\")\n","y_train = pd.read_csv(\"y_train.csv\")\n","\n","X_train.shape, y_train.shape, X_test.shape"],"metadata":{"id":"hZ0y7BQRXkyK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1734062942095,"user_tz":-540,"elapsed":15,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"b6d370ae-e4bf-4fa8-fc28-f4a58e7c697a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((8799, 11), (8799, 2), (2200, 11))"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["X_train.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"H8DVuudqLTCq","executionInfo":{"status":"ok","timestamp":1734062942095,"user_tz":-540,"elapsed":14,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"9173084f-9283-4d66-e1da-a20eb1b18472"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      ID Warehouse_block Mode_of_Shipment  Customer_care_calls  \\\n","0   8440               B             Ship                    4   \n","1  10849               D             Ship                    3   \n","2   9478               B             Ship                    4   \n","3   2968               B             Ship                    6   \n","4   6964               B             Road                    5   \n","\n","   Customer_rating  Cost_of_the_Product  Prior_purchases Product_importance  \\\n","0                1                  284                4                low   \n","1                2                  201                4             medium   \n","2                4                  181                3             medium   \n","3                2                  236                4                low   \n","4                1                  282                4                low   \n","\n","  Gender  Discount_offered  Weight_in_gms  \n","0      F                 4           4795  \n","1      M                10           5565  \n","2      F                 9           4425  \n","3      F                61           3140  \n","4      F                 9           4766  "],"text/html":["\n","  <div id=\"df-f43a7b2f-b238-4454-a126-9d70fa128c5c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Warehouse_block</th>\n","      <th>Mode_of_Shipment</th>\n","      <th>Customer_care_calls</th>\n","      <th>Customer_rating</th>\n","      <th>Cost_of_the_Product</th>\n","      <th>Prior_purchases</th>\n","      <th>Product_importance</th>\n","      <th>Gender</th>\n","      <th>Discount_offered</th>\n","      <th>Weight_in_gms</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>8440</td>\n","      <td>B</td>\n","      <td>Ship</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>284</td>\n","      <td>4</td>\n","      <td>low</td>\n","      <td>F</td>\n","      <td>4</td>\n","      <td>4795</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10849</td>\n","      <td>D</td>\n","      <td>Ship</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>201</td>\n","      <td>4</td>\n","      <td>medium</td>\n","      <td>M</td>\n","      <td>10</td>\n","      <td>5565</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>9478</td>\n","      <td>B</td>\n","      <td>Ship</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>181</td>\n","      <td>3</td>\n","      <td>medium</td>\n","      <td>F</td>\n","      <td>9</td>\n","      <td>4425</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2968</td>\n","      <td>B</td>\n","      <td>Ship</td>\n","      <td>6</td>\n","      <td>2</td>\n","      <td>236</td>\n","      <td>4</td>\n","      <td>low</td>\n","      <td>F</td>\n","      <td>61</td>\n","      <td>3140</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>6964</td>\n","      <td>B</td>\n","      <td>Road</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>282</td>\n","      <td>4</td>\n","      <td>low</td>\n","      <td>F</td>\n","      <td>9</td>\n","      <td>4766</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f43a7b2f-b238-4454-a126-9d70fa128c5c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f43a7b2f-b238-4454-a126-9d70fa128c5c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f43a7b2f-b238-4454-a126-9d70fa128c5c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f0339bef-def7-4665-b697-f039e5c6597a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f0339bef-def7-4665-b697-f039e5c6597a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f0339bef-def7-4665-b697-f039e5c6597a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X_train","summary":"{\n  \"name\": \"X_train\",\n  \"rows\": 8799,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3175,\n        \"min\": 1,\n        \"max\": 10999,\n        \"num_unique_values\": 8799,\n        \"samples\": [\n          8155,\n          6325,\n          10457\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Warehouse_block\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"D\",\n          \"C\",\n          \"F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mode_of_Shipment\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Ship\",\n          \"Road\",\n          \"Flight\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customer_care_calls\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 2,\n        \"max\": 7,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          4,\n          3,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customer_rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2,\n          5,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cost_of_the_Product\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 48,\n        \"min\": 96,\n        \"max\": 310,\n        \"num_unique_values\": 215,\n        \"samples\": [\n          301,\n          116,\n          120\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Prior_purchases\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 2,\n        \"max\": 10,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3,\n          7,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product_importance\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"low\",\n          \"medium\",\n          \"high\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"M\",\n          \"F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Discount_offered\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16,\n        \"min\": 1,\n        \"max\": 65,\n        \"num_unique_values\": 65,\n        \"samples\": [\n          15,\n          64\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weight_in_gms\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1637,\n        \"min\": 1001,\n        \"max\": 7846,\n        \"num_unique_values\": 3761,\n        \"samples\": [\n          4420,\n          3311\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["X_test.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":383},"id":"-Ui1PdjfLTAT","executionInfo":{"status":"ok","timestamp":1734062942095,"user_tz":-540,"elapsed":13,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"7e090099-9d98-4f9b-ed72-a28c3a7db0d8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      ID Warehouse_block Mode_of_Shipment  Customer_care_calls  \\\n","0   8285               C             Ship                    6   \n","1  10192               B             Ship                    7   \n","2   8675               C             Ship                    4   \n","3   5753               C           Flight                    4   \n","4    448               B             Ship                    3   \n","5   7468               B             Ship                    5   \n","6     95               C             Ship                    4   \n","7   3815               C             Road                    3   \n","8   5809               D             Ship                    2   \n","9   7613               C             Ship                    4   \n","\n","   Customer_rating  Cost_of_the_Product  Prior_purchases Product_importance  \\\n","0                5                  229                8             medium   \n","1                3                  306                4                low   \n","2                5                  148                3             medium   \n","3                4                  236                3                low   \n","4                4                  194                3             medium   \n","5                1                  245                5                low   \n","6                1                  213                4               high   \n","7                4                  231                2               high   \n","8                1                  197                4                low   \n","9                2                  273                3                low   \n","\n","  Gender  Discount_offered  Weight_in_gms  \n","0      F                 2           4271  \n","1      F                 4           1630  \n","2      F                 5           5216  \n","3      M                10           4347  \n","4      M                 3           2169  \n","5      F                 5           1996  \n","6      F                35           2343  \n","7      F                 6           4452  \n","8      M                 5           4614  \n","9      M                 2           5712  "],"text/html":["\n","  <div id=\"df-f7c3c099-a62d-42d0-bb09-aaf404e0acab\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Warehouse_block</th>\n","      <th>Mode_of_Shipment</th>\n","      <th>Customer_care_calls</th>\n","      <th>Customer_rating</th>\n","      <th>Cost_of_the_Product</th>\n","      <th>Prior_purchases</th>\n","      <th>Product_importance</th>\n","      <th>Gender</th>\n","      <th>Discount_offered</th>\n","      <th>Weight_in_gms</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>8285</td>\n","      <td>C</td>\n","      <td>Ship</td>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>229</td>\n","      <td>8</td>\n","      <td>medium</td>\n","      <td>F</td>\n","      <td>2</td>\n","      <td>4271</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10192</td>\n","      <td>B</td>\n","      <td>Ship</td>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>306</td>\n","      <td>4</td>\n","      <td>low</td>\n","      <td>F</td>\n","      <td>4</td>\n","      <td>1630</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>8675</td>\n","      <td>C</td>\n","      <td>Ship</td>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>148</td>\n","      <td>3</td>\n","      <td>medium</td>\n","      <td>F</td>\n","      <td>5</td>\n","      <td>5216</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5753</td>\n","      <td>C</td>\n","      <td>Flight</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>236</td>\n","      <td>3</td>\n","      <td>low</td>\n","      <td>M</td>\n","      <td>10</td>\n","      <td>4347</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>448</td>\n","      <td>B</td>\n","      <td>Ship</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>194</td>\n","      <td>3</td>\n","      <td>medium</td>\n","      <td>M</td>\n","      <td>3</td>\n","      <td>2169</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>7468</td>\n","      <td>B</td>\n","      <td>Ship</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>245</td>\n","      <td>5</td>\n","      <td>low</td>\n","      <td>F</td>\n","      <td>5</td>\n","      <td>1996</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>95</td>\n","      <td>C</td>\n","      <td>Ship</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>213</td>\n","      <td>4</td>\n","      <td>high</td>\n","      <td>F</td>\n","      <td>35</td>\n","      <td>2343</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>3815</td>\n","      <td>C</td>\n","      <td>Road</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>231</td>\n","      <td>2</td>\n","      <td>high</td>\n","      <td>F</td>\n","      <td>6</td>\n","      <td>4452</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>5809</td>\n","      <td>D</td>\n","      <td>Ship</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>197</td>\n","      <td>4</td>\n","      <td>low</td>\n","      <td>M</td>\n","      <td>5</td>\n","      <td>4614</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>7613</td>\n","      <td>C</td>\n","      <td>Ship</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>273</td>\n","      <td>3</td>\n","      <td>low</td>\n","      <td>M</td>\n","      <td>2</td>\n","      <td>5712</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f7c3c099-a62d-42d0-bb09-aaf404e0acab')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f7c3c099-a62d-42d0-bb09-aaf404e0acab button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f7c3c099-a62d-42d0-bb09-aaf404e0acab');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0ee3e9d6-d829-4ad1-9084-2c82de834410\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0ee3e9d6-d829-4ad1-9084-2c82de834410')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0ee3e9d6-d829-4ad1-9084-2c82de834410 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X_test","summary":"{\n  \"name\": \"X_test\",\n  \"rows\": 2200,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3176,\n        \"min\": 5,\n        \"max\": 10995,\n        \"num_unique_values\": 2200,\n        \"samples\": [\n          9133,\n          272,\n          6327\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Warehouse_block\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"B\",\n          \"A\",\n          \"D\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mode_of_Shipment\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Ship\",\n          \"Flight\",\n          \"Road\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customer_care_calls\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 2,\n        \"max\": 7,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          6,\n          7,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customer_rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3,\n          2,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cost_of_the_Product\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 47,\n        \"min\": 96,\n        \"max\": 310,\n        \"num_unique_values\": 206,\n        \"samples\": [\n          222,\n          273,\n          294\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Prior_purchases\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 2,\n        \"max\": 10,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          4,\n          7,\n          8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product_importance\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"medium\",\n          \"low\",\n          \"high\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"M\",\n          \"F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Discount_offered\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16,\n        \"min\": 1,\n        \"max\": 65,\n        \"num_unique_values\": 65,\n        \"samples\": [\n          57,\n          43\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weight_in_gms\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1626,\n        \"min\": 1005,\n        \"max\": 7588,\n        \"num_unique_values\": 1741,\n        \"samples\": [\n          1948,\n          4597\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["y_train.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"K6XUIx11LS-S","executionInfo":{"status":"ok","timestamp":1734062942095,"user_tz":-540,"elapsed":12,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"0b7c9f56-9e88-4365-f43e-913261a43032"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      ID  Reached.on.Time_Y.N\n","0   8440                    1\n","1  10849                    0\n","2   9478                    1\n","3   2968                    1\n","4   6964                    0"],"text/html":["\n","  <div id=\"df-f6dfd477-3124-4d13-9665-fdea38fb3a39\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Reached.on.Time_Y.N</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>8440</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10849</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>9478</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2968</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>6964</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f6dfd477-3124-4d13-9665-fdea38fb3a39')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f6dfd477-3124-4d13-9665-fdea38fb3a39 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f6dfd477-3124-4d13-9665-fdea38fb3a39');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8a2ec33d-911d-4f34-ba4a-a5c60e3eed0b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8a2ec33d-911d-4f34-ba4a-a5c60e3eed0b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8a2ec33d-911d-4f34-ba4a-a5c60e3eed0b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"y_train","summary":"{\n  \"name\": \"y_train\",\n  \"rows\": 8799,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3175,\n        \"min\": 1,\n        \"max\": 10999,\n        \"num_unique_values\": 8799,\n        \"samples\": [\n          8155,\n          6325,\n          10457\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Reached.on.Time_Y.N\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","source":[],"metadata":{"id":"SeBVn9Q_NYY_"}},{"cell_type":"code","source":["#지금 현재 X_train 파일과 y_train의 파일의 ID 순서가 같아 -> 그대로 Reached.on.Time_Y.N을 붙여서 이걸다시 데이터를 나눠서 머신러닝 하면 될꺼같아\n","#이게 회귀인가? 분류인가? 정시에 도착하는 사람의 분류를 구하는 거니까 분류 ? -> 그럼 일단 Classifier를 쓰자.\n","#무튼 그래서 X_train 파일에다가 y_train의 pred 값을 넣어서 붙이고, X_train파일을 train_test_split통해서 나눠서 학습시키고, 마지막에 test데이터로 ㄱㄱ\n","#Q. X_train데이터가 지금 11개 칼럼이 있는데, ID값을 없애고 머신러닝을 돌린다음(그럼 칼럼이 10개가됨), 나중에 test데이터로 검증을 할때\n","    # ID 값을 없앤 모델로 진행하면 값이 다르게 나오나?, 문제가 있나?\n","\n","#데이터를 합칠 필요없다!!! 합칠때는 cond 넣어서 확인하고 싶은게 있으면 진행\n","\n","#Q. 인코딩할때 X_train , X_test 둘다 인코딩을 해줘야하나? 아니면, X_train만 하고, 나중에 그냥 X_test에 적용해도 문제가 안생기나?"],"metadata":{"id":"DKDqb5ebLS8R"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train.describe(include='object')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"6OKjTjqGLS5j","executionInfo":{"status":"ok","timestamp":1734062942095,"user_tz":-540,"elapsed":11,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"cb685b4a-fb8c-4328-88b6-fe8d962407e1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Warehouse_block Mode_of_Shipment Product_importance Gender\n","count             8799             8799               8799   8799\n","unique               5                3                  3      2\n","top                  F             Ship                low      F\n","freq              2929             5972               4225   4450"],"text/html":["\n","  <div id=\"df-b1a19182-bfb9-49b1-a591-70c2512b4ebc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Warehouse_block</th>\n","      <th>Mode_of_Shipment</th>\n","      <th>Product_importance</th>\n","      <th>Gender</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>8799</td>\n","      <td>8799</td>\n","      <td>8799</td>\n","      <td>8799</td>\n","    </tr>\n","    <tr>\n","      <th>unique</th>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>top</th>\n","      <td>F</td>\n","      <td>Ship</td>\n","      <td>low</td>\n","      <td>F</td>\n","    </tr>\n","    <tr>\n","      <th>freq</th>\n","      <td>2929</td>\n","      <td>5972</td>\n","      <td>4225</td>\n","      <td>4450</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b1a19182-bfb9-49b1-a591-70c2512b4ebc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b1a19182-bfb9-49b1-a591-70c2512b4ebc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b1a19182-bfb9-49b1-a591-70c2512b4ebc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bd2f9b99-b67e-4cc0-83e0-184a572e45ee\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bd2f9b99-b67e-4cc0-83e0-184a572e45ee')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bd2f9b99-b67e-4cc0-83e0-184a572e45ee button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"X_train\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"Warehouse_block\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          5,\n          \"2929\",\n          \"8799\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mode_of_Shipment\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          \"5972\",\n          \"8799\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product_importance\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          \"4225\",\n          \"8799\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          \"4450\",\n          \"8799\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["X_test.describe(include='object')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"V3hxjO99LS1h","executionInfo":{"status":"ok","timestamp":1734062942095,"user_tz":-540,"elapsed":11,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"54c5fbcd-afc7-49d1-a81a-715de1fef8ae"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Warehouse_block Mode_of_Shipment Product_importance Gender\n","count             2200             2200               2200   2200\n","unique               5                3                  3      2\n","top                  F             Ship                low      M\n","freq               737             1490               1072   1105"],"text/html":["\n","  <div id=\"df-badfe64d-3e90-41dd-a177-355beb8b8209\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Warehouse_block</th>\n","      <th>Mode_of_Shipment</th>\n","      <th>Product_importance</th>\n","      <th>Gender</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>2200</td>\n","      <td>2200</td>\n","      <td>2200</td>\n","      <td>2200</td>\n","    </tr>\n","    <tr>\n","      <th>unique</th>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>top</th>\n","      <td>F</td>\n","      <td>Ship</td>\n","      <td>low</td>\n","      <td>M</td>\n","    </tr>\n","    <tr>\n","      <th>freq</th>\n","      <td>737</td>\n","      <td>1490</td>\n","      <td>1072</td>\n","      <td>1105</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-badfe64d-3e90-41dd-a177-355beb8b8209')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-badfe64d-3e90-41dd-a177-355beb8b8209 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-badfe64d-3e90-41dd-a177-355beb8b8209');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-995c6f83-21b6-45e3-be8c-476a6552b7e3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-995c6f83-21b6-45e3-be8c-476a6552b7e3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-995c6f83-21b6-45e3-be8c-476a6552b7e3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"X_test\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"Warehouse_block\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          5,\n          \"737\",\n          \"2200\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mode_of_Shipment\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          \"1490\",\n          \"2200\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product_importance\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          \"1072\",\n          \"2200\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          \"1105\",\n          \"2200\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["X_train['Mode_of_Shipment'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":209},"id":"QUml_-iReMRo","executionInfo":{"status":"ok","timestamp":1734062942425,"user_tz":-540,"elapsed":340,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"d05b6023-f0e2-4ce3-a43d-0930a44727b9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Mode_of_Shipment\n","Ship      5972\n","Road      1431\n","Flight    1396\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>Mode_of_Shipment</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Ship</th>\n","      <td>5972</td>\n","    </tr>\n","    <tr>\n","      <th>Road</th>\n","      <td>1431</td>\n","    </tr>\n","    <tr>\n","      <th>Flight</th>\n","      <td>1396</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["X_train['Product_importance'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":209},"id":"lV3ryC6zeMNN","executionInfo":{"status":"ok","timestamp":1734062942425,"user_tz":-540,"elapsed":10,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"25d8bc81-4787-493d-fe5f-4a44c136e6d1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Product_importance\n","low       4225\n","medium    3823\n","high       751\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>Product_importance</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>low</th>\n","      <td>4225</td>\n","    </tr>\n","    <tr>\n","      <th>medium</th>\n","      <td>3823</td>\n","    </tr>\n","    <tr>\n","      <th>high</th>\n","      <td>751</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":[],"metadata":{"id":"fwnpRH73eMFM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train['Warehouse_block'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":272},"id":"WGJSnU_Jd-JR","executionInfo":{"status":"ok","timestamp":1734062942426,"user_tz":-540,"elapsed":10,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"04262b3c-6984-418f-e3aa-d39feb0e9cfa"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Warehouse_block\n","F    2929\n","A    1488\n","C    1463\n","D    1460\n","B    1459\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>Warehouse_block</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>F</th>\n","      <td>2929</td>\n","    </tr>\n","    <tr>\n","      <th>A</th>\n","      <td>1488</td>\n","    </tr>\n","    <tr>\n","      <th>C</th>\n","      <td>1463</td>\n","    </tr>\n","    <tr>\n","      <th>D</th>\n","      <td>1460</td>\n","    </tr>\n","    <tr>\n","      <th>B</th>\n","      <td>1459</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["#인코딩 하기 전에 데이터를 합쳐야함! X데이터 와 y 데이터 합치기\n","#이건 다른거 쓸라고 하는것,\n","#밑에 train_test_split할때 궅이 합쳐서 train.drop 쓰고, 밑에는 포함하고 할 필요없이\n","#그냥 X_train데이터를 X_tr과 X_val로 나누고, 타겟값이 있는 y_train데이터를 y_tr, y_val로 나누면 됨\n","#기존꺼는 두개의 데이터(Train 학습용1개, test평가용1개)를 주어서 하나의 train 데이터 안에 다 있었지만,\n","# 이번꺼는 파일이 3가지를 주어진 상태에서 시작하므로(Train학습용1개=X_train, 예측값데이터1개y_train, 평가용 Test데이터1개 =X_test)\n","# 각각 진행해도 무방함!!!!\n","df = pd.concat([X_train, y_train['Reached.on.Time_Y.N']], axis=1)\n","df.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"4Xq-UmxOfbPQ","executionInfo":{"status":"ok","timestamp":1734062942426,"user_tz":-540,"elapsed":9,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"1a809dfa-594d-4e34-8980-347e703e7cae"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      ID Warehouse_block Mode_of_Shipment  Customer_care_calls  \\\n","0   8440               B             Ship                    4   \n","1  10849               D             Ship                    3   \n","2   9478               B             Ship                    4   \n","3   2968               B             Ship                    6   \n","4   6964               B             Road                    5   \n","\n","   Customer_rating  Cost_of_the_Product  Prior_purchases Product_importance  \\\n","0                1                  284                4                low   \n","1                2                  201                4             medium   \n","2                4                  181                3             medium   \n","3                2                  236                4                low   \n","4                1                  282                4                low   \n","\n","  Gender  Discount_offered  Weight_in_gms  Reached.on.Time_Y.N  \n","0      F                 4           4795                    1  \n","1      M                10           5565                    0  \n","2      F                 9           4425                    1  \n","3      F                61           3140                    1  \n","4      F                 9           4766                    0  "],"text/html":["\n","  <div id=\"df-cc2eb948-a776-4701-8c18-2c2d62bddbcf\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Warehouse_block</th>\n","      <th>Mode_of_Shipment</th>\n","      <th>Customer_care_calls</th>\n","      <th>Customer_rating</th>\n","      <th>Cost_of_the_Product</th>\n","      <th>Prior_purchases</th>\n","      <th>Product_importance</th>\n","      <th>Gender</th>\n","      <th>Discount_offered</th>\n","      <th>Weight_in_gms</th>\n","      <th>Reached.on.Time_Y.N</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>8440</td>\n","      <td>B</td>\n","      <td>Ship</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>284</td>\n","      <td>4</td>\n","      <td>low</td>\n","      <td>F</td>\n","      <td>4</td>\n","      <td>4795</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10849</td>\n","      <td>D</td>\n","      <td>Ship</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>201</td>\n","      <td>4</td>\n","      <td>medium</td>\n","      <td>M</td>\n","      <td>10</td>\n","      <td>5565</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>9478</td>\n","      <td>B</td>\n","      <td>Ship</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>181</td>\n","      <td>3</td>\n","      <td>medium</td>\n","      <td>F</td>\n","      <td>9</td>\n","      <td>4425</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2968</td>\n","      <td>B</td>\n","      <td>Ship</td>\n","      <td>6</td>\n","      <td>2</td>\n","      <td>236</td>\n","      <td>4</td>\n","      <td>low</td>\n","      <td>F</td>\n","      <td>61</td>\n","      <td>3140</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>6964</td>\n","      <td>B</td>\n","      <td>Road</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>282</td>\n","      <td>4</td>\n","      <td>low</td>\n","      <td>F</td>\n","      <td>9</td>\n","      <td>4766</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cc2eb948-a776-4701-8c18-2c2d62bddbcf')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cc2eb948-a776-4701-8c18-2c2d62bddbcf button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cc2eb948-a776-4701-8c18-2c2d62bddbcf');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a6830287-c446-461a-ae2a-92a8980e6588\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a6830287-c446-461a-ae2a-92a8980e6588')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a6830287-c446-461a-ae2a-92a8980e6588 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8799,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3175,\n        \"min\": 1,\n        \"max\": 10999,\n        \"num_unique_values\": 8799,\n        \"samples\": [\n          8155,\n          6325,\n          10457\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Warehouse_block\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"D\",\n          \"C\",\n          \"F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mode_of_Shipment\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Ship\",\n          \"Road\",\n          \"Flight\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customer_care_calls\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 2,\n        \"max\": 7,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          4,\n          3,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customer_rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2,\n          5,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cost_of_the_Product\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 48,\n        \"min\": 96,\n        \"max\": 310,\n        \"num_unique_values\": 215,\n        \"samples\": [\n          301,\n          116,\n          120\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Prior_purchases\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 2,\n        \"max\": 10,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3,\n          7,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product_importance\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"low\",\n          \"medium\",\n          \"high\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"M\",\n          \"F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Discount_offered\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16,\n        \"min\": 1,\n        \"max\": 65,\n        \"num_unique_values\": 65,\n        \"samples\": [\n          15,\n          64\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weight_in_gms\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1637,\n        \"min\": 1001,\n        \"max\": 7846,\n        \"num_unique_values\": 3761,\n        \"samples\": [\n          4420,\n          3311\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Reached.on.Time_Y.N\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["#인코딩\n","# 라벨인코딩은 문자열 데이터를 숫자로 변환하지만, 문자에 크기비교가 있은경우에는(ex low, Medium, High)이게 실제로 숫자간의 크기를 학습한다하면,\n","# 라벨인코딩이적합함, But Male,Female, 또는 Red, Blue등이 있을 경우에는 이게 실제로 크고 작고가 없자나 그럼 -> 원핫 인코딩으로 가야함!!!\n","# 이문제에는 원핫 인코딩이 적합? 각각 다름\n","# 순서가 중요하다면 라벨인코딩, 중요하지 않다면, 원핫 인코딩\n","# 중복이 되어도 알아서 맞춰서 코딩하기 때문에 열의 개수 즉 나열한 []안의 개수가 동일하게만 맞춰주면 문제 없음\n","# Warehouse_block → One-Hot Encoding\n","# Mode_of_Shipment → One-Hot Encoding\n","# Product_importance → Label Encoding\n","# Gender → One-Hot Encoding"],"metadata":{"id":"D6Iq_WQcLSzj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#이거 원핫 인코딩 하니까 Warehouse_block A,Warehouse_block B, Warehouse_block C 이런식으로 생김 ->골치아픔 그냥 라벨인코딩으로 하는게 나을듯...\n","#그리고 아이디 값이 갑자기 없어짐\n","\n","#밑에는 연습해본 코드\n","# from sklearn.preprocessing import LabelEncoder\n","\n","# cols = X_train.select_dtypes(include='object').columns\n","\n","# X_train = pd.DataFrame({\n","#     'Warehouse_bloc' : ['A','B','C','D','F'],\n","#     'Mode_of_Shipment': ['Ship', 'Road', 'Flight','Ship', 'Road'],\n","#     'Product_importance': ['low', 'medium', 'high','low', 'medium'],\n","#     'Gender': ['F', 'M', 'F','F', 'M']\n","# })\n","\n","# #원핫 인코딩\n","# X_train = pd.get_dummies(X_train, columns=['Warehouse_bloc', 'Mode_of_Shipment','Gender'])\n","\n","# #Label 인코딩\n","# le = LabelEncoder()\n","# X_train['Product_importance'] = le.fit_transform(X_train['Product_importance'] )\n","# X_test['Product_importance'] = le.transform(X_test['Product_importance'])\n","\n"],"metadata":{"id":"_Cv8-ZGpLSxB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"HUv1zptkLSuy","executionInfo":{"status":"ok","timestamp":1734062943095,"user_tz":-540,"elapsed":364,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"c3bf2621-0093-4d74-8140-2910793ebca9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      ID Warehouse_block Mode_of_Shipment  Customer_care_calls  \\\n","0   8440               B             Ship                    4   \n","1  10849               D             Ship                    3   \n","2   9478               B             Ship                    4   \n","3   2968               B             Ship                    6   \n","4   6964               B             Road                    5   \n","\n","   Customer_rating  Cost_of_the_Product  Prior_purchases Product_importance  \\\n","0                1                  284                4                low   \n","1                2                  201                4             medium   \n","2                4                  181                3             medium   \n","3                2                  236                4                low   \n","4                1                  282                4                low   \n","\n","  Gender  Discount_offered  Weight_in_gms  \n","0      F                 4           4795  \n","1      M                10           5565  \n","2      F                 9           4425  \n","3      F                61           3140  \n","4      F                 9           4766  "],"text/html":["\n","  <div id=\"df-625a7237-22e1-4f42-a0f6-171af46b0d47\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Warehouse_block</th>\n","      <th>Mode_of_Shipment</th>\n","      <th>Customer_care_calls</th>\n","      <th>Customer_rating</th>\n","      <th>Cost_of_the_Product</th>\n","      <th>Prior_purchases</th>\n","      <th>Product_importance</th>\n","      <th>Gender</th>\n","      <th>Discount_offered</th>\n","      <th>Weight_in_gms</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>8440</td>\n","      <td>B</td>\n","      <td>Ship</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>284</td>\n","      <td>4</td>\n","      <td>low</td>\n","      <td>F</td>\n","      <td>4</td>\n","      <td>4795</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10849</td>\n","      <td>D</td>\n","      <td>Ship</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>201</td>\n","      <td>4</td>\n","      <td>medium</td>\n","      <td>M</td>\n","      <td>10</td>\n","      <td>5565</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>9478</td>\n","      <td>B</td>\n","      <td>Ship</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>181</td>\n","      <td>3</td>\n","      <td>medium</td>\n","      <td>F</td>\n","      <td>9</td>\n","      <td>4425</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2968</td>\n","      <td>B</td>\n","      <td>Ship</td>\n","      <td>6</td>\n","      <td>2</td>\n","      <td>236</td>\n","      <td>4</td>\n","      <td>low</td>\n","      <td>F</td>\n","      <td>61</td>\n","      <td>3140</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>6964</td>\n","      <td>B</td>\n","      <td>Road</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>282</td>\n","      <td>4</td>\n","      <td>low</td>\n","      <td>F</td>\n","      <td>9</td>\n","      <td>4766</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-625a7237-22e1-4f42-a0f6-171af46b0d47')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-625a7237-22e1-4f42-a0f6-171af46b0d47 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-625a7237-22e1-4f42-a0f6-171af46b0d47');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ea07e991-1e97-413d-aa9c-139833eb4953\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ea07e991-1e97-413d-aa9c-139833eb4953')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ea07e991-1e97-413d-aa9c-139833eb4953 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X_train","summary":"{\n  \"name\": \"X_train\",\n  \"rows\": 8799,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3175,\n        \"min\": 1,\n        \"max\": 10999,\n        \"num_unique_values\": 8799,\n        \"samples\": [\n          8155,\n          6325,\n          10457\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Warehouse_block\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"D\",\n          \"C\",\n          \"F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mode_of_Shipment\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Ship\",\n          \"Road\",\n          \"Flight\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customer_care_calls\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 2,\n        \"max\": 7,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          4,\n          3,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customer_rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2,\n          5,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cost_of_the_Product\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 48,\n        \"min\": 96,\n        \"max\": 310,\n        \"num_unique_values\": 215,\n        \"samples\": [\n          301,\n          116,\n          120\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Prior_purchases\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 2,\n        \"max\": 10,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3,\n          7,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product_importance\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"low\",\n          \"medium\",\n          \"high\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"M\",\n          \"F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Discount_offered\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16,\n        \"min\": 1,\n        \"max\": 65,\n        \"num_unique_values\": 65,\n        \"samples\": [\n          15,\n          64\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weight_in_gms\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1637,\n        \"min\": 1001,\n        \"max\": 7846,\n        \"num_unique_values\": 3761,\n        \"samples\": [\n          4420,\n          3311\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["#정석대로 라벨인코딩 진행..\n","\n","from sklearn.preprocessing import LabelEncoder\n","cols = X_train.select_dtypes(include='object').columns\n","print(cols)\n","\n","for col in cols:\n","  le = LabelEncoder()\n","  X_train[col] = le.fit_transform(X_train[col])\n","  X_test[col] = le.transform(X_test[col])\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CgGkKuAWi-pg","executionInfo":{"status":"ok","timestamp":1734062943095,"user_tz":-540,"elapsed":16,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"8aa39d46-9edc-44d4-a58d-710026a0520e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Index(['Warehouse_block', 'Mode_of_Shipment', 'Product_importance', 'Gender'], dtype='object')\n"]}]},{"cell_type":"code","source":["#train에서 자를거 자르고 pop 해서 id 옮겨두기\n","X_train = X_train.drop('ID', axis=1)\n","X_test_id = X_test.pop('ID')"],"metadata":{"id":"6eQfw8ksLSsh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#데이터 나누기\n","#밑에 train_test_split할때 궅이 합쳐서 train.drop 쓰고, 밑에는 포함하고 할 필요없이\n","#그냥 X_train데이터를 X_tr과 X_val로 나누고, 타겟값이 있는 y_train데이터를 y_tr, y_val로 나누면 됨\n","#기존꺼는 두개의 데이터(Train 학습용1개, test평가용1개)를 주어서 하나의 train 데이터 안에 다 있었지만,\n","# 이번꺼는 파일이 3가지를 주어진 상태에서 시작하므로(Train학습용1개=X_train, 예측값데이터1개y_train, 평가용 Test데이터1개 =X_test)\n","# 각각 진행해도 무방함!!!\n","# y_train에는 id와 타겟값 2개가 있으므로 타겟만 정확히 찍어줘야함\n","from sklearn.model_selection import train_test_split\n","X_tr, X_val, y_tr, y_val = train_test_split(X_train,\n","                                            y_train['Reached.on.Time_Y.N'],\n","                                            test_size= 0.2,\n","                                            random_state= 2022)\n","\n","X_tr.shape, X_val.shape, y_tr.shape, y_val.shape\n","\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pX4wDVQNj2n4","executionInfo":{"status":"ok","timestamp":1734062943096,"user_tz":-540,"elapsed":8,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"3e1da74a-2458-4036-b098-4b0cf26b1da6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((7039, 10), (1760, 10), (7039,), (1760,))"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["# ROC-AUC 평가지표에 따라 선 import\n","from sklearn.metrics import roc_auc_score\n"],"metadata":{"id":"ocGXHbg-LSqR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#모델링 -> 여러개 연습\n","# 분류 문제니까\n","#로지스틱회귀-> 로지스틱 회귀는 회귀처럼 생겨서 회귀란 이름이 붙었지만 분류모델임!\n","from sklearn.linear_model import LogisticRegression\n","#의사결정나무\n","from sklearn.tree import DecisionTreeClassifier\n","#랜덤포레스트\n","from sklearn.ensemble import RandomForestClassifier\n","#XGBoost\n","from xgboost import XGBClassifier\n"],"metadata":{"id":"c6aGxbdRLSoZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#로지스틱회귀\n","from sklearn.linear_model import LogisticRegression\n","lr = LogisticRegression(random_state = 2022, C=1.0, solver= 'liblinear')\n","lr.fit(X_tr, y_tr)\n","pred_proba = lr.predict_proba(X_val)\n","print(roc_auc_score(y_val, pred_proba[:,1]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XVJl2aGDn6vC","executionInfo":{"status":"ok","timestamp":1734064976714,"user_tz":-540,"elapsed":302,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"ffc529eb-0bae-4257-826b-9c74b476a0f5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.7347741219192522\n"]}]},{"cell_type":"code","source":["from sklearn.tree import DecisionTreeClassifier\n","dt = DecisionTreeClassifier(random_state=2022,max_depth=3, min_samples_split=10, min_samples_leaf=5, criterion='gini')\n","dt.fit(X_tr, y_tr)\n","pred_proba = dt.predict_proba(X_val)\n","print(roc_auc_score(y_val, pred_proba[:,1]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Gs-s2SpVn6mj","executionInfo":{"status":"ok","timestamp":1734065094373,"user_tz":-540,"elapsed":306,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"116107f6-1f2e-4cf2-c86c-cc889e03ce93"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.7606125221950115\n"]}]},{"cell_type":"code","source":["#랜포\n","from sklearn.ensemble import RandomForestClassifier\n","rf = RandomForestClassifier(random_state = 2022, max_depth= 5, n_estimators = 100)\n","rf.fit(X_tr, y_tr)\n","pred_proba = rf.predict_proba(X_val)\n","print(roc_auc_score(y_val, pred_proba[:,1]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZFTijAwILSmB","executionInfo":{"status":"ok","timestamp":1734064453188,"user_tz":-540,"elapsed":1763,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"5739ca15-cded-4b54-efc7-0f1d3703ee1a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.7676374353856287\n"]}]},{"cell_type":"code","source":["#xgboost\n","from xgboost import XGBClassifier\n","xgb = XGBClassifier(random_state=2022, max_depth=1, n_estimators= 100, learning_rate =0.1, subsample=1, colsample_bytree=0.5, gamma=1)\n","xgb.fit(X_tr, y_tr)\n","pred_proba = xgb.predict_proba(X_val)\n","print(roc_auc_score(y_val, pred_proba[:,1]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SDHQjBS-vQY5","executionInfo":{"status":"ok","timestamp":1734065769607,"user_tz":-540,"elapsed":619,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"878a3ab0-d205-4d84-ee87-d498f3ed3cee"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.7705800697147147\n"]}]},{"cell_type":"code","source":["#결과1\n","#로지스틱회귀 -> 로지스틱 회귀는 회귀처럼 생겨서 회귀란 이름이 붙었지만 분류모델임!\n","# 0.7295421782040644\n","#의사결정나무\n","# 0.63291087659106\n","#랜덤포레스트\n","# 0.7554981502487046\n","#XGBoost\n","# 0.7529336160399958\n","\n","#★하이퍼 파라미터 튜닝 결과\n","#로지스틱 회귀:\n","# lr = LogisticRegression(random_state = 2022, C=1.0, solver= 'liblinear')\n","#0.7347741219192522\n","\n","# 의사결정 나무:\n","# dt = DecisionTreeClassifier(random_state=2022,max_depth=3, min_samples_split=10, min_samples_leaf=5, criterion='gini')\n","# 0.7606125221950115\n","\n","# 랜덤 포레스트:\n","# rf = RandomForestClassifier(random_state = 2022, max_depth= 5, n_estimators = 100)\n","# 0.7676374353856287\n","\n","# XGBoost:\n","# xgb = XGBClassifier(random_state=2022, max_depth=1, n_estimators= 100, learning_rate =0.1, subsample=1, colsample_bytree=0.5, gamma=1)\n","# 0.7705800697147147\n","\n","\n","\n","\n","#★하이퍼 파라미터 튜닝 종류\n","#로지스틱회귀\n","#1.C\n","#2.solver\n","#3.max_iter\n","#4.penalty\n","\n","# 사용가능 파라미터\n","# 로지스틱 회귀: C, solver, penalty, max_iter\n","# 의사결정 나무: max_depth, min_samples_split, min_samples_leaf, criterion\n","# 랜덤 포레스트: max_depth, n_estimators, min_samples_split, min_samples_leaf, max_features\n","# XGBoost: max_depth, n_estimators, learning_rate, subsample, colsample_bytree, gamma\n"],"metadata":{"id":"i0B0C-_GLSjp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#결과 값을 본 후 하이퍼 파라미터 튜닝으로 성능 올려보기\n","# random_state, max_depth, n_estimators , learning_rate\n","#러닝레이트는 어디서 안된다고 했지?"],"metadata":{"id":"AiqQ1FSMLShT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# ID,Reached.on.Time_Y.N\n"],"metadata":{"id":"-nN5yFbJLSfB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pred = xgb.predict_proba(X_test)\n","pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b-VfqzQ3LScp","executionInfo":{"status":"ok","timestamp":1734065844597,"user_tz":-540,"elapsed":455,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"c5494d27-dedb-4bda-f827-def89be098ef"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.57212234, 0.4278777 ],\n","       [0.51520467, 0.4847953 ],\n","       [0.54633725, 0.45366278],\n","       ...,\n","       [0.57438946, 0.4256105 ],\n","       [0.54633725, 0.45366278],\n","       [0.54633725, 0.45366278]], dtype=float32)"]},"metadata":{},"execution_count":119}]},{"cell_type":"code","source":["submit = pd.DataFrame({\n","          'ID': X_test_id,\n","          'Reached.on.Time_Y.N' : pred[:,1]\n","})"],"metadata":{"id":"Ks0zP0KcLSaR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["submit.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"Ca_BQRAOLSYB","executionInfo":{"status":"ok","timestamp":1734066073568,"user_tz":-540,"elapsed":320,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"a69b6013-4c59-4f38-f9e1-4426353d1e40"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      ID  Reached.on.Time_Y.N\n","0   8285             0.427878\n","1  10192             0.484795\n","2   8675             0.453663\n","3   5753             0.459141\n","4    448             0.603532"],"text/html":["\n","  <div id=\"df-26d590d6-d965-45c8-a97d-2122315e590c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Reached.on.Time_Y.N</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>8285</td>\n","      <td>0.427878</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10192</td>\n","      <td>0.484795</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>8675</td>\n","      <td>0.453663</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5753</td>\n","      <td>0.459141</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>448</td>\n","      <td>0.603532</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-26d590d6-d965-45c8-a97d-2122315e590c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-26d590d6-d965-45c8-a97d-2122315e590c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-26d590d6-d965-45c8-a97d-2122315e590c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e02d2259-faef-4ed3-884b-ab9b16094695\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e02d2259-faef-4ed3-884b-ab9b16094695')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e02d2259-faef-4ed3-884b-ab9b16094695 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"submit","summary":"{\n  \"name\": \"submit\",\n  \"rows\": 2200,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3176,\n        \"min\": 5,\n        \"max\": 10995,\n        \"num_unique_values\": 2200,\n        \"samples\": [\n          9133,\n          272,\n          6327\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Reached.on.Time_Y.N\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 151,\n        \"samples\": [\n          0.9960843324661255,\n          0.9979336261749268,\n          0.9979771971702576\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":125}]},{"cell_type":"code","source":["# CSV파일로\n","submit.to_csv('최종.csv', index=False)\n"],"metadata":{"id":"oXjaUxsdLSVZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pd.read_csv('최종.csv')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"6HPbRDgtLSTJ","executionInfo":{"status":"ok","timestamp":1734066148439,"user_tz":-540,"elapsed":326,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"e2ba695f-e1c5-42c5-e427-c57549a24759"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         ID  Reached.on.Time_Y.N\n","0      8285             0.427878\n","1     10192             0.484795\n","2      8675             0.453663\n","3      5753             0.459141\n","4       448             0.603532\n","...     ...                  ...\n","2195   7193             0.529374\n","2196   4445             0.453663\n","2197   7390             0.425611\n","2198   9977             0.453663\n","2199   5696             0.453663\n","\n","[2200 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-555986d8-5041-46f4-943e-d42975424e2b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Reached.on.Time_Y.N</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>8285</td>\n","      <td>0.427878</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10192</td>\n","      <td>0.484795</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>8675</td>\n","      <td>0.453663</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5753</td>\n","      <td>0.459141</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>448</td>\n","      <td>0.603532</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2195</th>\n","      <td>7193</td>\n","      <td>0.529374</td>\n","    </tr>\n","    <tr>\n","      <th>2196</th>\n","      <td>4445</td>\n","      <td>0.453663</td>\n","    </tr>\n","    <tr>\n","      <th>2197</th>\n","      <td>7390</td>\n","      <td>0.425611</td>\n","    </tr>\n","    <tr>\n","      <th>2198</th>\n","      <td>9977</td>\n","      <td>0.453663</td>\n","    </tr>\n","    <tr>\n","      <th>2199</th>\n","      <td>5696</td>\n","      <td>0.453663</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2200 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-555986d8-5041-46f4-943e-d42975424e2b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-555986d8-5041-46f4-943e-d42975424e2b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-555986d8-5041-46f4-943e-d42975424e2b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0fbfcbd9-4088-4536-ab73-7782df016b0a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0fbfcbd9-4088-4536-ab73-7782df016b0a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0fbfcbd9-4088-4536-ab73-7782df016b0a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 2200,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3176,\n        \"min\": 5,\n        \"max\": 10995,\n        \"num_unique_values\": 2200,\n        \"samples\": [\n          9133,\n          272,\n          6327\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Reached.on.Time_Y.N\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.23197442048955014,\n        \"min\": 0.3902368,\n        \"max\": 0.99808526,\n        \"num_unique_values\": 151,\n        \"samples\": [\n          0.99608433,\n          0.9979336,\n          0.9979772\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":127}]},{"cell_type":"code","source":["you = pd.read_csv('최종.csv')\n","print(\"당신의 score는?:\",roc_auc_score(y_test['Reached.on.Time_Y.N'], you['Reached.on.Time_Y.N']))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EVjZAJiQLSQx","executionInfo":{"status":"ok","timestamp":1734066169207,"user_tz":-540,"elapsed":294,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"a62f8da7-76f0-4e75-f521-35ac6aa3244d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["당신의 score는?: 0.7389438319992472\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"wWdifoyBLSMy"},"execution_count":null,"outputs":[]}]}