{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOEezCoT3Wclb+0PNXfwZFB"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"ZHVE_SkrqODy"},"outputs":[],"source":["1"]},{"cell_type":"markdown","source":["1유형"],"metadata":{"id":"v4e1vnRgqXnV"}},{"cell_type":"markdown","source":["1.데이터 설명 : 은행의 전화 마케팅에 대해 고객의 반응 여부"],"metadata":{"id":"Y-Q8g_UnqWbl"}},{"cell_type":"markdown","source":["1.마케팅 응답 고객들의 나이를 10살 단위로 변환 했을 때, 가장 많은 인원을 가진 나이대는? (0 ~ 9 : 0 , 10 ~ 19 : 10)"],"metadata":{"id":"XhNkWlUsqZzp"}},{"cell_type":"code","source":["import pandas as pd\n","df = pd.read_csv('https://raw.githubusercontent.com/Datamanim/datarepo/main/bank/train.csv')"],"metadata":{"id":"CQD56bFnqSnx","executionInfo":{"status":"ok","timestamp":1750143199326,"user_tz":-540,"elapsed":1371,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"syezTmPhqSlZ","executionInfo":{"status":"ok","timestamp":1750143203364,"user_tz":-540,"elapsed":378,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"004e58f1-f110-4353-cb0d-e00c9ce0a5c2"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          ID  age         job  marital  education default  balance housing  \\\n","0      13829   29  technician   single   tertiary      no    18254      no   \n","1      22677   26    services   single  secondary      no      512     yes   \n","2      10541   30  management   single  secondary      no      135      no   \n","3      13689   41  technician  married    unknown      no       30     yes   \n","4      11304   27      admin.   single  secondary      no      321      no   \n","...      ...  ...         ...      ...        ...     ...      ...     ...   \n","12865  14023   47  technician  married  secondary      no     1167     yes   \n","12866  17259   31     unknown  married  secondary      no      111      no   \n","12867  15200   37  unemployed   single   tertiary      no     1316     yes   \n","12868  13775   42  management  married   tertiary      no      479     yes   \n","12869  20137   24    services   single  secondary      no        0      no   \n","\n","      loan   contact  day month  campaign  pdays  previous poutcome    y  \n","0       no  cellular   11   may         2     -1         0  unknown   no  \n","1      yes   unknown    5   jun         3     -1         0  unknown   no  \n","2       no  cellular   14   aug         2     -1         0  unknown   no  \n","3       no  cellular   10   jul         1     -1         0  unknown   no  \n","4      yes   unknown    2   sep         1     -1         0  unknown   no  \n","...    ...       ...  ...   ...       ...    ...       ...      ...  ...  \n","12865   no  cellular   30   apr         1     87         5  failure  yes  \n","12866   no  cellular   21   nov         2     93         2  failure  yes  \n","12867   no  cellular   18   nov         1    172         2  failure   no  \n","12868   no   unknown   28   may         2     -1         0  unknown   no  \n","12869   no   unknown   16   may         1     -1         0  unknown   no  \n","\n","[12870 rows x 17 columns]"],"text/html":["\n","  <div id=\"df-7efb07e1-43be-4144-8656-d26930387cee\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>age</th>\n","      <th>job</th>\n","      <th>marital</th>\n","      <th>education</th>\n","      <th>default</th>\n","      <th>balance</th>\n","      <th>housing</th>\n","      <th>loan</th>\n","      <th>contact</th>\n","      <th>day</th>\n","      <th>month</th>\n","      <th>campaign</th>\n","      <th>pdays</th>\n","      <th>previous</th>\n","      <th>poutcome</th>\n","      <th>y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>13829</td>\n","      <td>29</td>\n","      <td>technician</td>\n","      <td>single</td>\n","      <td>tertiary</td>\n","      <td>no</td>\n","      <td>18254</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>cellular</td>\n","      <td>11</td>\n","      <td>may</td>\n","      <td>2</td>\n","      <td>-1</td>\n","      <td>0</td>\n","      <td>unknown</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>22677</td>\n","      <td>26</td>\n","      <td>services</td>\n","      <td>single</td>\n","      <td>secondary</td>\n","      <td>no</td>\n","      <td>512</td>\n","      <td>yes</td>\n","      <td>yes</td>\n","      <td>unknown</td>\n","      <td>5</td>\n","      <td>jun</td>\n","      <td>3</td>\n","      <td>-1</td>\n","      <td>0</td>\n","      <td>unknown</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10541</td>\n","      <td>30</td>\n","      <td>management</td>\n","      <td>single</td>\n","      <td>secondary</td>\n","      <td>no</td>\n","      <td>135</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>cellular</td>\n","      <td>14</td>\n","      <td>aug</td>\n","      <td>2</td>\n","      <td>-1</td>\n","      <td>0</td>\n","      <td>unknown</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>13689</td>\n","      <td>41</td>\n","      <td>technician</td>\n","      <td>married</td>\n","      <td>unknown</td>\n","      <td>no</td>\n","      <td>30</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>cellular</td>\n","      <td>10</td>\n","      <td>jul</td>\n","      <td>1</td>\n","      <td>-1</td>\n","      <td>0</td>\n","      <td>unknown</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>11304</td>\n","      <td>27</td>\n","      <td>admin.</td>\n","      <td>single</td>\n","      <td>secondary</td>\n","      <td>no</td>\n","      <td>321</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>unknown</td>\n","      <td>2</td>\n","      <td>sep</td>\n","      <td>1</td>\n","      <td>-1</td>\n","      <td>0</td>\n","      <td>unknown</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>12865</th>\n","      <td>14023</td>\n","      <td>47</td>\n","      <td>technician</td>\n","      <td>married</td>\n","      <td>secondary</td>\n","      <td>no</td>\n","      <td>1167</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>cellular</td>\n","      <td>30</td>\n","      <td>apr</td>\n","      <td>1</td>\n","      <td>87</td>\n","      <td>5</td>\n","      <td>failure</td>\n","      <td>yes</td>\n","    </tr>\n","    <tr>\n","      <th>12866</th>\n","      <td>17259</td>\n","      <td>31</td>\n","      <td>unknown</td>\n","      <td>married</td>\n","      <td>secondary</td>\n","      <td>no</td>\n","      <td>111</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>cellular</td>\n","      <td>21</td>\n","      <td>nov</td>\n","      <td>2</td>\n","      <td>93</td>\n","      <td>2</td>\n","      <td>failure</td>\n","      <td>yes</td>\n","    </tr>\n","    <tr>\n","      <th>12867</th>\n","      <td>15200</td>\n","      <td>37</td>\n","      <td>unemployed</td>\n","      <td>single</td>\n","      <td>tertiary</td>\n","      <td>no</td>\n","      <td>1316</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>cellular</td>\n","      <td>18</td>\n","      <td>nov</td>\n","      <td>1</td>\n","      <td>172</td>\n","      <td>2</td>\n","      <td>failure</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>12868</th>\n","      <td>13775</td>\n","      <td>42</td>\n","      <td>management</td>\n","      <td>married</td>\n","      <td>tertiary</td>\n","      <td>no</td>\n","      <td>479</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>unknown</td>\n","      <td>28</td>\n","      <td>may</td>\n","      <td>2</td>\n","      <td>-1</td>\n","      <td>0</td>\n","      <td>unknown</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>12869</th>\n","      <td>20137</td>\n","      <td>24</td>\n","      <td>services</td>\n","      <td>single</td>\n","      <td>secondary</td>\n","      <td>no</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>unknown</td>\n","      <td>16</td>\n","      <td>may</td>\n","      <td>1</td>\n","      <td>-1</td>\n","      <td>0</td>\n","      <td>unknown</td>\n","      <td>no</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>12870 rows × 17 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7efb07e1-43be-4144-8656-d26930387cee')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7efb07e1-43be-4144-8656-d26930387cee button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7efb07e1-43be-4144-8656-d26930387cee');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-460dc797-ac43-4fd0-9bc0-aa5b333b9aae\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-460dc797-ac43-4fd0-9bc0-aa5b333b9aae')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-460dc797-ac43-4fd0-9bc0-aa5b333b9aae button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_31337972-a838-4890-ae0a-aea4623c2b30\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_31337972-a838-4890-ae0a-aea4623c2b30 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 12870,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3715,\n        \"min\": 10000,\n        \"max\": 22869,\n        \"num_unique_values\": 12870,\n        \"samples\": [\n          12306,\n          16435,\n          18051\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11,\n        \"min\": 18,\n        \"max\": 95,\n        \"num_unique_values\": 76,\n        \"samples\": [\n          27,\n          45,\n          47\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"job\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"unknown\",\n          \"self-employed\",\n          \"technician\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"marital\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"single\",\n          \"married\",\n          \"divorced\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"education\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"secondary\",\n          \"primary\",\n          \"tertiary\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"default\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"yes\",\n          \"no\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"balance\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3311,\n        \"min\": -6847,\n        \"max\": 102127,\n        \"num_unique_values\": 4188,\n        \"samples\": [\n          -46,\n          4807\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"housing\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"yes\",\n          \"no\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"loan\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"yes\",\n          \"no\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"contact\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"cellular\",\n          \"unknown\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"day\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 1,\n        \"max\": 31,\n        \"num_unique_values\": 31,\n        \"samples\": [\n          20,\n          28\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"month\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"oct\",\n          \"feb\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"campaign\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 43,\n        \"num_unique_values\": 36,\n        \"samples\": [\n          31,\n          20\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pdays\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 104,\n        \"min\": -1,\n        \"max\": 854,\n        \"num_unique_values\": 461,\n        \"samples\": [\n          268,\n          362\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"previous\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 58,\n        \"num_unique_values\": 30,\n        \"samples\": [\n          19,\n          37\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"poutcome\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"failure\",\n          \"success\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"y\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"yes\",\n          \"no\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["df['age'].describe()\n","df['age_new'] = ((df['age']/10).astype(int)) *10\n","df['age_new'].value_counts()\n","#정답 30"],"metadata":{"id":"mXNTS-3xqSjR","executionInfo":{"status":"ok","timestamp":1750143403782,"user_tz":-540,"elapsed":26,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}}},"execution_count":9,"outputs":[]},{"cell_type":"markdown","source":["2.마케팅 응답 고객들의 나이를 10살 단위로 변환 했을 때, 가장 많은 나이대 구간의 인원은 몇명인가?\n","\n"],"metadata":{"id":"-FgcZMW6rgWH"}},{"cell_type":"code","source":["df['age_new'].value_counts()\n","#정답 5056"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":398},"id":"P9sQ1Mi-qShB","executionInfo":{"status":"ok","timestamp":1750143479395,"user_tz":-540,"elapsed":19,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"9e0df4b1-b936-4c85-e4c0-411617eb7477"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["age_new\n","30    5056\n","40    3198\n","50    2244\n","20    1638\n","60     460\n","70     193\n","80      57\n","10      18\n","90       6\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>age_new</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>30</th>\n","      <td>5056</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>3198</td>\n","    </tr>\n","    <tr>\n","      <th>50</th>\n","      <td>2244</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>1638</td>\n","    </tr>\n","    <tr>\n","      <th>60</th>\n","      <td>460</td>\n","    </tr>\n","    <tr>\n","      <th>70</th>\n","      <td>193</td>\n","    </tr>\n","    <tr>\n","      <th>80</th>\n","      <td>57</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>18</td>\n","    </tr>\n","    <tr>\n","      <th>90</th>\n","      <td>6</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":14}]},{"cell_type":"markdown","source":["3.나이가 25살 이상 29살 미만인 응답 고객들중 housing컬럼의 값이 yes인 고객의 수는?"],"metadata":{"id":"8Ji6PCmHrnJy"}},{"cell_type":"code","source":["cond = df[(df['age'] >= 25) & (df['age'] < 29)]\n","result = cond['housing'] == 'yes'\n","result.sum()\n","#정답 :504"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VAa51yc8qSex","executionInfo":{"status":"ok","timestamp":1750143669136,"user_tz":-540,"elapsed":7,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"6bd55787-dd6f-4c60-aae1-3a905b100323"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.int64(504)"]},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","source":["4.numeric한 값을 가지지 않은 컬럼들중 unique한 값을 가장 많이 가지는 컬럼은?"],"metadata":{"id":"g3tvAJY1sUaX"}},{"cell_type":"code","source":["#object 중 가장 unique를 많이 가진 컬럼을 뽑으라는것\n","df.select_dtypes(include = 'object').describe()\n","#job & month"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"bDYVCwxKqSci","executionInfo":{"status":"ok","timestamp":1750143727322,"user_tz":-540,"elapsed":94,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"9030b703-d7e1-4b17-b36f-4e44d34adfd5"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               job  marital  education default housing   loan   contact  \\\n","count        12870    12870      12870   12870   12870  12870     12870   \n","unique          12        3          4       2       2      2         3   \n","top     management  married  secondary      no     yes     no  cellular   \n","freq          2858     7490       6368   12662    6605  11060      8756   \n","\n","        month poutcome      y  \n","count   12870    12870  12870  \n","unique     12        4      2  \n","top       may  unknown     no  \n","freq     3594    10070   8903  "],"text/html":["\n","  <div id=\"df-6ccfa19a-0793-42a2-bdd5-3670105200e7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>job</th>\n","      <th>marital</th>\n","      <th>education</th>\n","      <th>default</th>\n","      <th>housing</th>\n","      <th>loan</th>\n","      <th>contact</th>\n","      <th>month</th>\n","      <th>poutcome</th>\n","      <th>y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>12870</td>\n","      <td>12870</td>\n","      <td>12870</td>\n","      <td>12870</td>\n","      <td>12870</td>\n","      <td>12870</td>\n","      <td>12870</td>\n","      <td>12870</td>\n","      <td>12870</td>\n","      <td>12870</td>\n","    </tr>\n","    <tr>\n","      <th>unique</th>\n","      <td>12</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>12</td>\n","      <td>4</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>top</th>\n","      <td>management</td>\n","      <td>married</td>\n","      <td>secondary</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>cellular</td>\n","      <td>may</td>\n","      <td>unknown</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>freq</th>\n","      <td>2858</td>\n","      <td>7490</td>\n","      <td>6368</td>\n","      <td>12662</td>\n","      <td>6605</td>\n","      <td>11060</td>\n","      <td>8756</td>\n","      <td>3594</td>\n","      <td>10070</td>\n","      <td>8903</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6ccfa19a-0793-42a2-bdd5-3670105200e7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6ccfa19a-0793-42a2-bdd5-3670105200e7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6ccfa19a-0793-42a2-bdd5-3670105200e7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-07d95fc1-c618-4277-a62a-c1d42f13d447\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-07d95fc1-c618-4277-a62a-c1d42f13d447')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-07d95fc1-c618-4277-a62a-c1d42f13d447 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"job\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          12,\n          \"2858\",\n          \"12870\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"marital\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          \"7490\",\n          \"12870\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"education\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          4,\n          \"6368\",\n          \"12870\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"default\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          \"12662\",\n          \"12870\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"housing\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          \"6605\",\n          \"12870\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"loan\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          \"11060\",\n          \"12870\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"contact\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          \"8756\",\n          \"12870\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"month\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          12,\n          \"3594\",\n          \"12870\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"poutcome\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          4,\n          \"10070\",\n          \"12870\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"y\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          \"8903\",\n          \"12870\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":23}]},{"cell_type":"markdown","source":["5.balance 컬럼값들의 평균값 이상을 가지는 데이터를 ID값을 기준으로 내림차순 정렬했을때 상위 100개 데이터의 balance값의 평균은?"],"metadata":{"id":"lJpbueqJsn-W"}},{"cell_type":"code","source":["cond = df['balance'].mean()\n","result = df[df['balance'] >= cond].sort_values('ID', ascending = False).head(100)\n","result['balance'].mean()\n","#정답\" 3473.73"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HO59fncIqSaq","executionInfo":{"status":"ok","timestamp":1750143870616,"user_tz":-540,"elapsed":12,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"0f4d649a-bf07-4800-fbd8-92ca1c0937dc"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.float64(3473.73)"]},"metadata":{},"execution_count":26}]},{"cell_type":"markdown","source":["6.가장 많은 광고를 집행했던 날짜는 언제인가? (데이터 그대로 일(숫자),달(영문)으로 표기)"],"metadata":{"id":"9pr0q3XitH9W"}},{"cell_type":"code","source":["df[['day','month']].value_counts()\n","#정답 : 15,may"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"id":"KkOU-9LJqSXy","executionInfo":{"status":"ok","timestamp":1750144195244,"user_tz":-540,"elapsed":43,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"1140004b-3653-4a77-b063-4118f5606a95"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["day  month\n","15   may      301\n","14   may      283\n","13   may      257\n","7    may      239\n","21   nov      221\n","             ... \n","     sep        1\n","26   sep        1\n","5    sep        1\n","4    oct        1\n","27   dec        1\n","Name: count, Length: 303, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>day</th>\n","      <th>month</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>15</th>\n","      <th>may</th>\n","      <td>301</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <th>may</th>\n","      <td>283</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <th>may</th>\n","      <td>257</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <th>may</th>\n","      <td>239</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"3\" valign=\"top\">21</th>\n","      <th>nov</th>\n","      <td>221</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>sep</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <th>sep</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <th>sep</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <th>oct</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <th>dec</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>303 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":42}]},{"cell_type":"markdown","source":["7.데이터의 job이 unknown 상태인 고객들의 age 컬럼 값의 정규성을 검정하고자 한다. 샤피로 검정의 p-value값을 구하여라"],"metadata":{"id":"221C6-WXuXLl"}},{"cell_type":"code","source":["cond = df[df['job'] =='unknown']\n","cond\n","\n","from scipy import stats\n","stats.shapiro(cond['age'])\n","\n","\n","\n","#정답 : 0.1961223594771469\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GQWzIuMwuW9F","executionInfo":{"status":"ok","timestamp":1750144437693,"user_tz":-540,"elapsed":12,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"3e4b0a4a-36ba-479c-8081-d81177d89b60"},"execution_count":54,"outputs":[{"output_type":"execute_result","data":{"text/plain":["ShapiroResult(statistic=np.float64(0.978472096015593), pvalue=np.float64(0.1961223594771469))"]},"metadata":{},"execution_count":54}]},{"cell_type":"markdown","source":["8.age와 balance의 상관계수를 구하여라"],"metadata":{"id":"rcPfqUdpvUFz"}},{"cell_type":"code","source":["cond = df.select_dtypes(exclude='object')\n","cond.corr()['age']\n","#정답: 0.101987\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":335},"id":"82klgWLIuV3c","executionInfo":{"status":"ok","timestamp":1750144575257,"user_tz":-540,"elapsed":27,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"c094ce46-3f46-4b5b-ee9c-b87074c119af"},"execution_count":66,"outputs":[{"output_type":"execute_result","data":{"text/plain":["ID         -0.018111\n","age         1.000000\n","balance     0.101987\n","day        -0.010639\n","campaign    0.001507\n","pdays      -0.002900\n","previous    0.023764\n","age_new     0.968413\n","Name: age, dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>ID</th>\n","      <td>-0.018111</td>\n","    </tr>\n","    <tr>\n","      <th>age</th>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>balance</th>\n","      <td>0.101987</td>\n","    </tr>\n","    <tr>\n","      <th>day</th>\n","      <td>-0.010639</td>\n","    </tr>\n","    <tr>\n","      <th>campaign</th>\n","      <td>0.001507</td>\n","    </tr>\n","    <tr>\n","      <th>pdays</th>\n","      <td>-0.002900</td>\n","    </tr>\n","    <tr>\n","      <th>previous</th>\n","      <td>0.023764</td>\n","    </tr>\n","    <tr>\n","      <th>age_new</th>\n","      <td>0.968413</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":66}]},{"cell_type":"markdown","source":["9.y 변수와 education 변수는 독립인지 카이제곱검정을 통해 확인하려한다. p-value값을 출력하라"],"metadata":{"id":"81FMdDlKv40s"}},{"cell_type":"code","source":["#카이제곱 독립성 검정 = 동질성 같고 chi2_contingency 가 있어야함\n","\n","from scipy.stats import chi2_contingency\n","crosstab = pd.crosstab(df['y'], df['education'])\n","stats.chi2_contingency(crosstab)\n","\n","#정답 :7.901201277473551e-29\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ac_kLPptqSVh","executionInfo":{"status":"ok","timestamp":1750145961289,"user_tz":-540,"elapsed":62,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"406e9a57-4651-473f-dd2d-bb0b8e71c536"},"execution_count":75,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Chi2ContingencyResult(statistic=np.float64(133.87601246919445), pvalue=np.float64(7.901201277473551e-29), dof=3, expected_freq=array([[1300.51592852, 4405.15182595, 2818.93745144,  378.39479409],\n","       [ 579.48407148, 1962.84817405, 1256.06254856,  168.60520591]]))"]},"metadata":{},"execution_count":75}]},{"cell_type":"markdown","source":["10. 각 job에 따라 divorced/married 인원의 비율을 확인 했을 때 그 값이 가장 높은 값은?"],"metadata":{"id":"AjTxK-651Gkg"}},{"cell_type":"code","source":["df.groupby(['job', 'marital']).size()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"3yPr7q9s-OYK","executionInfo":{"status":"ok","timestamp":1750148384661,"user_tz":-540,"elapsed":11,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"a66fc4cc-c823-476c-a315-27dcd61d4bae"},"execution_count":125,"outputs":[{"output_type":"execute_result","data":{"text/plain":["job            marital \n","admin.         divorced     207\n","               married      762\n","               single       495\n","blue-collar    divorced     205\n","               married     1775\n","               single       591\n","entrepreneur   divorced      44\n","               married      272\n","               single        67\n","housemaid      divorced      49\n","               married      245\n","               single        40\n","management     divorced     323\n","               married     1580\n","               single       955\n","retired        divorced     157\n","               married      572\n","               single        41\n","self-employed  divorced      39\n","               married      284\n","               single       131\n","services       divorced     138\n","               married      584\n","               single       321\n","student        married       24\n","               single       334\n","technician     divorced     246\n","               married     1115\n","               single       780\n","unemployed     divorced      62\n","               married      219\n","               single       133\n","unknown        divorced       5\n","               married       58\n","               single        17\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","    <tr>\n","      <th>job</th>\n","      <th>marital</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"3\" valign=\"top\">admin.</th>\n","      <th>divorced</th>\n","      <td>207</td>\n","    </tr>\n","    <tr>\n","      <th>married</th>\n","      <td>762</td>\n","    </tr>\n","    <tr>\n","      <th>single</th>\n","      <td>495</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"3\" valign=\"top\">blue-collar</th>\n","      <th>divorced</th>\n","      <td>205</td>\n","    </tr>\n","    <tr>\n","      <th>married</th>\n","      <td>1775</td>\n","    </tr>\n","    <tr>\n","      <th>single</th>\n","      <td>591</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"3\" valign=\"top\">entrepreneur</th>\n","      <th>divorced</th>\n","      <td>44</td>\n","    </tr>\n","    <tr>\n","      <th>married</th>\n","      <td>272</td>\n","    </tr>\n","    <tr>\n","      <th>single</th>\n","      <td>67</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"3\" valign=\"top\">housemaid</th>\n","      <th>divorced</th>\n","      <td>49</td>\n","    </tr>\n","    <tr>\n","      <th>married</th>\n","      <td>245</td>\n","    </tr>\n","    <tr>\n","      <th>single</th>\n","      <td>40</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"3\" valign=\"top\">management</th>\n","      <th>divorced</th>\n","      <td>323</td>\n","    </tr>\n","    <tr>\n","      <th>married</th>\n","      <td>1580</td>\n","    </tr>\n","    <tr>\n","      <th>single</th>\n","      <td>955</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"3\" valign=\"top\">retired</th>\n","      <th>divorced</th>\n","      <td>157</td>\n","    </tr>\n","    <tr>\n","      <th>married</th>\n","      <td>572</td>\n","    </tr>\n","    <tr>\n","      <th>single</th>\n","      <td>41</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"3\" valign=\"top\">self-employed</th>\n","      <th>divorced</th>\n","      <td>39</td>\n","    </tr>\n","    <tr>\n","      <th>married</th>\n","      <td>284</td>\n","    </tr>\n","    <tr>\n","      <th>single</th>\n","      <td>131</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"3\" valign=\"top\">services</th>\n","      <th>divorced</th>\n","      <td>138</td>\n","    </tr>\n","    <tr>\n","      <th>married</th>\n","      <td>584</td>\n","    </tr>\n","    <tr>\n","      <th>single</th>\n","      <td>321</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">student</th>\n","      <th>married</th>\n","      <td>24</td>\n","    </tr>\n","    <tr>\n","      <th>single</th>\n","      <td>334</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"3\" valign=\"top\">technician</th>\n","      <th>divorced</th>\n","      <td>246</td>\n","    </tr>\n","    <tr>\n","      <th>married</th>\n","      <td>1115</td>\n","    </tr>\n","    <tr>\n","      <th>single</th>\n","      <td>780</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"3\" valign=\"top\">unemployed</th>\n","      <th>divorced</th>\n","      <td>62</td>\n","    </tr>\n","    <tr>\n","      <th>married</th>\n","      <td>219</td>\n","    </tr>\n","    <tr>\n","      <th>single</th>\n","      <td>133</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"3\" valign=\"top\">unknown</th>\n","      <th>divorced</th>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>married</th>\n","      <td>58</td>\n","    </tr>\n","    <tr>\n","      <th>single</th>\n","      <td>17</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":125}]},{"cell_type":"code","source":["#두가지로 먼저 groupby를 묶고 바로 size해도됨! size로 구조를 본 다음 옆으로 나누려면 unstack하면됨!\n","\n","cond = df.groupby(['job', 'marital']).size().unstack()\n","cond['ratio'] = cond['divorced'] / cond['married']\n","cond.sort_values('ratio', ascending=False)\n","#정답 :0.283105"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":457},"id":"9aJAIs869h3N","executionInfo":{"status":"ok","timestamp":1750148326806,"user_tz":-540,"elapsed":108,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"6cbb4163-6758-451f-9f23-ea3368e6c64d"},"execution_count":124,"outputs":[{"output_type":"execute_result","data":{"text/plain":["marital        divorced  married  single     ratio\n","job                                               \n","unemployed         62.0    219.0   133.0  0.283105\n","retired           157.0    572.0    41.0  0.274476\n","admin.            207.0    762.0   495.0  0.271654\n","services          138.0    584.0   321.0  0.236301\n","technician        246.0   1115.0   780.0  0.220628\n","management        323.0   1580.0   955.0  0.204430\n","housemaid          49.0    245.0    40.0  0.200000\n","entrepreneur       44.0    272.0    67.0  0.161765\n","self-employed      39.0    284.0   131.0  0.137324\n","blue-collar       205.0   1775.0   591.0  0.115493\n","unknown             5.0     58.0    17.0  0.086207\n","student             NaN     24.0   334.0       NaN"],"text/html":["\n","  <div id=\"df-93cd2e77-61a9-4e74-83ee-4be5e4597862\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>marital</th>\n","      <th>divorced</th>\n","      <th>married</th>\n","      <th>single</th>\n","      <th>ratio</th>\n","    </tr>\n","    <tr>\n","      <th>job</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>unemployed</th>\n","      <td>62.0</td>\n","      <td>219.0</td>\n","      <td>133.0</td>\n","      <td>0.283105</td>\n","    </tr>\n","    <tr>\n","      <th>retired</th>\n","      <td>157.0</td>\n","      <td>572.0</td>\n","      <td>41.0</td>\n","      <td>0.274476</td>\n","    </tr>\n","    <tr>\n","      <th>admin.</th>\n","      <td>207.0</td>\n","      <td>762.0</td>\n","      <td>495.0</td>\n","      <td>0.271654</td>\n","    </tr>\n","    <tr>\n","      <th>services</th>\n","      <td>138.0</td>\n","      <td>584.0</td>\n","      <td>321.0</td>\n","      <td>0.236301</td>\n","    </tr>\n","    <tr>\n","      <th>technician</th>\n","      <td>246.0</td>\n","      <td>1115.0</td>\n","      <td>780.0</td>\n","      <td>0.220628</td>\n","    </tr>\n","    <tr>\n","      <th>management</th>\n","      <td>323.0</td>\n","      <td>1580.0</td>\n","      <td>955.0</td>\n","      <td>0.204430</td>\n","    </tr>\n","    <tr>\n","      <th>housemaid</th>\n","      <td>49.0</td>\n","      <td>245.0</td>\n","      <td>40.0</td>\n","      <td>0.200000</td>\n","    </tr>\n","    <tr>\n","      <th>entrepreneur</th>\n","      <td>44.0</td>\n","      <td>272.0</td>\n","      <td>67.0</td>\n","      <td>0.161765</td>\n","    </tr>\n","    <tr>\n","      <th>self-employed</th>\n","      <td>39.0</td>\n","      <td>284.0</td>\n","      <td>131.0</td>\n","      <td>0.137324</td>\n","    </tr>\n","    <tr>\n","      <th>blue-collar</th>\n","      <td>205.0</td>\n","      <td>1775.0</td>\n","      <td>591.0</td>\n","      <td>0.115493</td>\n","    </tr>\n","    <tr>\n","      <th>unknown</th>\n","      <td>5.0</td>\n","      <td>58.0</td>\n","      <td>17.0</td>\n","      <td>0.086207</td>\n","    </tr>\n","    <tr>\n","      <th>student</th>\n","      <td>NaN</td>\n","      <td>24.0</td>\n","      <td>334.0</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-93cd2e77-61a9-4e74-83ee-4be5e4597862')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-93cd2e77-61a9-4e74-83ee-4be5e4597862 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-93cd2e77-61a9-4e74-83ee-4be5e4597862');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-08810858-3c8e-48a8-aa73-52d261647fa6\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-08810858-3c8e-48a8-aa73-52d261647fa6')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-08810858-3c8e-48a8-aa73-52d261647fa6 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"cond\",\n  \"rows\": 12,\n  \"fields\": [\n    {\n      \"column\": \"job\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"unknown\",\n          \"blue-collar\",\n          \"unemployed\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"divorced\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 102.64253947117106,\n        \"min\": 5.0,\n        \"max\": 323.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          323.0,\n          62.0,\n          205.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"married\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 582.3691165221486,\n        \"min\": 24.0,\n        \"max\": 1775.0,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          58.0,\n          1775.0,\n          219.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"single\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 316.4411357966003,\n        \"min\": 17.0,\n        \"max\": 955.0,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          17.0,\n          591.0,\n          133.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ratio\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.06695071885532458,\n        \"min\": 0.08620689655172414,\n        \"max\": 0.2831050228310502,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          0.20443037974683545,\n          0.2831050228310502,\n          0.11549295774647887\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":124}]},{"cell_type":"markdown","source":["작업형 2유형"],"metadata":{"id":"mxWkejDp_Age"}},{"cell_type":"markdown","source":["데이터 설명 : 은행의 전화 마케팅에 대해 고객의 반응 여부\n","예측은 y -> yes 0r no로 분류모델\n","roc_auc 로 평가"],"metadata":{"id":"O8uaXQ45_Fj1"}},{"cell_type":"code","source":["import pandas as pd\n","train= pd.read_csv('https://raw.githubusercontent.com/Datamanim/datarepo/main/bank/train.csv')\n","test= pd.read_csv('https://raw.githubusercontent.com/Datamanim/datarepo/main/bank/test.csv')\n","submission= pd.read_csv('https://raw.githubusercontent.com/Datamanim/datarepo/main/bank/submission.csv')\n","\n","display(train.head())\n","display(test.head())\n","display(submission.head())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":604},"id":"jlAmkj-tqSRJ","executionInfo":{"status":"ok","timestamp":1750148593675,"user_tz":-540,"elapsed":1008,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"e1df5ec4-d106-4214-c782-914b961d61a6"},"execution_count":126,"outputs":[{"output_type":"display_data","data":{"text/plain":["      ID  age         job  marital  education default  balance housing loan  \\\n","0  13829   29  technician   single   tertiary      no    18254      no   no   \n","1  22677   26    services   single  secondary      no      512     yes  yes   \n","2  10541   30  management   single  secondary      no      135      no   no   \n","3  13689   41  technician  married    unknown      no       30     yes   no   \n","4  11304   27      admin.   single  secondary      no      321      no  yes   \n","\n","    contact  day month  campaign  pdays  previous poutcome   y  \n","0  cellular   11   may         2     -1         0  unknown  no  \n","1   unknown    5   jun         3     -1         0  unknown  no  \n","2  cellular   14   aug         2     -1         0  unknown  no  \n","3  cellular   10   jul         1     -1         0  unknown  no  \n","4   unknown    2   sep         1     -1         0  unknown  no  "],"text/html":["\n","  <div id=\"df-719653bc-a570-4d3d-b2f2-e9a3b8e7aac7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>age</th>\n","      <th>job</th>\n","      <th>marital</th>\n","      <th>education</th>\n","      <th>default</th>\n","      <th>balance</th>\n","      <th>housing</th>\n","      <th>loan</th>\n","      <th>contact</th>\n","      <th>day</th>\n","      <th>month</th>\n","      <th>campaign</th>\n","      <th>pdays</th>\n","      <th>previous</th>\n","      <th>poutcome</th>\n","      <th>y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>13829</td>\n","      <td>29</td>\n","      <td>technician</td>\n","      <td>single</td>\n","      <td>tertiary</td>\n","      <td>no</td>\n","      <td>18254</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>cellular</td>\n","      <td>11</td>\n","      <td>may</td>\n","      <td>2</td>\n","      <td>-1</td>\n","      <td>0</td>\n","      <td>unknown</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>22677</td>\n","      <td>26</td>\n","      <td>services</td>\n","      <td>single</td>\n","      <td>secondary</td>\n","      <td>no</td>\n","      <td>512</td>\n","      <td>yes</td>\n","      <td>yes</td>\n","      <td>unknown</td>\n","      <td>5</td>\n","      <td>jun</td>\n","      <td>3</td>\n","      <td>-1</td>\n","      <td>0</td>\n","      <td>unknown</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10541</td>\n","      <td>30</td>\n","      <td>management</td>\n","      <td>single</td>\n","      <td>secondary</td>\n","      <td>no</td>\n","      <td>135</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>cellular</td>\n","      <td>14</td>\n","      <td>aug</td>\n","      <td>2</td>\n","      <td>-1</td>\n","      <td>0</td>\n","      <td>unknown</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>13689</td>\n","      <td>41</td>\n","      <td>technician</td>\n","      <td>married</td>\n","      <td>unknown</td>\n","      <td>no</td>\n","      <td>30</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>cellular</td>\n","      <td>10</td>\n","      <td>jul</td>\n","      <td>1</td>\n","      <td>-1</td>\n","      <td>0</td>\n","      <td>unknown</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>11304</td>\n","      <td>27</td>\n","      <td>admin.</td>\n","      <td>single</td>\n","      <td>secondary</td>\n","      <td>no</td>\n","      <td>321</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>unknown</td>\n","      <td>2</td>\n","      <td>sep</td>\n","      <td>1</td>\n","      <td>-1</td>\n","      <td>0</td>\n","      <td>unknown</td>\n","      <td>no</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-719653bc-a570-4d3d-b2f2-e9a3b8e7aac7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-719653bc-a570-4d3d-b2f2-e9a3b8e7aac7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-719653bc-a570-4d3d-b2f2-e9a3b8e7aac7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-600263a7-6714-42d6-bfe2-34f18edf686a\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-600263a7-6714-42d6-bfe2-34f18edf686a')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-600263a7-6714-42d6-bfe2-34f18edf686a button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(submission\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4842,\n        \"min\": 10541,\n        \"max\": 22677,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          22677,\n          11304,\n          10541\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6,\n        \"min\": 26,\n        \"max\": 41,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          26,\n          27,\n          30\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"job\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"services\",\n          \"admin.\",\n          \"technician\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"marital\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"married\",\n          \"single\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"education\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"tertiary\",\n          \"secondary\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"default\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"no\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"balance\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8053,\n        \"min\": 30,\n        \"max\": 18254,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          512\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"housing\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"loan\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"contact\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"unknown\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"day\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 2,\n        \"max\": 14,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"month\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"jun\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"campaign\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pdays\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": -1,\n        \"max\": -1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          -1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"previous\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"poutcome\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"unknown\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"y\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"no\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["      ID  age          job   marital  education default  balance housing loan  \\\n","0  53608   32   management    single   tertiary      no    12569      no   no   \n","1  51055   25     services    single  secondary      no      801      no   no   \n","2  52573   46  blue-collar   married  secondary      no     1728     yes   no   \n","3  50458   39   management  divorced  secondary      no       51      no   no   \n","4  52272   31     services    single   tertiary      no     1626      no   no   \n","\n","    contact  day month  campaign  pdays  previous poutcome  \n","0  cellular    1   jul         2    295         2  success  \n","1  cellular    5   jun         2     -1         0  unknown  \n","2   unknown   26   may         2     -1         0  unknown  \n","3   unknown   17   jun         2     -1         0  unknown  \n","4   unknown   31   jul         1     -1         0  unknown  "],"text/html":["\n","  <div id=\"df-9ee3bf67-bb1a-4f4c-83e4-15b051c3b980\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>age</th>\n","      <th>job</th>\n","      <th>marital</th>\n","      <th>education</th>\n","      <th>default</th>\n","      <th>balance</th>\n","      <th>housing</th>\n","      <th>loan</th>\n","      <th>contact</th>\n","      <th>day</th>\n","      <th>month</th>\n","      <th>campaign</th>\n","      <th>pdays</th>\n","      <th>previous</th>\n","      <th>poutcome</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>53608</td>\n","      <td>32</td>\n","      <td>management</td>\n","      <td>single</td>\n","      <td>tertiary</td>\n","      <td>no</td>\n","      <td>12569</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>cellular</td>\n","      <td>1</td>\n","      <td>jul</td>\n","      <td>2</td>\n","      <td>295</td>\n","      <td>2</td>\n","      <td>success</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>51055</td>\n","      <td>25</td>\n","      <td>services</td>\n","      <td>single</td>\n","      <td>secondary</td>\n","      <td>no</td>\n","      <td>801</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>cellular</td>\n","      <td>5</td>\n","      <td>jun</td>\n","      <td>2</td>\n","      <td>-1</td>\n","      <td>0</td>\n","      <td>unknown</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>52573</td>\n","      <td>46</td>\n","      <td>blue-collar</td>\n","      <td>married</td>\n","      <td>secondary</td>\n","      <td>no</td>\n","      <td>1728</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>unknown</td>\n","      <td>26</td>\n","      <td>may</td>\n","      <td>2</td>\n","      <td>-1</td>\n","      <td>0</td>\n","      <td>unknown</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>50458</td>\n","      <td>39</td>\n","      <td>management</td>\n","      <td>divorced</td>\n","      <td>secondary</td>\n","      <td>no</td>\n","      <td>51</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>unknown</td>\n","      <td>17</td>\n","      <td>jun</td>\n","      <td>2</td>\n","      <td>-1</td>\n","      <td>0</td>\n","      <td>unknown</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>52272</td>\n","      <td>31</td>\n","      <td>services</td>\n","      <td>single</td>\n","      <td>tertiary</td>\n","      <td>no</td>\n","      <td>1626</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>unknown</td>\n","      <td>31</td>\n","      <td>jul</td>\n","      <td>1</td>\n","      <td>-1</td>\n","      <td>0</td>\n","      <td>unknown</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9ee3bf67-bb1a-4f4c-83e4-15b051c3b980')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9ee3bf67-bb1a-4f4c-83e4-15b051c3b980 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9ee3bf67-bb1a-4f4c-83e4-15b051c3b980');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-a5ded23b-ede5-45f9-8faf-b8f8dc54d381\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a5ded23b-ede5-45f9-8faf-b8f8dc54d381')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-a5ded23b-ede5-45f9-8faf-b8f8dc54d381 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(submission\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1250,\n        \"min\": 50458,\n        \"max\": 53608,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          51055,\n          52272,\n          52573\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 25,\n        \"max\": 46,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          25,\n          31,\n          46\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"job\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"management\",\n          \"services\",\n          \"blue-collar\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"marital\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"single\",\n          \"married\",\n          \"divorced\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"education\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"secondary\",\n          \"tertiary\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"default\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"no\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"balance\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5195,\n        \"min\": 51,\n        \"max\": 12569,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          801\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"housing\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"loan\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"no\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"contact\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"unknown\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"day\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 1,\n        \"max\": 31,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"month\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"jul\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"campaign\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 2,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pdays\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 132,\n        \"min\": -1,\n        \"max\": 295,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          -1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"previous\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"poutcome\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"unknown\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["      ID  predict\n","0  53608      0.0\n","1  51055      0.0\n","2  52573      0.0\n","3  50458      0.0\n","4  52272      0.0"],"text/html":["\n","  <div id=\"df-6afd5e31-3b8c-4f9d-a601-1100bedcfbe0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>predict</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>53608</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>51055</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>52573</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>50458</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>52272</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6afd5e31-3b8c-4f9d-a601-1100bedcfbe0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6afd5e31-3b8c-4f9d-a601-1100bedcfbe0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6afd5e31-3b8c-4f9d-a601-1100bedcfbe0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-07f2188d-ba3c-4f0a-a065-2099b379fab5\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-07f2188d-ba3c-4f0a-a065-2099b379fab5')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-07f2188d-ba3c-4f0a-a065-2099b379fab5 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(submission\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1250,\n        \"min\": 50458,\n        \"max\": 53608,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          51055,\n          52272,\n          52573\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"predict\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":["import pandas as pd\n","train= pd.read_csv('https://raw.githubusercontent.com/Datamanim/datarepo/main/bank/train.csv')\n","test= pd.read_csv('https://raw.githubusercontent.com/Datamanim/datarepo/main/bank/test.csv')\n","train.select_dtypes(include= 'object')\n","train.select_dtypes(exclude= 'object').columns\n","\n","train = train.drop('ID', axis=1)\n","test_id = test.pop('ID')\n","target = train.pop('y')\n","\n","\n","#스켈링\n","col = train.select_dtypes(exclude= 'object').columns\n","from sklearn.preprocessing import RobustScaler\n","scaler = RobustScaler()\n","train[col] = scaler.fit_transform(train[col])\n","test[col] = scaler.transform(test[col])\n","\n","#인코딩\n","cols = train.select_dtypes(include= 'object').columns\n","from sklearn.preprocessing import LabelEncoder\n","for col in cols:\n","  le= LabelEncoder()\n","  train[col] = le.fit_transform(train[col])\n","  test[col] = le.transform(test[col])\n","\n","\n","#데이터 나누기\n","from sklearn.model_selection import train_test_split\n","X_tr, X_val, y_tr, y_val = train_test_split(train,\n","                                            target,\n","                                            test_size=0.2,\n","                                            random_state=25,\n","                                            stratify = target)\n","print(X_tr.shape, X_val.shape, y_tr.shape, y_val.shape)\n","\n","\n","#모델링 랜포 분류\n","from sklearn.ensemble import RandomForestClassifier\n","model = RandomForestClassifier()\n","model.fit(X_tr,y_tr)\n","pred_proba = model.predict_proba(X_val)[:,1]\n","pred_proba\n","\n","\n","#검증\n","from sklearn.metrics import roc_auc_score\n","roc_auc_score = roc_auc_score(y_val , pred_proba)\n","print(roc_auc_score)\n","\n","\n","#제출\n","\n","real_pred_proba = model.predict(test)\n","submit = pd.DataFrame({\n","                      'ID' : test_id,\n","                      'pred' : real_pred_proba\n","})\n","\n","submit.to_csv(\"123398.csv\", index = False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qX3GlgsNqSPa","executionInfo":{"status":"ok","timestamp":1750150167186,"user_tz":-540,"elapsed":2164,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"ab3d3cce-e432-4285-9789-654a2e8dba6b"},"execution_count":159,"outputs":[{"output_type":"stream","name":"stdout","text":["(10296, 15) (2574, 15) (10296,) (2574,)\n","0.7734344520732717\n"]}]},{"cell_type":"code","source":["train.select_dtypes(exclude= 'object').columns\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rG7RSwWiAZba","executionInfo":{"status":"ok","timestamp":1750149118423,"user_tz":-540,"elapsed":24,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"c75879f7-bde8-4d51-dfa7-a28cbe8c2253"},"execution_count":136,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['age', 'balance', 'day', 'campaign', 'pdays', 'previous'], dtype='object')"]},"metadata":{},"execution_count":136}]},{"cell_type":"code","source":["train.select_dtypes(exclude= 'object')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"fXJWi-kjqSNZ","executionInfo":{"status":"ok","timestamp":1750149148054,"user_tz":-540,"elapsed":43,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"44f15e8f-ec3a-48aa-b708-982a871ee7c2"},"execution_count":138,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       age  balance  day  campaign  pdays  previous\n","0       29    18254   11         2     -1         0\n","1       26      512    5         3     -1         0\n","2       30      135   14         2     -1         0\n","3       41       30   10         1     -1         0\n","4       27      321    2         1     -1         0\n","...    ...      ...  ...       ...    ...       ...\n","12865   47     1167   30         1     87         5\n","12866   31      111   21         2     93         2\n","12867   37     1316   18         1    172         2\n","12868   42      479   28         2     -1         0\n","12869   24        0   16         1     -1         0\n","\n","[12870 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-c19a6570-a981-46a3-bf79-f2374da8b3ba\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>balance</th>\n","      <th>day</th>\n","      <th>campaign</th>\n","      <th>pdays</th>\n","      <th>previous</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>29</td>\n","      <td>18254</td>\n","      <td>11</td>\n","      <td>2</td>\n","      <td>-1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>26</td>\n","      <td>512</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>-1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>30</td>\n","      <td>135</td>\n","      <td>14</td>\n","      <td>2</td>\n","      <td>-1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>41</td>\n","      <td>30</td>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>-1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>27</td>\n","      <td>321</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>-1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>12865</th>\n","      <td>47</td>\n","      <td>1167</td>\n","      <td>30</td>\n","      <td>1</td>\n","      <td>87</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>12866</th>\n","      <td>31</td>\n","      <td>111</td>\n","      <td>21</td>\n","      <td>2</td>\n","      <td>93</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>12867</th>\n","      <td>37</td>\n","      <td>1316</td>\n","      <td>18</td>\n","      <td>1</td>\n","      <td>172</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>12868</th>\n","      <td>42</td>\n","      <td>479</td>\n","      <td>28</td>\n","      <td>2</td>\n","      <td>-1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>12869</th>\n","      <td>24</td>\n","      <td>0</td>\n","      <td>16</td>\n","      <td>1</td>\n","      <td>-1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>12870 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c19a6570-a981-46a3-bf79-f2374da8b3ba')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c19a6570-a981-46a3-bf79-f2374da8b3ba button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c19a6570-a981-46a3-bf79-f2374da8b3ba');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-a297602f-07fa-47b9-898d-7e6d4d3ab936\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a297602f-07fa-47b9-898d-7e6d4d3ab936')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-a297602f-07fa-47b9-898d-7e6d4d3ab936 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"train\",\n  \"rows\": 12870,\n  \"fields\": [\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11,\n        \"min\": 18,\n        \"max\": 95,\n        \"num_unique_values\": 76,\n        \"samples\": [\n          27,\n          45,\n          47\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"balance\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3311,\n        \"min\": -6847,\n        \"max\": 102127,\n        \"num_unique_values\": 4188,\n        \"samples\": [\n          -46,\n          4807,\n          3518\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"day\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 1,\n        \"max\": 31,\n        \"num_unique_values\": 31,\n        \"samples\": [\n          20,\n          28,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"campaign\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 43,\n        \"num_unique_values\": 36,\n        \"samples\": [\n          31,\n          20,\n          27\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pdays\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 104,\n        \"min\": -1,\n        \"max\": 854,\n        \"num_unique_values\": 461,\n        \"samples\": [\n          268,\n          362,\n          312\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"previous\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 58,\n        \"num_unique_values\": 30,\n        \"samples\": [\n          19,\n          37,\n          30\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":138}]},{"cell_type":"code","source":[],"metadata":{"id":"CNR5X3zGqSLJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"r2-J5l9ZqSJB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"74uvhOyNqSHC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"i5q0Sx6LqSEy"},"execution_count":null,"outputs":[]}]}