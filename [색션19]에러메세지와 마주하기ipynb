{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"10BFTQjC6Ge1_l0vXGHJr_GD8O2y_Bx_q","timestamp":1734348900982}],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# 에러메세지와 마주하기\n","- 작업형 체험하기 링크 접속 : https://bit.ly/3H64wpG\n","- 문제(에러)별로 1개씩 복사 - 체험환경에 붙여넣고 에러 확인 및 해결하기"],"metadata":{"id":"24suH3zpTrDk"}},{"cell_type":"markdown","source":["## 데이터"],"metadata":{"id":"VbR0bSP7T8LT"}},{"cell_type":"code","metadata":{"id":"nqrvE2yDNoJ_"},"source":["# 라이브러리 및 데이러 불러오기\n","import pandas as pd\n","\n","# 와인 데이터 로드\n","from sklearn.datasets import load_wine\n","wine = load_wine()\n","df = pd.DataFrame(wine.data, columns=wine.feature_names)\n","df['target'] = wine.target\n","df.head()"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['target'].value_counts()"],"metadata":{"id":"ZUugVdYVuKvR"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 에러1. 스케일링"],"metadata":{"id":"bLPZGW_MT--V"}},{"cell_type":"code","metadata":{"id":"eajIi1m8NTUx"},"source":["# 에러 코드\n","import pandas as pd\n","from sklearn.datasets import load_wine\n","wine = load_wine()\n","df = pd.DataFrame(wine.data, columns=wine.feature_names)\n","df['target'] = wine.target\n","\n","from sklearn.preprocessing import MinMaxScaler\n","scale = MinMaxScaler()\n","print(scale.fit_transform(df['alcohol']))\n","# # ValueError: Expected 2D array, got 1D array instead"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["- sklearn을 통한 스케일링 작업시 2D 데이터 입력 필요\n","- 일반적으로 cols = ['a컬럼','b컬럼'] 와 같은 리스트 형태를\n","- 스케일링 할때 scale.fit_transform(df[cols])와 같이 넣다보니 2D (데이터 프레임 ) 형태 인지 모를 수 있음\n","- df['alcohol']는 1D(시리즈) 형태이며,  df[['alcohol']] 대괄호를 두번 해야 2D(데이터 프레임) 형태임"],"metadata":{"id":"ek9Ac5s0We52"}},{"cell_type":"code","source":["# 풀이 코드\n","from sklearn.preprocessing import MinMaxScaler\n","scale = MinMaxScaler()\n","print(scale.fit_transform(df[['alcohol']]))"],"metadata":{"id":"44llrPa-Wrbp"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 에러2. 괄호"],"metadata":{"id":"2TqjQOJlX0JD"}},{"cell_type":"code","source":["# 에러 코드\n","import pandas as pd\n","from sklearn.datasets import load_wine\n","wine = load_wine()\n","df = pd.DataFrame(wine.data, columns=wine.feature_names)\n","df['target'] = wine.target\n","\n","print(df.head()\n","# SyntaxError: unexpected EOF while parsing"],"metadata":{"id":"0DNpL0p3X1CY"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["- 괄호를 개수가 맞지 않는 경우 에러 발생함\n","- 코랩에서는 정확한 위치를 찍어주지만\n","- 시험환경에서는 line 번호 와 SyntaxError: unexpected EOF while parsing를 띄움\n","- 특히 마지막에 print문으로 감싸면서 괄호 수가 맞지 않는 일이 빈번함"],"metadata":{"id":"6sOJu9huY5js"}},{"cell_type":"code","source":["# 풀이 코드\n","print(df.head())"],"metadata":{"id":"QBWQlZ-4ZZqx"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 에러3. 모델 학습 (결측치)"],"metadata":{"id":"bqLsn15oZ4sa"}},{"cell_type":"code","source":["# 에러코드\n","import pandas as pd\n","import numpy as np\n","from sklearn.datasets import load_wine\n","wine = load_wine()\n","df = pd.DataFrame(wine.data, columns=wine.feature_names)\n","df['target'] = wine.target\n","# 결측치 생성\n","df.iloc[:3,0] = np.nan\n","print(df.head())\n","\n","# 에러 수정코드 작성(결측치 처리)\n","\n","\n","from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, _ = train_test_split(df.drop('target',axis=1),\n","                                               df['target'],\n","                                               test_size=0.2,\n","                                               random_state=2022)\n","\n","from sklearn.ensemble import RandomForestClassifier\n","model = RandomForestClassifier()\n","model.fit(X_train, y_train)\n","model.predict(X_test)\n","\n","# ValueError: Input contains NaN, infinity or a value too large for dtype('float32')."],"metadata":{"id":"Abk3QkpmYBDx"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["- 결측치 처리 필요함"],"metadata":{"id":"rCyaaKgBDpOm"}},{"cell_type":"code","source":["# 에러코드\n","import numpy as np\n","from sklearn.datasets import load_wine\n","wine = load_wine()\n","df = pd.DataFrame(wine.data, columns=wine.feature_names)\n","df['target'] = wine.target\n","# 결측치 생성\n","df.iloc[:3,0] = np.nan\n","print(df.head())\n","\n","# 에러 수정코드 작성(결측치 처리)\n","df['alcohol'] = df['alcohol'].fillna(df['alcohol'].median())\n","print(df.head())\n","\n","from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, _ = train_test_split(df.drop('target',axis=1),\n","                                               df['target'],\n","                                               test_size=0.2,\n","                                               random_state=2022)\n","\n","from sklearn.ensemble import RandomForestClassifier\n","model = RandomForestClassifier()\n","model.fit(X_train, y_train)\n","model.predict(X_test)\n","\n","# ValueError: Input contains NaN, infinity or a value too large for dtype('float32')."],"metadata":{"id":"Q77qFwCnDnTh"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 에러4. 모델 학습 (데이터(row) 크기 다를 때)"],"metadata":{"id":"MWNH_G4saAwv"}},{"cell_type":"code","metadata":{"id":"e0UJLpuUNlN4"},"source":["# X_train, y_train, X_test 3개 파일이 주어졌을 때\n","import pandas as pd\n","from sklearn.datasets import load_wine\n","wine = load_wine()\n","df = pd.DataFrame(wine.data, columns=wine.feature_names)\n","df['target'] = wine.target\n","\n","from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, _ = train_test_split(df.drop('target',axis=1),\n","                                               df['target'],\n","                                               test_size=0.2,\n","                                               random_state=2022)\n","\n","# 만약 'proline'컬럼의 값이 1500 일때 이상치라고 판단해 삭제 했다면?\n","print(\"1500이상인 데이터 수:\", sum(X_train['proline'] >= 1500))\n","X_train = X_train[X_train['proline'] < 1500]\n","\n","from sklearn.ensemble import RandomForestClassifier\n","model = RandomForestClassifier()\n","model.fit(X_train, y_train)\n","\n","# ValueError: Found input variables with inconsistent numbers of samples: [138, 142]"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["- X_train의 데이터 수는 138이며, y_train의 데이터 수는 142개임\n","- X_train의 데이터에서 삭제를 할 때는 y_train에 반영을 해주거나 pd.concat을 통해 데이터를 합쳐서 전처리함"],"metadata":{"id":"I-r5XX8zhFH8"}},{"cell_type":"code","source":["# 풀이 코드\n","# X_train, y_train, X_test 3개 파일이 주어졌을 때\n","from sklearn.datasets import load_wine\n","wine = load_wine()\n","df = pd.DataFrame(wine.data, columns=wine.feature_names)\n","df['target'] = wine.target\n","\n","from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, _ = train_test_split(df.drop('target',axis=1),\n","                                               df['target'],\n","                                               test_size=0.2,\n","                                               random_state=2022)\n","\n","# 만약 'proline'컬럼의 값이 1500 일때 이상치라고 판단해 삭제 했다면?\n","print(\"1500이상인 데이터 수:\", sum(X_train['proline'] >= 1500))\n","\n","# 삭제할 데이터의 인덱스 값을 구하고 drop함수를 통해 삭제\n","ind = X_train[X_train['proline'] >= 1500].index\n","print(\"삭제할 index:\", ind)\n","X_train = X_train.drop(ind) # 기본값 axis = 0\n","y_train = y_train.drop(ind)\n","\n","from sklearn.ensemble import RandomForestClassifier\n","model = RandomForestClassifier()\n","model.fit(X_train, y_train)"],"metadata":{"id":"SuDs4zfXaaFm"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 에러5 모델 학습 (컬럼의 크기 다를 때)"],"metadata":{"id":"B1Zs0XD-abBB"}},{"cell_type":"code","source":["# 에러코드\n","import pandas as pd\n","from sklearn.datasets import load_wine\n","wine = load_wine()\n","df = pd.DataFrame(wine.data, columns=wine.feature_names)\n","df['target'] = wine.target\n","\n","from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, _ = train_test_split(df.drop('target',axis=1),\n","                                               df['target'],\n","                                               test_size=0.2,\n","                                               random_state=2022)\n","\n","print(\"컬럼 추가 전:\", X_train.shape, X_test.shape)\n","# 임의 데이터 추가 및 원핫인코딩\n","X_train = pd.get_dummies(X_train, columns=['alcohol'])\n","X_test = pd.get_dummies(X_test, columns=['alcohol'])\n","\n","print(\"컬럼 추가 후:\",X_train.shape, X_test.shape)\n","\n","from sklearn.ensemble import RandomForestClassifier\n","model = RandomForestClassifier()\n","model.fit(X_train, y_train)\n","model.predict(X_test)\n","\n","# ValueError: X has 13 features, but RandomForestClassifier is expecting 14 features as input."],"metadata":{"id":"DzLJv293aaIP"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["- RandomForestClassifier 모델은 14개의 컬럼이 입력되어야 하는데 13개의 컬럼만 있는 데이터를 입력함\n","- 데이터 전처리 & 피처 엔지니어링 에서 train데이터만 처리 했거나\n","- 원핫 인코딩 시 train과 test의 카테고리가 달라 주로 발생하는 현상"],"metadata":{"id":"7tGr5fzwlEyP"}},{"cell_type":"code","source":["# 풀이 코드\n","from sklearn.datasets import load_wine\n","wine = load_wine()\n","df = pd.DataFrame(wine.data, columns=wine.feature_names)\n","df['target'] = wine.target\n","\n","from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, _ = train_test_split(df.drop('target',axis=1),\n","                                               df['target'],\n","                                               test_size=0.2,\n","                                               random_state=2022)\n","\n","print(\"컬럼 추가 전:\", X_train.shape, X_test.shape)\n","\n","# 데이터 합친 후 새 컬럼 추가\n","all_data = pd.concat([X_train, X_test]) # 기본 axis=0\n","all_data = pd.get_dummies(all_data, columns=['alcohol'])\n","\n","# 데이터 전처리 후 다시 분리\n","X_train = all_data.iloc[:X_train.shape[0],:]\n","X_test = all_data.iloc[X_train.shape[0]:,:]\n","\n","print(\"컬럼 추가 후:\",X_train.shape, X_test.shape)\n","\n","from sklearn.ensemble import RandomForestClassifier\n","model = RandomForestClassifier()\n","model.fit(X_train, y_train)\n","model.predict(X_test)\n"],"metadata":{"id":"pZF0zsksmaq5"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 에러6.데이터 값을 변경했을 때 나타나는 경고"],"metadata":{"id":"0vrXedGsbKU0"}},{"cell_type":"code","source":["# 에러 코드\n","import pandas as pd\n","from sklearn.datasets import load_wine\n","wine = load_wine()\n","df = pd.DataFrame(wine.data, columns=wine.feature_names)\n","df['target'] = wine.target\n","\n","cols = ['alcohol','malic_acid']\n","df2 = df[cols]\n","df2.iloc[0,:] = 999\n","print(df.head())\n","# SettingWithCopyWarning"],"metadata":{"id":"Ex3vBqhxaaNa"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["- 에러는 아니지만 경고문이 발생됨.\n","- 데이터를 복사한 후 복사한 변수에 데이터 변경할 때 나타남\n","- 데이터 프레임을 복사할 때는 copy()함수를 써서 옮길 것!"],"metadata":{"id":"D0hZgvi_o5_O"}},{"cell_type":"code","source":["# 에러 코드\n","from sklearn.datasets import load_wine\n","wine = load_wine()\n","df = pd.DataFrame(wine.data, columns=wine.feature_names)\n","df['target'] = wine.target\n","\n","cols = ['alcohol','malic_acid']\n","df2 = df[cols].copy()\n","df2.iloc[0,:] = 999\n","print(df.head())\n","# SettingWithCopyWarning"],"metadata":{"id":"mO1kcJxHaaP3"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 에러7. 함수/조건문 에러"],"metadata":{"id":"jeqlRcIsbMwH"}},{"cell_type":"code","source":["# 에러 코드\n","import pandas as pd\n","from sklearn.datasets import load_wine\n","wine = load_wine()\n","df = pd.DataFrame(wine.data, columns=wine.feature_names)\n","df['target'] = wine.target\n","\n","# 알콜이 14 이상일 때 1, 14미만 일때는0으로 변경하려고 함\n","def isAlcohol(x):\n","    if x>=14\n","    return 1\n","    else\n","    return 0\n","\n","df['alcohol'] = df['alcohol'].apply(isAlcohol)\n","print(df.head())\n","\n","#  File \"<ipython-input-81-c528671e952e>\", line 9\n","#     if x>=14\n","#             ^\n","# SyntaxError: invalid syntax"],"metadata":{"id":"dwjEtzomaaSe"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["- 함수, 조건문, 반복문 등을 사용할 때는 : (콜론)과 들여쓰기에 주의해야 함"],"metadata":{"id":"dZvJ98D5qRfp"}},{"cell_type":"code","source":["# 에러 코드\n","from sklearn.datasets import load_wine\n","wine = load_wine()\n","df = pd.DataFrame(wine.data, columns=wine.feature_names)\n","df['target'] = wine.target\n","\n","def isAlcohol(x):\n","    if x>=14:\n","        return 1\n","    else:\n","        return 0\n","\n","df['alcohol'] = df['alcohol'].apply(isAlcohol)\n","print(df.head())"],"metadata":{"id":"Wag9OixIaaU-"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 에러8. 예측"],"metadata":{"id":"Sa8ukkJEbOqs"}},{"cell_type":"markdown","source":["- 다중 분류 예측"],"metadata":{"id":"Ptjkj1oAue2b"}},{"cell_type":"code","source":["# 에러코드\n","import pandas as pd\n","from sklearn.datasets import load_wine\n","wine = load_wine()\n","df = pd.DataFrame(wine.data, columns=wine.feature_names)\n","df['target'] = wine.target\n","\n","# 시험 상황에서 X_train, X_test, y_train이 주어진 상태임\n","from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, _ = train_test_split(df.drop('target',axis=1),\n","                                               df['target'],\n","                                               test_size=0.2,\n","                                               random_state=2022)\n","\n","# 검증 데이터를 만들기 위해 train_test_split\n","from sklearn.model_selection import train_test_split\n","X_tr, X_val, y_tr, y_val = train_test_split(X_train,\n","                                            y_train,\n","                                            test_size=0.15,\n","                                            random_state=2022)\n","\n","\n","from sklearn.ensemble import RandomForestClassifier\n","model = RandomForestClassifier()\n","model.fit(X_tr, y_tr)\n","pred = model.predict(X_val)\n","\n","print(pd.DataFrame({'id':X_test.index, 'X_test':pred}))\n","\n","# ValueError: arrays must all be same length"],"metadata":{"id":"nGivk6tWsz16"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["- 검증용 데이터를 제출하려고 해서 X_test.index 데이터 길이가 맞지 않다고 에러가 나타남"],"metadata":{"id":"0plGIiMtuU-Q"}},{"cell_type":"code","source":["# 풀이 코드\n","from sklearn.datasets import load_wine\n","wine = load_wine()\n","df = pd.DataFrame(wine.data, columns=wine.feature_names)\n","df['target'] = wine.target\n","\n","# 시험 상황에서 X_train, X_test, y_train이 주어진 상태임\n","from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, _ = train_test_split(df.drop('target',axis=1),\n","                                               df['target'],\n","                                               test_size=0.2,\n","                                               random_state=2022)\n","\n","# 검증 데이터를 만들기 위해 train_test_split\n","from sklearn.model_selection import train_test_split\n","X_tr, X_val, y_tr, y_val = train_test_split(X_train,\n","                                            y_train,\n","                                            test_size=0.15,\n","                                            random_state=2022)\n","\n","\n","from sklearn.ensemble import RandomForestClassifier\n","model = RandomForestClassifier()\n","model.fit(X_tr, y_tr)\n","pred = model.predict(X_test)\n","\n","print(pd.DataFrame({'id':X_test.index, 'X_test':pred}))"],"metadata":{"id":"aeR6cZHQuCYg"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 에러9. 오타에러\n","- 단순 오타\n","- ''따옴표 실수\n","- 대소문자 구분(예약어)"],"metadata":{"id":"KwLy3_0YaUQH"}},{"cell_type":"code","source":["# 라이브러리 및 데이러 불러오기\n","import pandas as pd\n","\n","# 와인 데이터 로드\n","from sklearn.datasets import load_wine\n","wine = load_wine()\n","df = pd.DataFrame(wine.data, columns=wine.feature_names)"],"metadata":{"id":"tHM7FJIUInDU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# error글자 출력\n","print('error')\n","# NameError: name 'error' is not defined"],"metadata":{"id":"Co1TJO_raZZJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# alcohol컬럼 출력\n","print(df['alcohol'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jEbxtrSOEKug","executionInfo":{"status":"ok","timestamp":1640233623205,"user_tz":-540,"elapsed":281,"user":{"displayName":"Tae Heon Kim","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GisGJkBVTmedx5du4vWaqg9LxQF1zDgzk-jMdZWYA=s64","userId":"07653788752262629837"}},"outputId":"f600117b-34db-47c5-b373-c24ce4e995ce"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0      14.23\n","1      13.20\n","2      13.16\n","3      14.37\n","4      13.24\n","       ...  \n","173    13.71\n","174    13.40\n","175    13.27\n","176    13.17\n","177    14.13\n","Name: alcohol, Length: 178, dtype: float64\n"]}]},{"cell_type":"code","source":["# alcohol컬럼 출력\n","print(df['alcohol'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LZfs23mxbBZ_","executionInfo":{"status":"ok","timestamp":1640233661060,"user_tz":-540,"elapsed":498,"user":{"displayName":"Tae Heon Kim","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GisGJkBVTmedx5du4vWaqg9LxQF1zDgzk-jMdZWYA=s64","userId":"07653788752262629837"}},"outputId":"22aebc74-a4f3-47cf-8940-348858a08820"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0      14.23\n","1      13.20\n","2      13.16\n","3      14.37\n","4      13.24\n","       ...  \n","173    13.71\n","174    13.40\n","175    13.27\n","176    13.17\n","177    14.13\n","Name: alcohol, Length: 178, dtype: float64\n"]}]},{"cell_type":"code","source":["# True(예약어 출력)\n","print(False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":221},"id":"8wNN2AAlETKV","executionInfo":{"status":"error","timestamp":1640233690369,"user_tz":-540,"elapsed":282,"user":{"displayName":"Tae Heon Kim","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GisGJkBVTmedx5du4vWaqg9LxQF1zDgzk-jMdZWYA=s64","userId":"07653788752262629837"}},"outputId":"7efd7861-7307-48f5-f238-257bdeaf9775"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-41-e89bf321bedf>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# True(예약어 출력)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'false' is not defined"]}]},{"cell_type":"markdown","source":["## 에러10. 정확한 철자가 기억이 나지 않을 때\n","- dir / __ all __ / help"],"metadata":{"id":"rZf19v17bB7A"}},{"cell_type":"markdown","source":["### 판다스"],"metadata":{"id":"xYeVcATwFbEB"}},{"cell_type":"code","source":["# 판다스 dropna 철자가 생각나지 않을 때\n","import pandas as pd\n","dir(pd)"],"metadata":{"id":"rKXjVFC9bBcJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["dir(pd.DataFrame)"],"metadata":{"id":"Z3L1d22lFJfz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["help(pd.DataFrame.dropna)"],"metadata":{"id":"M8MGYRTjFQHz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"NClx4gkxFUIF"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 사이킷런"],"metadata":{"id":"iHq0mDxZFf0w"}},{"cell_type":"code","source":["import sklearn\n","print(sklearn.__all__)"],"metadata":{"id":"JRoxUfPoFkJz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import sklearn.model_selection\n","print(sklearn.model_selection.__all__)"],"metadata":{"id":"fps1M8k7Fr8g"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import sklearn.model_selection\n","help(sklearn.model_selection.train_test_split)"],"metadata":{"id":"bbZT0l34F47D"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"E9k-rxVaGA-H"},"execution_count":null,"outputs":[]}]}