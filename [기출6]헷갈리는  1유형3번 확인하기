{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOZAX3BzrGFVF/W2Tr+tT1C"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":[],"metadata":{"id":"FYOlxSW7o_Af"}},{"cell_type":"markdown","source":["1.주어진 데이터는 각 소방서의 출동/도착 시간데이터이다. 출동시간과 도착시간 차이가 평균적으로 가장 오래 걸린 소방서의 시간을 분으로 변환해 출력하시오. (반올림 후 정수 출력)"],"metadata":{"id":"xMe0W_uVo-5f"}},{"cell_type":"code","source":["import pandas as pd\n","df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/refs/heads/main/p4/6_1/data6-1-1.csv\")"],"metadata":{"id":"kKCIKJvSo9kY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['출동시간'] = pd.to_datetime(df['출동시간'])\n","df['도착시간'] = pd.to_datetime(df['도착시간'])\n","# print(df.info())\n","df['차이시간'] = df['도착시간'] - df['출동시간']\n","# print(df['차이시간'])\n","\n","df['차이시간'] = df['차이시간'].dt.total_seconds()\n","# print(df['차이시간'])\n","\n","print(df.sort_values('차이시간', ascending = False))\n","print(df.sort_values('차이시간', ascending = False).iloc[0,-1])\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MLLrxaD5pQG2","executionInfo":{"status":"ok","timestamp":1749171051947,"user_tz":-540,"elapsed":57,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"dbdcb530-91ee-48eb-8d8e-9e080b2a8d5b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["      소방서                출동시간                도착시간    차이시간\n","53   소방서9 2023-09-12 06:12:26 2023-09-12 08:12:22  7196.0\n","85   소방서5 2023-09-17 06:12:01 2023-09-17 08:11:05  7144.0\n","97   소방서4 2023-09-12 06:11:52 2023-09-12 08:10:19  7107.0\n","8    소방서3 2023-09-18 06:11:44 2023-09-18 08:08:45  7021.0\n","1    소방서5 2023-09-19 06:11:41 2023-09-19 08:08:36  7015.0\n","..    ...                 ...                 ...     ...\n","95   소방서6 2023-09-17 06:12:02 2023-09-17 06:16:49   287.0\n","55   소방서8 2023-09-14 06:11:45 2023-09-14 06:16:01   256.0\n","42   소방서3 2023-09-13 06:11:52 2023-09-13 06:15:14   202.0\n","21   소방서2 2023-09-10 06:12:11 2023-09-10 06:15:08   177.0\n","6   소방서10 2023-09-14 06:12:30 2023-09-14 06:13:50    80.0\n","\n","[100 rows x 4 columns]\n","7196.0\n"]}]},{"cell_type":"markdown","source":["2.학교에서 교사 한 명당 맡은 학생 수가 가장 많은 학교를 찾고, 그 학교의 전체 교사 수를 구하시오. (정수 출력)"],"metadata":{"id":"mK4UT3KQpHoR"}},{"cell_type":"code","source":["import pandas as pd\n","df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/refs/heads/main/p4/6_1/data6-1-2.csv\")\n","df\n","\n","df['전체학생수'] = df.iloc[:,2:].sum(axis=1)\n","df['한명당할당'] = df.iloc[:,2:].sum(axis=1) / df['교사수']\n","df.sort_values('한명당할당', ascending = False)\n","df.sort_values('한명당할당', ascending = False).iloc[0,1]\n","\n","# print(118+72+154+118+77+59)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JIYWf5Kpo9gG","executionInfo":{"status":"ok","timestamp":1749171910423,"user_tz":-540,"elapsed":53,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"3adc1323-ac90-4696-c826-1a5c8428e5cb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.int64(19)"]},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["df['전체학생수'] = df.iloc[:,2:].sum(axis=1)\n","df['한명당할당'] = df.iloc[:,2:].sum(axis=1) / df['교사수']\n","df.sort_values('한명당할당', ascending = False)\n","# print(118+72+154+118+77+59)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"mbSvZTwautPM","executionInfo":{"status":"ok","timestamp":1749171851832,"user_tz":-540,"elapsed":121,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"4732c80d-d097-42d1-d175-dd1d26466b64"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     학교명  교사수  1학년  2학년  3학년  4학년  5학년  6학년  전체학생수       한명당할당\n","7    학교8   19  151  181  161  187  174  183   1037  109.157895\n","68  학교69   19  189  117  157  192  144  144    943   99.263158\n","48  학교49   22  163  189  192  121   99  183    947   86.090909\n","92  학교93   23   84  199  127  143  180  157    890   77.391304\n","49  학교50   21  150  154  164   78   65  195    806   76.761905\n","..   ...  ...  ...  ...  ...  ...  ...  ...    ...         ...\n","78  학교79   39  128  162  110   51   73   78    602   30.871795\n","70  학교71   41   50  139  179   50  125   70    613   29.902439\n","61  학교62   34   85   51   91   72  134   58    491   28.882353\n","89  학교90   41   57  103   59   89  184   75    567   27.658537\n","74  학교75   42   57   91   99  143   97   75    562   26.761905\n","\n","[100 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-586ef5ec-a1b2-40d9-b8f0-57b0ca3506aa\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>학교명</th>\n","      <th>교사수</th>\n","      <th>1학년</th>\n","      <th>2학년</th>\n","      <th>3학년</th>\n","      <th>4학년</th>\n","      <th>5학년</th>\n","      <th>6학년</th>\n","      <th>전체학생수</th>\n","      <th>한명당할당</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>7</th>\n","      <td>학교8</td>\n","      <td>19</td>\n","      <td>151</td>\n","      <td>181</td>\n","      <td>161</td>\n","      <td>187</td>\n","      <td>174</td>\n","      <td>183</td>\n","      <td>1037</td>\n","      <td>109.157895</td>\n","    </tr>\n","    <tr>\n","      <th>68</th>\n","      <td>학교69</td>\n","      <td>19</td>\n","      <td>189</td>\n","      <td>117</td>\n","      <td>157</td>\n","      <td>192</td>\n","      <td>144</td>\n","      <td>144</td>\n","      <td>943</td>\n","      <td>99.263158</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>학교49</td>\n","      <td>22</td>\n","      <td>163</td>\n","      <td>189</td>\n","      <td>192</td>\n","      <td>121</td>\n","      <td>99</td>\n","      <td>183</td>\n","      <td>947</td>\n","      <td>86.090909</td>\n","    </tr>\n","    <tr>\n","      <th>92</th>\n","      <td>학교93</td>\n","      <td>23</td>\n","      <td>84</td>\n","      <td>199</td>\n","      <td>127</td>\n","      <td>143</td>\n","      <td>180</td>\n","      <td>157</td>\n","      <td>890</td>\n","      <td>77.391304</td>\n","    </tr>\n","    <tr>\n","      <th>49</th>\n","      <td>학교50</td>\n","      <td>21</td>\n","      <td>150</td>\n","      <td>154</td>\n","      <td>164</td>\n","      <td>78</td>\n","      <td>65</td>\n","      <td>195</td>\n","      <td>806</td>\n","      <td>76.761905</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>78</th>\n","      <td>학교79</td>\n","      <td>39</td>\n","      <td>128</td>\n","      <td>162</td>\n","      <td>110</td>\n","      <td>51</td>\n","      <td>73</td>\n","      <td>78</td>\n","      <td>602</td>\n","      <td>30.871795</td>\n","    </tr>\n","    <tr>\n","      <th>70</th>\n","      <td>학교71</td>\n","      <td>41</td>\n","      <td>50</td>\n","      <td>139</td>\n","      <td>179</td>\n","      <td>50</td>\n","      <td>125</td>\n","      <td>70</td>\n","      <td>613</td>\n","      <td>29.902439</td>\n","    </tr>\n","    <tr>\n","      <th>61</th>\n","      <td>학교62</td>\n","      <td>34</td>\n","      <td>85</td>\n","      <td>51</td>\n","      <td>91</td>\n","      <td>72</td>\n","      <td>134</td>\n","      <td>58</td>\n","      <td>491</td>\n","      <td>28.882353</td>\n","    </tr>\n","    <tr>\n","      <th>89</th>\n","      <td>학교90</td>\n","      <td>41</td>\n","      <td>57</td>\n","      <td>103</td>\n","      <td>59</td>\n","      <td>89</td>\n","      <td>184</td>\n","      <td>75</td>\n","      <td>567</td>\n","      <td>27.658537</td>\n","    </tr>\n","    <tr>\n","      <th>74</th>\n","      <td>학교75</td>\n","      <td>42</td>\n","      <td>57</td>\n","      <td>91</td>\n","      <td>99</td>\n","      <td>143</td>\n","      <td>97</td>\n","      <td>75</td>\n","      <td>562</td>\n","      <td>26.761905</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>100 rows × 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-586ef5ec-a1b2-40d9-b8f0-57b0ca3506aa')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-586ef5ec-a1b2-40d9-b8f0-57b0ca3506aa button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-586ef5ec-a1b2-40d9-b8f0-57b0ca3506aa');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-3f6c2ae4-5646-4655-8464-a0008c69280b\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3f6c2ae4-5646-4655-8464-a0008c69280b')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-3f6c2ae4-5646-4655-8464-a0008c69280b button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"# print(118+72+154+118+77+59)\",\n  \"rows\": 100,\n  \"fields\": [\n    {\n      \"column\": \"\\ud559\\uad50\\uba85\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 100,\n        \"samples\": [\n          \"\\ud559\\uad5027\",\n          \"\\ud559\\uad5078\",\n          \"\\ud559\\uad504\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uad50\\uc0ac\\uc218\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7,\n        \"min\": 19,\n        \"max\": 42,\n        \"num_unique_values\": 24,\n        \"samples\": [\n          30,\n          34,\n          19\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"1\\ud559\\ub144\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 45,\n        \"min\": 50,\n        \"max\": 199,\n        \"num_unique_values\": 73,\n        \"samples\": [\n          150,\n          137,\n          136\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2\\ud559\\ub144\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 42,\n        \"min\": 51,\n        \"max\": 199,\n        \"num_unique_values\": 74,\n        \"samples\": [\n          154,\n          143,\n          55\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"3\\ud559\\ub144\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 46,\n        \"min\": 50,\n        \"max\": 200,\n        \"num_unique_values\": 75,\n        \"samples\": [\n          164,\n          170,\n          102\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"4\\ud559\\ub144\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 42,\n        \"min\": 50,\n        \"max\": 198,\n        \"num_unique_values\": 75,\n        \"samples\": [\n          78,\n          142,\n          60\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"5\\ud559\\ub144\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 46,\n        \"min\": 51,\n        \"max\": 198,\n        \"num_unique_values\": 76,\n        \"samples\": [\n          65,\n          176,\n          194\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"6\\ud559\\ub144\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 42,\n        \"min\": 50,\n        \"max\": 195,\n        \"num_unique_values\": 72,\n        \"samples\": [\n          98,\n          119,\n          50\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc804\\uccb4\\ud559\\uc0dd\\uc218\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 108,\n        \"min\": 481,\n        \"max\": 1037,\n        \"num_unique_values\": 87,\n        \"samples\": [\n          603,\n          1037,\n          739\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud55c\\uba85\\ub2f9\\ud560\\ub2f9\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15.01927585669301,\n        \"min\": 26.761904761904763,\n        \"max\": 109.15789473684211,\n        \"num_unique_values\": 100,\n        \"samples\": [\n          36.904761904761905,\n          45.371428571428574,\n          39.375\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":53}]},{"cell_type":"markdown","source":["3.연도별로 총 범죄 건수(범죄유형의 총합)의 월평균 값을 구한 후 그 값이 가장 큰 연도를 찾아, 해당 연도의 총 범죄 건수의 월평균 값을 출력하시오. (반올림하여 정수로 출력)"],"metadata":{"id":"wVJAa0F-pLCp"}},{"cell_type":"code","source":["import pandas as pd\n","\n","# 데이터 읽기\n","df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/refs/heads/main/p4/6_1/data6-1-3.csv\")\n","\n","df.head(3)\n","df['총범죄건수'] = df.iloc[:,1:-1].sum(axis=1)\n","\n","df['날짜'] = pd.to_datetime(df['날짜'], format = '%Y년 %m월')\n","df['연도'] = df['날짜'].dt.year\n","df['월'] = df['날짜'].dt.month\n","\n","#연도가 전체 들어가면 월 전체고 그거 평균 떄리면 월평균이됨\n","cond1 = df.groupby(['연도'])['총범죄건수'].mean()\n","cond2 = df.groupby(['연도'])['총범죄건수'].sum() /12\n","#2023년\n","print(cond1)\n","print(cond2)\n","531\n","\n","# df.sort_values('연도',ascending = False)\n","# df.groupby('총범죄건수')['날짜']\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"34Ox_GOKo9d1","executionInfo":{"status":"ok","timestamp":1749173126579,"user_tz":-540,"elapsed":45,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"0cf328b6-75ca-46f8-8a00-c8d275425e8f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["연도\n","2020    520.545455\n","2021    520.333333\n","2022    514.916667\n","2023    531.000000\n","2024    528.333333\n","Name: 총범죄건수, dtype: float64\n","연도\n","2020    477.166667\n","2021    390.250000\n","2022    514.916667\n","2023    398.250000\n","2024    396.250000\n","Name: 총범죄건수, dtype: float64\n"]},{"output_type":"execute_result","data":{"text/plain":["531"]},"metadata":{},"execution_count":91}]},{"cell_type":"code","source":[],"metadata":{"id":"x2crTGTlo9b3"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 다중 분류 문제\n","- 난방 부하 단계를 예측해주세요!\n","\n","- 예측할 값(y): Heat_Load (Very Low, Low, Medium, High, Very High)\n","- 평가: f1-macro\n","- data: train.csv, test.csv\n","- 제출 형식: result.csv파일을 아래와 같은 형식으로 제출\n","~~~\n","pred\n","Very Low\n","Low\n","High\n","...\n","Very High\n","~~~\n","\n","### 답안 제출 참고\n","- pd.read_csv('result.csv') 로 제출 코드 확인\n"],"metadata":{"id":"rkKKrT924Ulq"}},{"cell_type":"markdown","source":["답안 제출 참고\n","pd.read_csv('result.csv') 로 제출 코드 확인\n","회귀인지 분류인지 구분이 가장 중요 이거 못맞추면 2번 답 빵점임\n","\n","그리고 타겟이 문자인지 숫자인지도 매우 중요함!"],"metadata":{"id":"Q5ra3arJ4Y3V"}},{"cell_type":"code","source":["import pandas as pd\n","train = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/refs/heads/main/p4/6_2/energy_train.csv\")\n","test = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/refs/heads/main/p4/6_2/energy_test.csv\")"],"metadata":{"id":"fhV3Ah7Mo9ZW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"x3CdhSLIo9XH"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["####3유형\n","### Q1. 항암약 위약을 투여 받은 환자의 부작용은 감기약 위약을 투여 받은 환자의 부작용 분포와 차이가 있는가?"],"metadata":{"id":"GG-H0N-u5I05"}},{"cell_type":"code","source":["import pandas as pd\n","df = pd.DataFrame({ \"항암약\":[4,4,3,4,1,4,1,4,1,4,4,2,1,4,2,3,2,4,4,4] })\n","# 1: '아픔', 2: '조금 아픔', 3: '속쓰림', 4: '무증상'"],"metadata":{"id":"huvUuuIa5Ing","executionInfo":{"status":"ok","timestamp":1749174787547,"user_tz":-540,"elapsed":2,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}}},"execution_count":109,"outputs":[]},{"cell_type":"markdown","source":["감기약(위약)을 투여받은 환자들 중의 알려진 부작용 발생 비율\n","\n","1. 아픔: 10%\n","2. 조금 아픔 5%\n","3. 속 쓰림 15%\n","4. 무증상: 70%\n"],"metadata":{"id":"2So5d1j9856h"}},{"cell_type":"markdown","source":["1-1. 항암약을 투여 받은 환자 중 '무증상'의 비율을 0과 1사이로 구하시오."],"metadata":{"id":"WEi9CZUd5TrP"}},{"cell_type":"code","source":["전체 = len(df)\n","#항암약부작용\n","아픔= (df == 1).sum() / 전체\n","조금아픔 = (df ==2).sum() / 전체\n","속쓰림 = (df==3).sum() /전체\n","무증상 = (df==4).sum() / 전체\n","print(아픔)\n","print(조금아픔)\n","print(속쓰림)\n","print(무증상)\n","\n","#위처럼 구하면 시간이 많이 걸리니 normalize을 활용하자!\n","\n","df.value_counts(normalize =True)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":388},"id":"EIXgf3Bj7Szi","executionInfo":{"status":"ok","timestamp":1749175107356,"user_tz":-540,"elapsed":51,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"0e7c7d32-2f0e-41d0-8757-d521427aa9ef"},"execution_count":114,"outputs":[{"output_type":"stream","name":"stdout","text":["항암약    0.2\n","dtype: float64\n","항암약    0.15\n","dtype: float64\n","항암약    0.1\n","dtype: float64\n","항암약    0.55\n","dtype: float64\n"]},{"output_type":"execute_result","data":{"text/plain":["항암약\n","4      0.55\n","1      0.20\n","2      0.15\n","3      0.10\n","Name: proportion, dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>proportion</th>\n","    </tr>\n","    <tr>\n","      <th>항암약</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>4</th>\n","      <td>0.55</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.20</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.15</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.10</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":114}]},{"cell_type":"markdown","source":["\n","1-2. 감기약의 예상 부작용 비율과 항암약의 부작용 관찰값이 통계적으로 유의미하게 차이가 있는지 확인하려 한다. 카이 제곱 검정을 사용하여 검정 통계량을 구하시오."],"metadata":{"id":"m-QwlCYG5Ws6"}},{"cell_type":"code","source":["#통계적 차이 보려고한다 -> 기대도수와  관찰도수 나와야함\n","# ob\n","# ex\n","#카이제곱검정 -> 어떤거 쓸지 딱 나와야함 from scipy import stats\n","\n","#ob에 순서를 1~4 순서로 나열해야하니까 sort_index를 해줘야하고 이거랑 밑에 ex와 순서가 같아야 하니 꼭 sort_index()해줘야함!\n","ob = df['항암약'].value_counts().sort_index()\n","ex = [0.1 *20 , 0.05*20, 0.15*20, 0.7*20]\n","\n","from scipy import stats\n","stats.chisquare(ob,ex)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dzMqBSF27TR5","executionInfo":{"status":"ok","timestamp":1749176333295,"user_tz":-540,"elapsed":47,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"3ea82a92-1707-4874-e4e9-4cfc42892803"},"execution_count":118,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Power_divergenceResult(statistic=np.float64(6.976190476190476), pvalue=np.float64(0.07266054733847573))"]},"metadata":{},"execution_count":118}]},{"cell_type":"markdown","source":["1-3. 위의 p-값을 구하시오"],"metadata":{"id":"jBFV4KhO5Y-f"}},{"cell_type":"markdown","source":["Q2.\n","2-1\n","다중 선형 회귀 모델을 구축하고, 독립변수 o3의 회귀계수를 구하시오.\n","독립변수: solar(태양 에너지), wind(바람의 세기), o3(오존 농도)\n","종속변수: temperature(온도)"],"metadata":{"id":"36A5-nd35c7X"}},{"cell_type":"code","source":["import pandas as pd\n","df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/refs/heads/main/p4/6_3/data6-3-2.csv\")\n","df.head(2)"],"metadata":{"id":"UBK9GDiHo9U5","colab":{"base_uri":"https://localhost:8080/","height":112},"executionInfo":{"status":"ok","timestamp":1749176462167,"user_tz":-540,"elapsed":112,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"738cb492-c793-4e14-843a-0cdae9074a32"},"execution_count":119,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    solar  wind     o3  temperature\n","0   89.14  6.28  33.52         23.0\n","1  109.97  1.04  27.01         20.7"],"text/html":["\n","  <div id=\"df-4a646beb-966d-4647-be8a-ccda9d64ef68\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>solar</th>\n","      <th>wind</th>\n","      <th>o3</th>\n","      <th>temperature</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>89.14</td>\n","      <td>6.28</td>\n","      <td>33.52</td>\n","      <td>23.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>109.97</td>\n","      <td>1.04</td>\n","      <td>27.01</td>\n","      <td>20.7</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4a646beb-966d-4647-be8a-ccda9d64ef68')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4a646beb-966d-4647-be8a-ccda9d64ef68 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4a646beb-966d-4647-be8a-ccda9d64ef68');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-ceb053d4-2a90-456f-bf3d-95b7ca7aadaa\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ceb053d4-2a90-456f-bf3d-95b7ca7aadaa')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-ceb053d4-2a90-456f-bf3d-95b7ca7aadaa button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 100,\n  \"fields\": [\n    {\n      \"column\": \"solar\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.33938759146608,\n        \"min\": 72.01,\n        \"max\": 123.92,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          116.61,\n          83.94,\n          110.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wind\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.9496422334325436,\n        \"min\": -1.46,\n        \"max\": 10.2,\n        \"num_unique_values\": 92,\n        \"samples\": [\n          7.53,\n          5.24,\n          7.75\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"o3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.871279693107844,\n        \"min\": 19.24,\n        \"max\": 44.79,\n        \"num_unique_values\": 91,\n        \"samples\": [\n          31.25,\n          28.19,\n          30.58\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"temperature\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.7559181315905596,\n        \"min\": 17.5,\n        \"max\": 26.4,\n        \"num_unique_values\": 55,\n        \"samples\": [\n          18.8,\n          24.7,\n          23.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":119}]},{"cell_type":"code","source":["#다중선형회귀 하면 딱 뭐가 떠올라야해 -> 최소제곱법 -> from statsmodels.formula.api import ols\n","from statsmodels.formula.api import ols\n","model = ols('temperature ~ solar + wind + o3', data =df).fit()\n","print(model.summary())\n","print(model.params['o3'])\n","\n","from statsmodels.formula.api import ols\n","model = ols('temperature ~ solar + wind+ o3', data= df).fit()\n","print(model.summary())\n","print(model.params['o3'])\n","\n","from statsmodels.formula.api import ols\n","model = ols('temperature ~ solar + wind + o3', data = df).fit()\n","model.summary()\n","model.params['o3']\n","\n","# 다중선형회귀 -> ols 써야겠다\n","from statsmodels.formula.api import ols\n","model = ols('temperature + solar + wind + o3', data = df).fit()\n","model.summary()\n","model.params['o3']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"tpQ_R059CbaZ","executionInfo":{"status":"error","timestamp":1749177558725,"user_tz":-540,"elapsed":103,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"3a5891f3-d9ff-4d55-f7b0-b51f354a7b1c"},"execution_count":126,"outputs":[{"output_type":"stream","name":"stdout","text":["                            OLS Regression Results                            \n","==============================================================================\n","Dep. Variable:            temperature   R-squared:                       0.044\n","Model:                            OLS   Adj. R-squared:                  0.014\n","Method:                 Least Squares   F-statistic:                     1.464\n","Date:                Fri, 06 Jun 2025   Prob (F-statistic):              0.229\n","Time:                        02:39:18   Log-Likelihood:                -195.45\n","No. Observations:                 100   AIC:                             398.9\n","Df Residuals:                      96   BIC:                             409.3\n","Df Model:                           3                                         \n","Covariance Type:            nonrobust                                         \n","==============================================================================\n","                 coef    std err          t      P>|t|      [0.025      0.975]\n","------------------------------------------------------------------------------\n","Intercept     19.0507      1.994      9.555      0.000      15.093      23.008\n","solar          0.0039      0.015      0.251      0.802      -0.027       0.035\n","wind          -0.0252      0.090     -0.280      0.780      -0.204       0.153\n","o3             0.0749      0.036      2.079      0.040       0.003       0.146\n","==============================================================================\n","Omnibus:                        0.654   Durbin-Watson:                   2.328\n","Prob(Omnibus):                  0.721   Jarque-Bera (JB):                0.672\n","Skew:                           0.187   Prob(JB):                        0.715\n","Kurtosis:                       2.855   Cond. No.                     1.20e+03\n","==============================================================================\n","\n","Notes:\n","[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n","[2] The condition number is large, 1.2e+03. This might indicate that there are\n","strong multicollinearity or other numerical problems.\n","0.0749385437813658\n","                            OLS Regression Results                            \n","==============================================================================\n","Dep. Variable:            temperature   R-squared:                       0.044\n","Model:                            OLS   Adj. R-squared:                  0.014\n","Method:                 Least Squares   F-statistic:                     1.464\n","Date:                Fri, 06 Jun 2025   Prob (F-statistic):              0.229\n","Time:                        02:39:18   Log-Likelihood:                -195.45\n","No. Observations:                 100   AIC:                             398.9\n","Df Residuals:                      96   BIC:                             409.3\n","Df Model:                           3                                         \n","Covariance Type:            nonrobust                                         \n","==============================================================================\n","                 coef    std err          t      P>|t|      [0.025      0.975]\n","------------------------------------------------------------------------------\n","Intercept     19.0507      1.994      9.555      0.000      15.093      23.008\n","solar          0.0039      0.015      0.251      0.802      -0.027       0.035\n","wind          -0.0252      0.090     -0.280      0.780      -0.204       0.153\n","o3             0.0749      0.036      2.079      0.040       0.003       0.146\n","==============================================================================\n","Omnibus:                        0.654   Durbin-Watson:                   2.328\n","Prob(Omnibus):                  0.721   Jarque-Bera (JB):                0.672\n","Skew:                           0.187   Prob(JB):                        0.715\n","Kurtosis:                       2.855   Cond. No.                     1.20e+03\n","==============================================================================\n","\n","Notes:\n","[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n","[2] The condition number is large, 1.2e+03. This might indicate that there are\n","strong multicollinearity or other numerical problems.\n","0.0749385437813658\n"]},{"output_type":"error","ename":"PatsyError","evalue":"model is missing required outcome variables","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mPatsyError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-126-a30d69dd75b0>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     17\u001b[0m \u001b[0;31m# 다중선형회귀 -> ols 써야겠다\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     18\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mstatsmodels\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformula\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapi\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mols\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 19\u001b[0;31m \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mols\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'temperature + solar + wind + o3'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     20\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msummary\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     21\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mparams\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'o3'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/statsmodels/base/model.py\u001b[0m in \u001b[0;36mfrom_formula\u001b[0;34m(cls, formula, data, subset, drop_cols, *args, **kwargs)\u001b[0m\n\u001b[1;32m    201\u001b[0m             \u001b[0mmissing\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'raise'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    202\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 203\u001b[0;31m         tmp = handle_formula_data(data, None, formula, depth=eval_env,\n\u001b[0m\u001b[1;32m    204\u001b[0m                                   missing=missing)\n\u001b[1;32m    205\u001b[0m         \u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mendog\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexog\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmissing_idx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdesign_info\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtmp\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/statsmodels/formula/formulatools.py\u001b[0m in \u001b[0;36mhandle_formula_data\u001b[0;34m(Y, X, formula, depth, missing)\u001b[0m\n\u001b[1;32m     61\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     62\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mdata_util\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_is_using_pandas\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mY\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 63\u001b[0;31m             result = dmatrices(formula, Y, depth, return_type='dataframe',\n\u001b[0m\u001b[1;32m     64\u001b[0m                                NA_action=na_action)\n\u001b[1;32m     65\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/patsy/highlevel.py\u001b[0m in \u001b[0;36mdmatrices\u001b[0;34m(formula_like, data, eval_env, NA_action, return_type)\u001b[0m\n\u001b[1;32m    321\u001b[0m     )\n\u001b[1;32m    322\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mlhs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 323\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mPatsyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"model is missing required outcome variables\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    324\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mlhs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrhs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mPatsyError\u001b[0m: model is missing required outcome variables"]}]},{"cell_type":"markdown","source":["2-2.데이터에서 'solar'와 'o3' 값을 고정한 상태에서, 'wind'의 세기가 증가함에 따라 'temperature'가 감소하는지를 검증하기 위해 다중 선형 회귀 분석을 수행하고, 이 때'wind'의 회귀 계수에 대한 p-value 값을 구하시오. (유의수준: 0.05)"],"metadata":{"id":"BeTJ7Rk65h5i"}},{"cell_type":"code","source":["#위에 다중선형회귀는 했으니 다시하고 wind p_value 구하자\n","from statsmodels.formula.api import ols\n","model = ols('temperature ~ solar + wind+ o3', data=df).fit()\n","print(model.summary())\n","print(model.pvalues['wind'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d8TrkXuMG8XR","executionInfo":{"status":"ok","timestamp":1749177732860,"user_tz":-540,"elapsed":60,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"d0accd34-f9bf-4a37-d4d4-d9e080d8fd67"},"execution_count":133,"outputs":[{"output_type":"stream","name":"stdout","text":["                            OLS Regression Results                            \n","==============================================================================\n","Dep. Variable:            temperature   R-squared:                       0.044\n","Model:                            OLS   Adj. R-squared:                  0.014\n","Method:                 Least Squares   F-statistic:                     1.464\n","Date:                Fri, 06 Jun 2025   Prob (F-statistic):              0.229\n","Time:                        02:42:12   Log-Likelihood:                -195.45\n","No. Observations:                 100   AIC:                             398.9\n","Df Residuals:                      96   BIC:                             409.3\n","Df Model:                           3                                         \n","Covariance Type:            nonrobust                                         \n","==============================================================================\n","                 coef    std err          t      P>|t|      [0.025      0.975]\n","------------------------------------------------------------------------------\n","Intercept     19.0507      1.994      9.555      0.000      15.093      23.008\n","solar          0.0039      0.015      0.251      0.802      -0.027       0.035\n","wind          -0.0252      0.090     -0.280      0.780      -0.204       0.153\n","o3             0.0749      0.036      2.079      0.040       0.003       0.146\n","==============================================================================\n","Omnibus:                        0.654   Durbin-Watson:                   2.328\n","Prob(Omnibus):                  0.721   Jarque-Bera (JB):                0.672\n","Skew:                           0.187   Prob(JB):                        0.715\n","Kurtosis:                       2.855   Cond. No.                     1.20e+03\n","==============================================================================\n","\n","Notes:\n","[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n","[2] The condition number is large, 1.2e+03. This might indicate that there are\n","strong multicollinearity or other numerical problems.\n","0.7797177202071661\n"]}]},{"cell_type":"markdown","source":["2-3 solar:100, wind:5, o3:30일 때 예측값과 그에 대한 95% 신뢰구간을 구하시오."],"metadata":{"id":"juTX18lv5sRF"}},{"cell_type":"code","source":["#새롭게 데이터 프레임을 짜야겠다 - > 새로 예측해야겠다\n","new_data = pd.DataFrame({\n","                           'solar' : [100],\n","                           'wind' : [5],\n","                           'o3' : [30]\n","})\n","\n","pred = model.get_prediction(new_data)\n","print(pred.summary_frame(alpha=0.05))\n"],"metadata":{"id":"FQQI07ceo9Sm","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1749178155823,"user_tz":-540,"elapsed":11,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"89ddac74-1072-4a13-b956-4166a3adc102"},"execution_count":140,"outputs":[{"output_type":"stream","name":"stdout","text":["       mean   mean_se  mean_ci_lower  mean_ci_upper  obs_ci_lower  \\\n","0  21.56163  0.175263      21.213737      21.909524     18.082985   \n","\n","   obs_ci_upper  \n","0     25.040276  \n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"VwMFAGf-o9QO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"JkjKFGbmo9OA"},"execution_count":null,"outputs":[]}]}