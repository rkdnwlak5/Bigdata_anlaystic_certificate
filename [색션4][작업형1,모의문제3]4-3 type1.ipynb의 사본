{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1LrpIVZHV-WakAcQuMiL25ULo0Iiipb_F","timestamp":1730107758985}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# 작업형1 모의문제3\n","- data : members.csv"],"metadata":{"id":"jvuNsPAY41yZ"}},{"cell_type":"markdown","source":["## 문제7\n","- index '2001' 데이터(행)의 평균보다 큰 값의 갯수와\n","- index '2003' 데이터(행)의 평균보다 작은 값의 갯수를 더하시오\n","\n","[참고]\n","- 데이터가 랜덤으로 생성되어 결과값이 다를 수 있습니다. 🙏\n","- 혹, 랜덤 결과값을 고정하기 위해서는 seed값을 넣어 주면 됩니다.\n","- import random 이후 random.seed(2022) 입력\n","- 정답: 202 (영상에서 seed값을 고정하지 못해 동일한 데이터 구현을 못했습니다. 202가 정답입니다.)"],"metadata":{"id":"PVBhS3mWQOJp"}},{"cell_type":"code","source":["# 데이터 생성(먼저 실행해 주세요)\n","import pandas as pd\n","import random\n","random.seed(2022)\n","df = pd.DataFrame()\n","for i in range(0, 5):\n","    list_box = []\n","    for k in range(0, 200):\n","        ran_num = random.randint(1,200)\n","        list_box.append(ran_num)\n","    df[i+2000] = list_box\n","df = df.T\n","df.to_csv(\"data.csv\", index=True)"],"metadata":{"id":"D62uzCgSedAM"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":[],"metadata":{"id":"i86xmfJnn28O"}},{"cell_type":"markdown","source":[],"metadata":{"id":"pJhwWWVJn3UB"}},{"cell_type":"code","source":["#이게 정답! -> sum을 각각 해줘야 개수가 나옴 ! -> count1과 count2에 각각 sum을 안한상태로 그냥 print(count1 +count2)를 하게되면, 문제 발생 ->즉 True + True = 2, True + False = 1, 이런 식으로 계산돼서 중복된 열이 있을 경우 2로 계산됩니다.\n","# 👉 이 문제에서는 단순히 각각의 개수를 구해서 더해야 하므로, 아래처럼 해야 맞습니다:\n","#정답은 202인데 sum을 각각 안하고 더하면 150이 나오므로 오답임! 꼭 확인!\n","\n","count1 = (df.loc[2001] > df.loc[2001].mean()).sum()\n","count2 = (df.loc[2003] < df.loc[2003].mean()).sum()\n","print(count1 + count2)\n","\n"],"metadata":{"id":"9dNwlNsp2gt9","executionInfo":{"status":"ok","timestamp":1730701565693,"user_tz":-540,"elapsed":13,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"f1d8bd34-3422-42aa-d79a-2abe29785c19","colab":{"base_uri":"https://localhost:8080/","height":235}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      0    1    2    3    4    5    6    7    8    9    ...  190  191  192  \\\n","2000  137   74  114  140   80  150   16  133  178  181  ...  124   94  118   \n","2001  176   87   64  110  128   16    8    4  123   87  ...   59   22    3   \n","2002  128  132  123  112  134  160  180   47  115  155  ...  160  111  116   \n","2003   78   45   26   50  177  119   47   72  163  125  ...  163   88   52   \n","2004    1  162  124   12    1  126   58  123  186  161  ...  100   93   86   \n","\n","      193  194  195  196  197  198  199  \n","2000   12   50  191  137  174   56  128  \n","2001  108   17  104  101  161  156   43  \n","2002   75   48   51   81  101  194   73  \n","2003   79  192   83    5   75  196  119  \n","2004   12  115   72   29   30   88  150  \n","\n","[5 rows x 200 columns]"],"text/html":["\n","  <div id=\"df-7fa83217-2795-4609-afaf-d97b981f343a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>...</th>\n","      <th>190</th>\n","      <th>191</th>\n","      <th>192</th>\n","      <th>193</th>\n","      <th>194</th>\n","      <th>195</th>\n","      <th>196</th>\n","      <th>197</th>\n","      <th>198</th>\n","      <th>199</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2000</th>\n","      <td>137</td>\n","      <td>74</td>\n","      <td>114</td>\n","      <td>140</td>\n","      <td>80</td>\n","      <td>150</td>\n","      <td>16</td>\n","      <td>133</td>\n","      <td>178</td>\n","      <td>181</td>\n","      <td>...</td>\n","      <td>124</td>\n","      <td>94</td>\n","      <td>118</td>\n","      <td>12</td>\n","      <td>50</td>\n","      <td>191</td>\n","      <td>137</td>\n","      <td>174</td>\n","      <td>56</td>\n","      <td>128</td>\n","    </tr>\n","    <tr>\n","      <th>2001</th>\n","      <td>176</td>\n","      <td>87</td>\n","      <td>64</td>\n","      <td>110</td>\n","      <td>128</td>\n","      <td>16</td>\n","      <td>8</td>\n","      <td>4</td>\n","      <td>123</td>\n","      <td>87</td>\n","      <td>...</td>\n","      <td>59</td>\n","      <td>22</td>\n","      <td>3</td>\n","      <td>108</td>\n","      <td>17</td>\n","      <td>104</td>\n","      <td>101</td>\n","      <td>161</td>\n","      <td>156</td>\n","      <td>43</td>\n","    </tr>\n","    <tr>\n","      <th>2002</th>\n","      <td>128</td>\n","      <td>132</td>\n","      <td>123</td>\n","      <td>112</td>\n","      <td>134</td>\n","      <td>160</td>\n","      <td>180</td>\n","      <td>47</td>\n","      <td>115</td>\n","      <td>155</td>\n","      <td>...</td>\n","      <td>160</td>\n","      <td>111</td>\n","      <td>116</td>\n","      <td>75</td>\n","      <td>48</td>\n","      <td>51</td>\n","      <td>81</td>\n","      <td>101</td>\n","      <td>194</td>\n","      <td>73</td>\n","    </tr>\n","    <tr>\n","      <th>2003</th>\n","      <td>78</td>\n","      <td>45</td>\n","      <td>26</td>\n","      <td>50</td>\n","      <td>177</td>\n","      <td>119</td>\n","      <td>47</td>\n","      <td>72</td>\n","      <td>163</td>\n","      <td>125</td>\n","      <td>...</td>\n","      <td>163</td>\n","      <td>88</td>\n","      <td>52</td>\n","      <td>79</td>\n","      <td>192</td>\n","      <td>83</td>\n","      <td>5</td>\n","      <td>75</td>\n","      <td>196</td>\n","      <td>119</td>\n","    </tr>\n","    <tr>\n","      <th>2004</th>\n","      <td>1</td>\n","      <td>162</td>\n","      <td>124</td>\n","      <td>12</td>\n","      <td>1</td>\n","      <td>126</td>\n","      <td>58</td>\n","      <td>123</td>\n","      <td>186</td>\n","      <td>161</td>\n","      <td>...</td>\n","      <td>100</td>\n","      <td>93</td>\n","      <td>86</td>\n","      <td>12</td>\n","      <td>115</td>\n","      <td>72</td>\n","      <td>29</td>\n","      <td>30</td>\n","      <td>88</td>\n","      <td>150</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 200 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7fa83217-2795-4609-afaf-d97b981f343a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7fa83217-2795-4609-afaf-d97b981f343a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7fa83217-2795-4609-afaf-d97b981f343a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9ed004fe-a3de-4e75-9c3f-e9f042974449\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9ed004fe-a3de-4e75-9c3f-e9f042974449')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9ed004fe-a3de-4e75-9c3f-e9f042974449 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_ad97f2e3-fef0-40f1-927c-944b46649791\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_ad97f2e3-fef0-40f1-927c-944b46649791 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["df = pd.read_csv(\"data.csv\", index_col=\"Unnamed: 0\")\n","# your code\n","# loc가 핵심인 문제\n","# print(df.head(2))\n","\n","#index '2001' 데이터(행)의 평균보다 큰 값의 갯수와\n","m2001 = df.loc[2001].mean()\n","# print(m2001)\n","cond1 = df.loc[2001] > m2001\n","# sum(cond1)\n","#True인 값은 1, False인 값은 0이기 때문에 갯수를 구 할 수 있다.\n","\n","#index '2003' 데이터(행)의 평균보다 작은 값의 갯수를 더하시오\n","m2003 = df.loc[2003].mean()\n","cond2 = df.loc[2003] < m2003\n","# sum(cond2)\n","\n","print(sum((cond1 + cond2)))\n"],"metadata":{"id":"d9UC9l2OQQ4m","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1730701547264,"user_tz":-540,"elapsed":376,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"f2964dd5-e1f6-4067-97c0-c8e67c17a8ce"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["150\n"]}]},{"cell_type":"code","source":["# 문제7 (한방에 풀기)\n","# index '2001' 데이터(행)의 평균보다 큰 값의 갯수와\n","# index '2003' 데이터(행)의 평균보다 작은 값의 갯수를 더하시오# 데이터 생성(먼저 실행해 주세요)\n","import pandas as pd\n","import random\n","random.seed(2022)\n","df = pd.DataFrame()\n","for i in range(0, 5):\n","    list_box = []\n","    for k in range(0, 200):\n","        ran_num = random.randint(1,200)\n","        list_box.append(ran_num)\n","    df[i+2000] = list_box\n","df = df.T\n","df.to_csv(\"data.csv\", index=True)\n","\n","df = pd.read_csv(\"data.csv\", index_col=\"Unnamed: 0\")\n","\n","# df.head(7)\n","m2001 = df.loc[2001] > df.loc[2001].mean()\n","m2003 = df.loc[2003].mean() < df.loc[2003].mean()\n","\n","print(sum(m2001 + m2003))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BNksnY3Mng7k","executionInfo":{"status":"ok","timestamp":1730262204691,"user_tz":-540,"elapsed":384,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"b8df223b-07d7-4d2e-ad1d-ccd04c27b36f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["100\n"]}]},{"cell_type":"markdown","source":["## 문제8\n","- 결측 값을 가진 데이터는 바로 뒤에 있는 값으로 대체한 후 (바로 뒤가 결측값이라면 뒤에 있는 데이터 중 가장 가까운 값)\n","- city와 f2 컬럼 기준으로 그룹합을 계산한 뒤\n","- views가 세번째로 큰 city(도시) 이름은?"],"metadata":{"id":"h2IXr3A_QRWS"}},{"cell_type":"code","source":["# your code\n","import pandas as pd\n","df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/main/p1/members.csv\")\n","\n","df.head()\n","\n","\n","#결측값 채우기\n","#bfill는 뒤에있는 값을 채우라는것 , ffill은 앞에 값으로 채우라는 것\n","# display를 통해서도 값을 전체적으로 보며 확인할 수 있음\n","# vip인 뒤에 값이 앞을 채운걸 볼 수 있음\n","# display(df.head(7))\n","# 강의에서 method= 'bfill' 방식은 곧 삭제될 예정이라 다른 방식으로 써야함\n","# df = df.fillna(method='bfill')\n","# df.isnull().sum()\n","# display(df.head(7))\n","\n","#여기부터 다시\n","#결측값 조회\n","# df.isnull().sum()\n","# #뒷값가져오기\n","df = df.bfill()\n","# #city와 f2기준으로 합(sum) 해라, 이후 리셋인덱스로, 인덱스값리셋으로 깔끔하게 0부터 시작되게 나오게 함\n","df = df.groupby(['city','f2']).sum().reset_index()\n","# # views가 세번째로 큰 city(도시) 이름은? -> 여기는 구분하기 -> 여기서 df = 으로 안넣어 놓으면 결과값 이상하게 나옴 꼭 확인☆☆☆☆☆\n","df = df.sort_values('views',ascending = False)\n","df\n","# #이름을 산출하려면 iloc 활용\n","print(df.iloc[2,0])\n","\n"],"metadata":{"id":"SNMu1ew0QTnD","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1730112381029,"user_tz":-540,"elapsed":349,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"ac4e235a-9608-4ecb-c1f2-ae7b8679015d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["대구\n"]}]},{"cell_type":"code","source":["# 문제8 한방에 풀기\n","# 결측 값을 가진 데이터는 바로 뒤에 있는 값으로 대체한 후 (바로 뒤가 결측값이라면 뒤에 있는 데이터 중 가장 가까운 값)\n","# city와 f2 컬럼 기준으로 그룹합을 계산한 뒤\n","# views가 세번째로 큰 city(도시) 이름은?\n","import pandas as pd\n","df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/main/p1/members.csv\")\n","\n","#df=으로 저장전 앞뒤 데이터를 한번에 같이 보는 방법이 뭐였지??????????????\n","df.head(10)\n","# df.shape\n","df = df.bfill()\n","# df.shape\n","df.head(10)\n","\n","df = df.groupby(['city', 'f2']).sum().reset_index()\n","df = df.sort_values('views', ascending = False)\n","print(df.iloc[2,0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Bn1tnnGBr_X9","executionInfo":{"status":"ok","timestamp":1730264000954,"user_tz":-540,"elapsed":367,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"d7f463b0-263c-4751-f1fb-34c584afc4a0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["대구\n"]}]},{"cell_type":"markdown","source":["## 문제9\n","- 구독(subscribed) 월별로 데이터 개수를 구한 뒤\n","- 가장 작은 구독 수가 있는 월을 구하시오"],"metadata":{"id":"gV-W-F2wQTuw"}},{"cell_type":"code","source":["# your code\n","import pandas as pd\n","df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/main/p1/members.csv\")\n","# df.head()\n","# df.info()\n","#기존 df.head()만 봐서는 월별로 구분할 수 가 없음 -> datetime형태로 변경을 시켜줘야 월별 구분 가능\n","# df.info() 통해서 보면 subscribed가 object 형식이라서\n","\n","df['subscribed'] = pd.to_datetime(df['subscribed'])\n","# df.info()\n","# 새로운 칼럼을 만들자\n","df['year'] = df['subscribed'].dt.year\n","df['month'] = df['subscribed'].dt.month\n","df['day'] = df['subscribed'].dt.day\n","\n","df.head()\n","\n","# month를 그룹바이해서, 월별로, subecribed의(구독자) 개수를 구하자\n","df = df.groupby('month').count()\n","\n","#마지막으로 이걸 코딩으로 11월이 나오게 해야함 - > sort_values로 구분해주고, index[순번]으로 값 출력!!!\n","df.sort_values('subscribed').index[0]"],"metadata":{"id":"TAP8aeX0QW3L","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1730266045882,"user_tz":-540,"elapsed":398,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"b51374b1-4bb3-4d7c-a78c-e44944dc3b48"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["11"]},"metadata":{},"execution_count":88}]},{"cell_type":"code","source":["# 문제9 한방에 풀기\n","# 구독(subscribed) 월별로 데이터 개수를 구한 뒤\n","# 가장 작은 구독 수가 있는 월을 구하시오\n","import pandas as pd\n","df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/main/p1/members.csv\")\n","df\n","\n","df['subscribed'] = pd.to_datetime(df['subscribed'])\n","\n","df['year'] = df['subscribed'].dt.year\n","df['month'] = df['subscribed'].dt.month\n","df['day'] = df['subscribed'].dt.day\n","\n","df = df.groupby('month').count()\n","df.sort_values('subscribed').index[0]\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bDeYksbfxZAL","executionInfo":{"status":"ok","timestamp":1730266159941,"user_tz":-540,"elapsed":385,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"82690bc7-19fd-4e98-9cba-19c7626f75c8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["11"]},"metadata":{},"execution_count":94}]},{"cell_type":"markdown","source":["# 풀이"],"metadata":{"id":"7wXaul1WQZth"}},{"cell_type":"markdown","source":["## 문제7\n","- index '2001' 데이터(행)의 평균보다 큰 값의 수와\n","- index '2003' 데이터(행)의 평균보다 작은 값의 수를 더하시오"],"metadata":{"id":"xZSeADoX9iEQ"}},{"cell_type":"code","source":["# 데이터 생성\n","import pandas as pd\n","import random\n","random.seed(2022)\n","df = pd.DataFrame()\n","for i in range(0, 5):\n","    list_box = []\n","    for k in range(0, 200):\n","        ran_num = random.randint(1,200)\n","        list_box.append(ran_num)\n","    df[i+2000] = list_box\n","df = df.T\n","df.to_csv(\"data.csv\", index=True)"],"metadata":{"id":"-Knnz-hm95Zc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 풀이\n","df = pd.read_csv(\"data.csv\", index_col=\"Unnamed: 0\")\n","# print(df.head(2))\n","\n","m2001 = df.loc[2001].mean()\n","# print(m2001)\n","cond = df.loc[2001] > m2001\n","r1 = sum(cond)\n","\n","m2003 = df.loc[2003].mean()\n","cond = df.loc[2003] < m2003\n","r2 = sum(cond)\n","\n","print(r1+r2)"],"metadata":{"id":"IvJ_vQcv95fH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1726825679447,"user_tz":-540,"elapsed":5,"user":{"displayName":"Tae Heon Kim","userId":"07653788752262629837"}},"outputId":"84736b00-acfc-44b2-82fd-5c6c2ee240f4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["202\n"]}]},{"cell_type":"markdown","source":["## 문제8\n","- 결측 값을 가진 데이터는 바로 뒤에 있는 값으로 대체한 후 (바로 뒤가 결측값이라면 뒤에 있는 데이터 중 가장 가까운 값)\n","- city와 f2 컬럼 기준으로 그룹합을 계산한 뒤\n","- views가 세번째로 큰 city(도시) 이름은?\n"],"metadata":{"id":"oz7POiFg5BbF"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"T0JqOyc24q9O","executionInfo":{"status":"ok","timestamp":1730187727654,"user_tz":-540,"elapsed":1349,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"1c14825a-c759-49b9-8747-69ff4087f841"},"outputs":[{"output_type":"stream","name":"stdout","text":["대구\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-1-1ef4ae5b4d6b>:7: FutureWarning: DataFrame.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.\n","  df = df.fillna(method='bfill')\n"]}],"source":["# 풀이\n","import pandas as pd\n","df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/main/p1/members.csv\")\n","\n","# df.isnull().sum()\n","# display(df.head(7))\n","df = df.fillna(method='bfill')\n","# display(df.head(7))\n","\n","df = df.groupby(['city','f2']).sum().reset_index()\n","df = df.sort_values('views', ascending=False)\n","print(df.iloc[2,0])"]},{"cell_type":"markdown","source":["❤️ 추가 설명 ❤️\n","- numeric_only관련 워닝이 발생되면 sum() mean() corr() 등 함수 괄호 안에 numeric_only=True를 넣어주세요\n","\n","- 코랩 판다스 버전이 업데이트 되면서 워닝이 발생하고 있어요. 시험 환경은 아직 이전 버전이라 해당 워닝이 발생하지 않고 numeric_only파라미터도 없습니다. 업데이트 될 수도 있으니 알아두는 것이 좋을 것 같아요!\n","\n","- 원인은 수치형 데이터 외에 범주형 데이터도 함께 있어서 워닝(경고)가 발생했어요\n","\n","- FutureWarning: DataFrame.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.\n","  df = df.fillna(method='bfill') 는 무시해도 좋습니다."],"metadata":{"id":"iTuhvfxEfPiH"}},{"cell_type":"markdown","source":["## 문제9\n","- 구독(subscribed) 월별로 데이터 갯수를 구한 뒤\n","- 가장 작은 구독 수가 있는 월을 구하시오"],"metadata":{"id":"s8s-g51Z5EA7"}},{"cell_type":"code","source":["# 풀이\n","import pandas as pd\n","df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/main/p1/members.csv\")\n","\n","df['subscribed'] = pd.to_datetime(df['subscribed'])\n","df['year'] = df['subscribed'].dt.year\n","df['month'] = df['subscribed'].dt.month\n","df['day'] = df['subscribed'].dt.day\n","\n","df = df.groupby('month').count()\n","df.sort_values('subscribed').index[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9mpdqGoJD_zM","executionInfo":{"status":"ok","timestamp":1726824406574,"user_tz":-540,"elapsed":880,"user":{"displayName":"Tae Heon Kim","userId":"07653788752262629837"}},"outputId":"265625d0-2d96-4f3a-9a8a-a2af8d206b6a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["11"]},"metadata":{},"execution_count":1}]},{"cell_type":"code","source":[],"metadata":{"id":"y6F4aPCJfgNt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"N01NaXCAfgP5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"ZqBPXFDufgR_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"NhjGM19MfgUJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"Tix6AOgsfjF6"},"execution_count":null,"outputs":[]}]}