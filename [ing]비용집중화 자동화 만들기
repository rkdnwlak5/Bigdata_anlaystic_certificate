{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1frn5NUlzxsT7VrWlwR6i8gI_KP0xwZdk","timestamp":1735004063672},{"file_id":"1MPGnBHHv2u6aQypHiwTInOfgO0kHxZS7","timestamp":1731656949138},{"file_id":"1zBamhJ3ZSpiln-5bDMm5US5Dk27zB3Zj","timestamp":1730713143358}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import pandas as pd\n","\n","train = pd.read_excel(\"/content/테에에스트.xlsx\")\n","test = pd.read_excel(\"/content/용차임내역보고서-용차임내역(화주별).xlsx\")\n","check = pd.read_excel(\"/content/테스트1(지급승인지점_전체다운로드).xlsx\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZiibOZL-YpBw","executionInfo":{"status":"ok","timestamp":1735192274510,"user_tz":-540,"elapsed":484,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"cb7b75e2-84bc-482a-ecbd-d571cd3ea894"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/openpyxl/styles/stylesheet.py:237: UserWarning: Workbook contains no default style, apply openpyxl's default\n","  warn(\"Workbook contains no default style, apply openpyxl's default\")\n"]}]},{"cell_type":"code","source":["train.head()\n"],"metadata":{"id":"lrUzZE6iHxeA","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1735188496227,"user_tz":-540,"elapsed":885,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"674d6ea8-7cfa-44f3-b82a-36683f8b286c"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      실적월   지점명      사업자명       사업자번호    소사업명      재무사업구분         청구화주  \\\n","0  2024.1  중부지점  (주)영진로지스  1258197972  컨테이너운송  컨테이너운송(용차)     (주)동양케미컬   \n","1  2024.1  중부지점  (주)영진로지스  1258197972  컨테이너운송  컨테이너운송(용차)     (주)삼미푸드웰   \n","2  2024.1  중부지점  (주)영진로지스  1258197972  컨테이너운송  컨테이너운송(용차)   삼성전자로지텍(주)   \n","3  2024.1  중부지점  (주)영진로지스  1258197972  컨테이너운송  컨테이너운송(용차)   삼성전자로지텍(주)   \n","4  2024.1  중부지점  (주)영진로지스  1258197972  컨테이너운송  컨테이너운송(용차)  코오롱글로텍 천안공장   \n","\n","   총지급운임합계    계약물류비  이상물류비     청구금액   지급비율(%)  \n","0   833600   833600      0   900000  0.926222  \n","1  5250000  5250000      0  5600000  0.937500  \n","2   350800   350800      0   424300  0.826774  \n","3   630300   630300      0   758400  0.831092  \n","4    80000    80000      0   123000  0.650406  "],"text/html":["\n","  <div id=\"df-273d0d5a-7386-40ce-b00a-89048a7f1ddf\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>실적월</th>\n","      <th>지점명</th>\n","      <th>사업자명</th>\n","      <th>사업자번호</th>\n","      <th>소사업명</th>\n","      <th>재무사업구분</th>\n","      <th>청구화주</th>\n","      <th>총지급운임합계</th>\n","      <th>계약물류비</th>\n","      <th>이상물류비</th>\n","      <th>청구금액</th>\n","      <th>지급비율(%)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2024.1</td>\n","      <td>중부지점</td>\n","      <td>(주)영진로지스</td>\n","      <td>1258197972</td>\n","      <td>컨테이너운송</td>\n","      <td>컨테이너운송(용차)</td>\n","      <td>(주)동양케미컬</td>\n","      <td>833600</td>\n","      <td>833600</td>\n","      <td>0</td>\n","      <td>900000</td>\n","      <td>0.926222</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2024.1</td>\n","      <td>중부지점</td>\n","      <td>(주)영진로지스</td>\n","      <td>1258197972</td>\n","      <td>컨테이너운송</td>\n","      <td>컨테이너운송(용차)</td>\n","      <td>(주)삼미푸드웰</td>\n","      <td>5250000</td>\n","      <td>5250000</td>\n","      <td>0</td>\n","      <td>5600000</td>\n","      <td>0.937500</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2024.1</td>\n","      <td>중부지점</td>\n","      <td>(주)영진로지스</td>\n","      <td>1258197972</td>\n","      <td>컨테이너운송</td>\n","      <td>컨테이너운송(용차)</td>\n","      <td>삼성전자로지텍(주)</td>\n","      <td>350800</td>\n","      <td>350800</td>\n","      <td>0</td>\n","      <td>424300</td>\n","      <td>0.826774</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2024.1</td>\n","      <td>중부지점</td>\n","      <td>(주)영진로지스</td>\n","      <td>1258197972</td>\n","      <td>컨테이너운송</td>\n","      <td>컨테이너운송(용차)</td>\n","      <td>삼성전자로지텍(주)</td>\n","      <td>630300</td>\n","      <td>630300</td>\n","      <td>0</td>\n","      <td>758400</td>\n","      <td>0.831092</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2024.1</td>\n","      <td>중부지점</td>\n","      <td>(주)영진로지스</td>\n","      <td>1258197972</td>\n","      <td>컨테이너운송</td>\n","      <td>컨테이너운송(용차)</td>\n","      <td>코오롱글로텍 천안공장</td>\n","      <td>80000</td>\n","      <td>80000</td>\n","      <td>0</td>\n","      <td>123000</td>\n","      <td>0.650406</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-273d0d5a-7386-40ce-b00a-89048a7f1ddf')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-273d0d5a-7386-40ce-b00a-89048a7f1ddf button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-273d0d5a-7386-40ce-b00a-89048a7f1ddf');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-874aff93-4e60-4c93-9727-f3ad16685890\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-874aff93-4e60-4c93-9727-f3ad16685890')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-874aff93-4e60-4c93-9727-f3ad16685890 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"train","summary":"{\n  \"name\": \"train\",\n  \"rows\": 448,\n  \"fields\": [\n    {\n      \"column\": \"\\uc2e4\\uc801\\uc6d4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.52510670439776e-11,\n        \"min\": 2024.1,\n        \"max\": 2024.1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2024.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc9c0\\uc810\\uba85\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\uc911\\ubd80\\uc9c0\\uc810\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc0ac\\uc5c5\\uc790\\uba85\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 319,\n        \"samples\": [\n          \"\\ub300\\uc544\\ub85c\\uc9c0\\ud14c\\ud06c 5855\\ud55c\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc0ac\\uc5c5\\uc790\\ubc88\\ud638\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2217611600,\n        \"min\": 1026500310,\n        \"max\": 8973400767,\n        \"num_unique_values\": 319,\n        \"samples\": [\n          2171864193\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc18c\\uc0ac\\uc5c5\\uba85\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\ucee8\\ud14c\\uc774\\ub108\\uc6b4\\uc1a1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc7ac\\ubb34\\uc0ac\\uc5c5\\uad6c\\ubd84\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"\\uae30\\ud0c0\\uc77c\\ubc18\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uccad\\uad6c\\ud654\\uc8fc\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 28,\n        \"samples\": [\n          \"(\\uc8fc)\\ud0dc\\uc6c5\\ub85c\\uc9c1\\uc2a4\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ucd1d\\uc9c0\\uae09\\uc6b4\\uc784\\ud569\\uacc4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23141353,\n        \"min\": 39000,\n        \"max\": 343643720,\n        \"num_unique_values\": 342,\n        \"samples\": [\n          941900\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uacc4\\uc57d\\ubb3c\\ub958\\ube44\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 22939898,\n        \"min\": 39000,\n        \"max\": 343643778,\n        \"num_unique_values\": 378,\n        \"samples\": [\n          148375\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc774\\uc0c1\\ubb3c\\ub958\\ube44\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 957361,\n        \"min\": -2867867,\n        \"max\": 12928541,\n        \"num_unique_values\": 267,\n        \"samples\": [\n          16549\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uccad\\uad6c\\uae08\\uc561\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26149070,\n        \"min\": 39000,\n        \"max\": 365289920,\n        \"num_unique_values\": 374,\n        \"samples\": [\n          3528700\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc9c0\\uae09\\ube44\\uc728(%)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1127406448559047,\n        \"min\": 0.3491488,\n        \"max\": 1.556537,\n        \"num_unique_values\": 342,\n        \"samples\": [\n          0.9197293\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["# 소사업별 토탈금액 보기\n","소사업별토탈금액 = train.groupby(['소사업명']).agg({\n","    '청구금액': 'sum',\n","    '총지급운임합계': 'sum'\n","}).reset_index()\n","\n","# 청구금액과 총지급운임합계를 백의 자리에서 반올림\n","소사업별토탈금액['청구금액'] = (소사업별토탈금액['청구금액'] / 1000).round()\n","소사업별토탈금액['총지급운임합계'] = (소사업별토탈금액['총지급운임합계'] / 1000).round()\n","\n","# 지급비율(%) 계산\n","소사업별토탈금액['지급비율(%)'] = (소사업별토탈금액['총지급운임합계'] / 소사업별토탈금액['청구금액']) * 100\n","\n","# 소수점 첫째 자리까지 반올림\n","소사업별토탈금액['지급비율(%)'] = 소사업별토탈금액['지급비율(%)'].round(1)\n","\n","print(소사업별토탈금액)\n","\n","# 총 청구금액과 총 지급운임 계산\n","총_청구금액 = train['청구금액'].sum()\n","총_지급운임 = train['총지급운임합계'].sum()\n","\n","# 형식에 맞춰 출력\n","print(f\"여기서 총 청구금액은 : {총_청구금액:,}입니다\")\n","print(f\"여기서 총 지급운임은 : {총_지급운임:,}입니다\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qnxO2RC-U3Zl","executionInfo":{"status":"ok","timestamp":1735022040585,"user_tz":-540,"elapsed":310,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"81bb58c2-5a8f-4b64-9f93-e5aca41082b9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["     소사업명       청구금액    총지급운임합계  지급비율(%)\n","0  기타일반유통   775089.0   710517.0     91.7\n","1  일반화물운송  1668531.0  1458417.0     87.4\n","2  컨테이너운송   697646.0   672294.0     96.4\n","여기서 총 청구금액은 : 3,141,266,164입니다\n","여기서 총 지급운임은 : 2,841,228,131입니다\n"]}]},{"cell_type":"code","source":["check.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"JYW_1o_FTBMd","executionInfo":{"status":"ok","timestamp":1735188632867,"user_tz":-540,"elapsed":534,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"7e8c8eb0-8d56-42fc-92d2-b4a87556558a"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      실적월   지점명      사업자명       사업자번호    소사업명      재무사업구분         청구화주  \\\n","0  2024.1  전남지점     (유)고고  4108675721  컨테이너운송  컨테이너운송(용차)         케이무역   \n","1  2024.1  전남지점     (유)고고  4108675721  컨테이너운송  컨테이너운송(용차)  화천기공(주) 2공장   \n","2  2024.1  전남지점  (유)골드로지스  4108607709  일반화물운송  일반화물운송(용차)   삼성전자로지텍(주)   \n","3  2024.1  전남지점  (유)골드로지스  4108607709  일반화물운송  일반화물운송(용차)   삼성전자로지텍(주)   \n","4  2024.1  전남지점   (유)동천기업  4098119312  컨테이너운송  컨테이너운송(용차)      주식회사대한팜   \n","\n","     총지급운임합계     계약물류비    이상물류비         청구금액   지급비율(%)  \n","0     425830    425830        0     496200.0  0.858182  \n","1     862340    862340        0    1005400.0  0.857708  \n","2   21858094  21258094   600000   24050932.0  0.908825  \n","3  100036255  97058825  2977430  106508241.0  0.939235  \n","4     610810    718300  -107490          0.0  1.000000  "],"text/html":["\n","  <div id=\"df-0dd1ed12-065b-4eb6-8277-cd9c55c26832\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>실적월</th>\n","      <th>지점명</th>\n","      <th>사업자명</th>\n","      <th>사업자번호</th>\n","      <th>소사업명</th>\n","      <th>재무사업구분</th>\n","      <th>청구화주</th>\n","      <th>총지급운임합계</th>\n","      <th>계약물류비</th>\n","      <th>이상물류비</th>\n","      <th>청구금액</th>\n","      <th>지급비율(%)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2024.1</td>\n","      <td>전남지점</td>\n","      <td>(유)고고</td>\n","      <td>4108675721</td>\n","      <td>컨테이너운송</td>\n","      <td>컨테이너운송(용차)</td>\n","      <td>케이무역</td>\n","      <td>425830</td>\n","      <td>425830</td>\n","      <td>0</td>\n","      <td>496200.0</td>\n","      <td>0.858182</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2024.1</td>\n","      <td>전남지점</td>\n","      <td>(유)고고</td>\n","      <td>4108675721</td>\n","      <td>컨테이너운송</td>\n","      <td>컨테이너운송(용차)</td>\n","      <td>화천기공(주) 2공장</td>\n","      <td>862340</td>\n","      <td>862340</td>\n","      <td>0</td>\n","      <td>1005400.0</td>\n","      <td>0.857708</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2024.1</td>\n","      <td>전남지점</td>\n","      <td>(유)골드로지스</td>\n","      <td>4108607709</td>\n","      <td>일반화물운송</td>\n","      <td>일반화물운송(용차)</td>\n","      <td>삼성전자로지텍(주)</td>\n","      <td>21858094</td>\n","      <td>21258094</td>\n","      <td>600000</td>\n","      <td>24050932.0</td>\n","      <td>0.908825</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2024.1</td>\n","      <td>전남지점</td>\n","      <td>(유)골드로지스</td>\n","      <td>4108607709</td>\n","      <td>일반화물운송</td>\n","      <td>일반화물운송(용차)</td>\n","      <td>삼성전자로지텍(주)</td>\n","      <td>100036255</td>\n","      <td>97058825</td>\n","      <td>2977430</td>\n","      <td>106508241.0</td>\n","      <td>0.939235</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2024.1</td>\n","      <td>전남지점</td>\n","      <td>(유)동천기업</td>\n","      <td>4098119312</td>\n","      <td>컨테이너운송</td>\n","      <td>컨테이너운송(용차)</td>\n","      <td>주식회사대한팜</td>\n","      <td>610810</td>\n","      <td>718300</td>\n","      <td>-107490</td>\n","      <td>0.0</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0dd1ed12-065b-4eb6-8277-cd9c55c26832')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0dd1ed12-065b-4eb6-8277-cd9c55c26832 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0dd1ed12-065b-4eb6-8277-cd9c55c26832');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6abad4e7-73d8-43f5-86cf-35bc0c890ec5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6abad4e7-73d8-43f5-86cf-35bc0c890ec5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6abad4e7-73d8-43f5-86cf-35bc0c890ec5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"check","summary":"{\n  \"name\": \"check\",\n  \"rows\": 4149,\n  \"fields\": [\n    {\n      \"column\": \"\\uc2e4\\uc801\\uc6d4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.5326832887626874e-10,\n        \"min\": 2024.1,\n        \"max\": 2024.1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2024.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc9c0\\uc810\\uba85\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"\\uc601\\ub0a8\\uc9c0\\uc810\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc0ac\\uc5c5\\uc790\\uba85\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1154,\n        \"samples\": [\n          \"\\uc815\\ud604\\uae30\\uc5c5\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc0ac\\uc5c5\\uc790\\ubc88\\ud638\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2215227253,\n        \"min\": 1026500310,\n        \"max\": 8991000243,\n        \"num_unique_values\": 1163,\n        \"samples\": [\n          8142900623\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc18c\\uc0ac\\uc5c5\\uba85\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\ucee8\\ud14c\\uc774\\ub108\\uc6b4\\uc1a1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc7ac\\ubb34\\uc0ac\\uc5c5\\uad6c\\ubd84\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"\\uc77c\\ubc18\\ud654\\ubb3c\\uc6b4\\uc1a1(\\uc6a9\\ucc28)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uccad\\uad6c\\ud654\\uc8fc\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 446,\n        \"samples\": [\n          \"(\\uc8fc)\\uae00\\ub85c\\ubc8c\\ucf54\\ub9ac\\uc544\\uc778\\ud130\\ub0b4\\uc154\\ub0a0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ucd1d\\uc9c0\\uae09\\uc6b4\\uc784\\ud569\\uacc4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 27267058,\n        \"min\": 0,\n        \"max\": 731439417,\n        \"num_unique_values\": 2778,\n        \"samples\": [\n          1319400\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uacc4\\uc57d\\ubb3c\\ub958\\ube44\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25999434,\n        \"min\": 0,\n        \"max\": 731439417,\n        \"num_unique_values\": 2794,\n        \"samples\": [\n          772400\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc774\\uc0c1\\ubb3c\\ub958\\ube44\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2633876,\n        \"min\": -2867867,\n        \"max\": 121240000,\n        \"num_unique_values\": 1029,\n        \"samples\": [\n          198958\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uccad\\uad6c\\uae08\\uc561\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26634059.725825872,\n        \"min\": 0.0,\n        \"max\": 753462048.0,\n        \"num_unique_values\": 2741,\n        \"samples\": [\n          1476753.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc9c0\\uae09\\ube44\\uc728(%)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3360.3799585486886,\n        \"min\": 0.0,\n        \"max\": 138800.0,\n        \"num_unique_values\": 2608,\n        \"samples\": [\n          0.9153225\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["# 소사업별 토탈금액 보기 (check로확인)\n","소사업별토탈금액 = check.groupby(['소사업명']).agg({\n","    '청구금액': 'sum',\n","    '총지급운임합계': 'sum'\n","}).reset_index()\n","\n","# 청구금액과 총지급운임합계를 백의 자리에서 반올림\n","소사업별토탈금액['청구금액'] = (소사업별토탈금액['청구금액'] / 1000).round()\n","소사업별토탈금액['총지급운임합계'] = (소사업별토탈금액['총지급운임합계'] / 1000).round()\n","\n","# 지급비율(%) 계산\n","소사업별토탈금액['지급비율(%)'] = (소사업별토탈금액['총지급운임합계'] / 소사업별토탈금액['청구금액']) * 100\n","\n","# 소수점 첫째 자리까지 반올림\n","소사업별토탈금액['지급비율(%)'] = 소사업별토탈금액['지급비율(%)'].round(1)\n","\n","print(소사업별토탈금액)\n","\n","# 총 청구금액과 총 지급운임 계산\n","총_청구금액 = check['청구금액'].sum()\n","총_지급운임 = check['총지급운임합계'].sum()\n","\n","# 형식에 맞춰 출력\n","print(f\"여기서 총 청구금액은 : {총_청구금액:,}입니다\")\n","print(f\"여기서 총 지급운임은 : {총_지급운임:,}입니다\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HrDPm0CqS05d","executionInfo":{"status":"ok","timestamp":1735192279226,"user_tz":-540,"elapsed":468,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"1b9360ee-b07b-4dfb-fa09-83cef96ab176"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["     소사업명       청구금액    총지급운임합계  지급비율(%)\n","0  기타일반유통   775089.0   710517.0     91.7\n","1  일반화물운송  1668531.0  1458417.0     87.4\n","2  컨테이너운송   745778.0   672294.0     90.1\n","여기서 총 청구금액은 : 3,189,398,144입니다\n","여기서 총 지급운임은 : 2,841,228,131입니다\n"]}]},{"cell_type":"code","source":["#수익성 여부 확인\n","import numpy as np\n","\n","# '당월.2' 컬럼을 숫자로 변환 (에러 발생 시 NaN 처리)\n","test['당월.2'] = pd.to_numeric(test['당월.2'], errors='coerce')\n","\n","# 조건별 수익성 여부 설정\n","test['수익성여부'] = np.where(\n","    (test['구분'].str.contains('컨테이너') & (test['당월.2'] <= 90.1)) |\n","    (test['구분'].str.contains('일반화물') & (test['당월.2'] <= 86.6)) |\n","    (test['구분'].str.contains('유동') & (test['당월.2'] <= 91.3)),\n","    '수익성',\n","    '비수익성'\n",")\n","\n","\n","# 엑셀로 저장\n","test.to_excel('수익성여부.xlsx', index=False)\n"],"metadata":{"id":"j1Hnm8n3UhXL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"HbGcKCRqUF5Q","executionInfo":{"status":"ok","timestamp":1735192312653,"user_tz":-540,"elapsed":495,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"08a350c8-aebc-4bbc-c580-3055b20e1ab4"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      실적월   지점명      사업자명       사업자번호    소사업명      재무사업구분         청구화주  \\\n","0  2024.1  중부지점  (주)영진로지스  1258197972  컨테이너운송  컨테이너운송(용차)     (주)동양케미컬   \n","1  2024.1  중부지점  (주)영진로지스  1258197972  컨테이너운송  컨테이너운송(용차)     (주)삼미푸드웰   \n","2  2024.1  중부지점  (주)영진로지스  1258197972  컨테이너운송  컨테이너운송(용차)   삼성전자로지텍(주)   \n","3  2024.1  중부지점  (주)영진로지스  1258197972  컨테이너운송  컨테이너운송(용차)   삼성전자로지텍(주)   \n","4  2024.1  중부지점  (주)영진로지스  1258197972  컨테이너운송  컨테이너운송(용차)  코오롱글로텍 천안공장   \n","\n","   총지급운임합계    계약물류비  이상물류비     청구금액   지급비율(%)  \n","0   833600   833600      0   900000  0.926222  \n","1  5250000  5250000      0  5600000  0.937500  \n","2   350800   350800      0   424300  0.826774  \n","3   630300   630300      0   758400  0.831092  \n","4    80000    80000      0   123000  0.650406  "],"text/html":["\n","  <div id=\"df-84a39cf6-0558-4cda-a40c-dba17879f29a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>실적월</th>\n","      <th>지점명</th>\n","      <th>사업자명</th>\n","      <th>사업자번호</th>\n","      <th>소사업명</th>\n","      <th>재무사업구분</th>\n","      <th>청구화주</th>\n","      <th>총지급운임합계</th>\n","      <th>계약물류비</th>\n","      <th>이상물류비</th>\n","      <th>청구금액</th>\n","      <th>지급비율(%)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2024.1</td>\n","      <td>중부지점</td>\n","      <td>(주)영진로지스</td>\n","      <td>1258197972</td>\n","      <td>컨테이너운송</td>\n","      <td>컨테이너운송(용차)</td>\n","      <td>(주)동양케미컬</td>\n","      <td>833600</td>\n","      <td>833600</td>\n","      <td>0</td>\n","      <td>900000</td>\n","      <td>0.926222</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2024.1</td>\n","      <td>중부지점</td>\n","      <td>(주)영진로지스</td>\n","      <td>1258197972</td>\n","      <td>컨테이너운송</td>\n","      <td>컨테이너운송(용차)</td>\n","      <td>(주)삼미푸드웰</td>\n","      <td>5250000</td>\n","      <td>5250000</td>\n","      <td>0</td>\n","      <td>5600000</td>\n","      <td>0.937500</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2024.1</td>\n","      <td>중부지점</td>\n","      <td>(주)영진로지스</td>\n","      <td>1258197972</td>\n","      <td>컨테이너운송</td>\n","      <td>컨테이너운송(용차)</td>\n","      <td>삼성전자로지텍(주)</td>\n","      <td>350800</td>\n","      <td>350800</td>\n","      <td>0</td>\n","      <td>424300</td>\n","      <td>0.826774</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2024.1</td>\n","      <td>중부지점</td>\n","      <td>(주)영진로지스</td>\n","      <td>1258197972</td>\n","      <td>컨테이너운송</td>\n","      <td>컨테이너운송(용차)</td>\n","      <td>삼성전자로지텍(주)</td>\n","      <td>630300</td>\n","      <td>630300</td>\n","      <td>0</td>\n","      <td>758400</td>\n","      <td>0.831092</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2024.1</td>\n","      <td>중부지점</td>\n","      <td>(주)영진로지스</td>\n","      <td>1258197972</td>\n","      <td>컨테이너운송</td>\n","      <td>컨테이너운송(용차)</td>\n","      <td>코오롱글로텍 천안공장</td>\n","      <td>80000</td>\n","      <td>80000</td>\n","      <td>0</td>\n","      <td>123000</td>\n","      <td>0.650406</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-84a39cf6-0558-4cda-a40c-dba17879f29a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-84a39cf6-0558-4cda-a40c-dba17879f29a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-84a39cf6-0558-4cda-a40c-dba17879f29a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-312583ac-fa9e-4287-846d-d77f71c10d0a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-312583ac-fa9e-4287-846d-d77f71c10d0a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-312583ac-fa9e-4287-846d-d77f71c10d0a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"train","summary":"{\n  \"name\": \"train\",\n  \"rows\": 448,\n  \"fields\": [\n    {\n      \"column\": \"\\uc2e4\\uc801\\uc6d4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.52510670439776e-11,\n        \"min\": 2024.1,\n        \"max\": 2024.1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2024.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc9c0\\uc810\\uba85\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\uc911\\ubd80\\uc9c0\\uc810\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc0ac\\uc5c5\\uc790\\uba85\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 319,\n        \"samples\": [\n          \"\\ub300\\uc544\\ub85c\\uc9c0\\ud14c\\ud06c 5855\\ud55c\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc0ac\\uc5c5\\uc790\\ubc88\\ud638\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2217611600,\n        \"min\": 1026500310,\n        \"max\": 8973400767,\n        \"num_unique_values\": 319,\n        \"samples\": [\n          2171864193\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc18c\\uc0ac\\uc5c5\\uba85\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\ucee8\\ud14c\\uc774\\ub108\\uc6b4\\uc1a1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc7ac\\ubb34\\uc0ac\\uc5c5\\uad6c\\ubd84\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"\\uae30\\ud0c0\\uc77c\\ubc18\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uccad\\uad6c\\ud654\\uc8fc\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 28,\n        \"samples\": [\n          \"(\\uc8fc)\\ud0dc\\uc6c5\\ub85c\\uc9c1\\uc2a4\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ucd1d\\uc9c0\\uae09\\uc6b4\\uc784\\ud569\\uacc4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23141353,\n        \"min\": 39000,\n        \"max\": 343643720,\n        \"num_unique_values\": 342,\n        \"samples\": [\n          941900\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uacc4\\uc57d\\ubb3c\\ub958\\ube44\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 22939898,\n        \"min\": 39000,\n        \"max\": 343643778,\n        \"num_unique_values\": 378,\n        \"samples\": [\n          148375\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc774\\uc0c1\\ubb3c\\ub958\\ube44\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 957361,\n        \"min\": -2867867,\n        \"max\": 12928541,\n        \"num_unique_values\": 267,\n        \"samples\": [\n          16549\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uccad\\uad6c\\uae08\\uc561\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26149070,\n        \"min\": 39000,\n        \"max\": 365289920,\n        \"num_unique_values\": 374,\n        \"samples\": [\n          3528700\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc9c0\\uae09\\ube44\\uc728(%)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1127406448559047,\n        \"min\": 0.3491488,\n        \"max\": 1.556537,\n        \"num_unique_values\": 342,\n        \"samples\": [\n          0.9197293\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["check.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"Opby_PUaTDSK","executionInfo":{"status":"ok","timestamp":1735192318123,"user_tz":-540,"elapsed":465,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"68d97394-5d82-4155-cb45-871d0419aef8"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      실적월               사업자명       사업자번호    소사업명      재무사업구분  총지급운임합계   계약물류비  \\\n","0  2024.1             대화로지스틱  6178612875  일반화물운송  일반화물운송(용차)    39000   39000   \n","1  2024.1     제이에스물류 2607(현)  3123183397  일반화물운송  일반화물운송(용차)    78000   78098   \n","2  2024.1  권선물류 강대승 1659 (현)  5207000021  일반화물운송  일반화물운송(용차)    80000   80644   \n","3  2024.1      양양티엠피-9700(한)  2255000389  컨테이너운송  컨테이너운송(용차)   124920  124920   \n","4  2024.1    하이 김규정 2263 (현)  6740302417  일반화물운송  일반화물운송(용차)   154000  148375   \n","\n","   이상물류비    청구금액   지급비율(%)  조정금액 조정사유     마감상태  \n","0      0   39000  1.000000     0  NaN  EVS전송완료  \n","1    -98   84884  0.918901     0  NaN  EVS전송완료  \n","2   -644   87651  0.912711     0  NaN  EVS전송완료  \n","3      0  136200  0.917181     0  NaN  EVS전송완료  \n","4   5625  167748  0.918044     0  NaN  EVS전송완료  "],"text/html":["\n","  <div id=\"df-a8d0b3b1-d1db-419c-ad72-288470190d96\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>실적월</th>\n","      <th>사업자명</th>\n","      <th>사업자번호</th>\n","      <th>소사업명</th>\n","      <th>재무사업구분</th>\n","      <th>총지급운임합계</th>\n","      <th>계약물류비</th>\n","      <th>이상물류비</th>\n","      <th>청구금액</th>\n","      <th>지급비율(%)</th>\n","      <th>조정금액</th>\n","      <th>조정사유</th>\n","      <th>마감상태</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2024.1</td>\n","      <td>대화로지스틱</td>\n","      <td>6178612875</td>\n","      <td>일반화물운송</td>\n","      <td>일반화물운송(용차)</td>\n","      <td>39000</td>\n","      <td>39000</td>\n","      <td>0</td>\n","      <td>39000</td>\n","      <td>1.000000</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>EVS전송완료</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2024.1</td>\n","      <td>제이에스물류 2607(현)</td>\n","      <td>3123183397</td>\n","      <td>일반화물운송</td>\n","      <td>일반화물운송(용차)</td>\n","      <td>78000</td>\n","      <td>78098</td>\n","      <td>-98</td>\n","      <td>84884</td>\n","      <td>0.918901</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>EVS전송완료</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2024.1</td>\n","      <td>권선물류 강대승 1659 (현)</td>\n","      <td>5207000021</td>\n","      <td>일반화물운송</td>\n","      <td>일반화물운송(용차)</td>\n","      <td>80000</td>\n","      <td>80644</td>\n","      <td>-644</td>\n","      <td>87651</td>\n","      <td>0.912711</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>EVS전송완료</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2024.1</td>\n","      <td>양양티엠피-9700(한)</td>\n","      <td>2255000389</td>\n","      <td>컨테이너운송</td>\n","      <td>컨테이너운송(용차)</td>\n","      <td>124920</td>\n","      <td>124920</td>\n","      <td>0</td>\n","      <td>136200</td>\n","      <td>0.917181</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>EVS전송완료</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2024.1</td>\n","      <td>하이 김규정 2263 (현)</td>\n","      <td>6740302417</td>\n","      <td>일반화물운송</td>\n","      <td>일반화물운송(용차)</td>\n","      <td>154000</td>\n","      <td>148375</td>\n","      <td>5625</td>\n","      <td>167748</td>\n","      <td>0.918044</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>EVS전송완료</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a8d0b3b1-d1db-419c-ad72-288470190d96')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a8d0b3b1-d1db-419c-ad72-288470190d96 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a8d0b3b1-d1db-419c-ad72-288470190d96');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-08a0274d-9adb-452b-864f-7b3633cbfe71\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-08a0274d-9adb-452b-864f-7b3633cbfe71')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-08a0274d-9adb-452b-864f-7b3633cbfe71 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"check","summary":"{\n  \"name\": \"check\",\n  \"rows\": 320,\n  \"fields\": [\n    {\n      \"column\": \"\\uc2e4\\uc801\\uc6d4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1841948645942005e-11,\n        \"min\": 2024.1,\n        \"max\": 2024.1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2024.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc0ac\\uc5c5\\uc790\\uba85\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 319,\n        \"samples\": [\n          \"\\ud55c\\uc131\\uc6b4\\uc218 \\uc2dc\\uc885\\ud0dc 1285 (\\ud604)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc0ac\\uc5c5\\uc790\\ubc88\\ud638\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2184892762,\n        \"min\": 1026500310,\n        \"max\": 8973400767,\n        \"num_unique_values\": 319,\n        \"samples\": [\n          5042466058\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc18c\\uc0ac\\uc5c5\\uba85\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\uc77c\\ubc18\\ud654\\ubb3c\\uc6b4\\uc1a1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc7ac\\ubb34\\uc0ac\\uc5c5\\uad6c\\ubd84\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"\\ucee8\\ud14c\\uc774\\ub108\\uc6b4\\uc1a1(\\uc6a9\\ucc28)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ucd1d\\uc9c0\\uae09\\uc6b4\\uc784\\ud569\\uacc4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 39700831,\n        \"min\": 39000,\n        \"max\": 525739698,\n        \"num_unique_values\": 258,\n        \"samples\": [\n          640000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uacc4\\uc57d\\ubb3c\\ub958\\ube44\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 38611972,\n        \"min\": 39000,\n        \"max\": 499502940,\n        \"num_unique_values\": 294,\n        \"samples\": [\n          439837\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc774\\uc0c1\\ubb3c\\ub958\\ube44\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1615880,\n        \"min\": -2995020,\n        \"max\": 26236758,\n        \"num_unique_values\": 253,\n        \"samples\": [\n          494660\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uccad\\uad6c\\uae08\\uc561\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 44796153,\n        \"min\": 39000,\n        \"max\": 569210167,\n        \"num_unique_values\": 288,\n        \"samples\": [\n          579388\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc9c0\\uae09\\ube44\\uc728(%)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.08780346974122587,\n        \"min\": 0.3491488397482948,\n        \"max\": 1.5535099054446992,\n        \"num_unique_values\": 286,\n        \"samples\": [\n          0.9189504229330554\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc870\\uc815\\uae08\\uc561\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 511,\n        \"min\": -7713,\n        \"max\": 4573,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          -1602\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc870\\uc815\\uc0ac\\uc720\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\uc774\\uc0c1\\ubb3c\\ub958\\ube44 \\uc870\\uc815\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ub9c8\\uac10\\uc0c1\\ud0dc\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"EVS\\uc804\\uc1a1\\uc644\\ub8cc\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["\n","go1 = train.groupby(['소사업명']).agg({\n","    '청구금액': 'sum',\n","    }).reset_index()\n","\n","go2 = check.groupby(['소사업명']).agg({\n","    '청구금액': 'sum',\n","    }).reset_index()"],"metadata":{"id":"GNg76WHchcws","executionInfo":{"status":"ok","timestamp":1735192422141,"user_tz":-540,"elapsed":495,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["print(go1)\n","print(go2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IKPiFWNhhx3L","executionInfo":{"status":"ok","timestamp":1735192437142,"user_tz":-540,"elapsed":482,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"cdf587c1-ba5b-4ae4-dd56-361c88d01b61"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["     소사업명        청구금액\n","0  기타일반유통   775089440\n","1  일반화물운송  1668530764\n","2  컨테이너운송   697645960\n","     소사업명        청구금액\n","0  기타일반유통   775089440\n","1  일반화물운송  1668530764\n","2  컨테이너운송   745777940\n"]}]},{"cell_type":"code","source":["#청구 화주별로  #사업자명 별로 , #청구운임, #지급운임 #소사업별?"],"metadata":{"id":"GPqDrDgidgaf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731905507242,"user_tz":-540,"elapsed":6118,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"fdeddf26-f66a-43ce-c6cc-5559708b65b7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1월 목표 또는 1월 청구실적 열을 찾을 수 없습니다.\n","작업이 완료되었습니다. 결과가 '/content/완성형 파일.xlsx'에 저장되었습니다.\n"]}]},{"cell_type":"code","source":["#소사업명 기준\n","# 그룹화 및 집계\n","result = train.groupby(['소사업명', '청구화주','사업자명']).agg({\n","    '청구금액': 'sum',\n","    '총지급운임합계': 'sum'\n","}).reset_index()\n","\n","# 지급비율 계산\n","result['지급비율'] = (result['총지급운임합계'] / result['청구금액'])\n","\n","# 결과 확인\n","print(result)\n","\n","# 엑셀로 저장\n","result.to_excel('소사업별결과.xlsx', index=False)"],"metadata":{"id":"wyTq5KJpmL57","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1735016726010,"user_tz":-540,"elapsed":334,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"c2e14373-1bbb-4061-998d-d10cc187314c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["       소사업명           청구화주                사업자명       청구금액    총지급운임합계      지급비율\n","0    기타일반유통       (주)레드캡투어             (주)트랜스풀    5408000    5000000  0.924556\n","1    기타일반유통       (주)레드캡투어                  로이  273748090  240124990  0.877175\n","2    기타일반유통     (주)만앤휴멜코리아            동국로직스(주)     208800     191400  0.916667\n","3    기타일반유통     (주)만앤휴멜코리아          주식회사 태산로직스   43496550   41659700  0.957770\n","4    기타일반유통   주식회사 피코이노베이션               다야컴퍼니  376489920  354467000  0.941505\n","..      ...            ...                 ...        ...        ...       ...\n","438  컨테이너운송  한화토탈에너지스 주식회사  한진 위수탁 장동봉 3253(평)     325200     298400  0.917589\n","439  컨테이너운송  한화토탈에너지스 주식회사  한진 위수탁 한대근 4105(평)     666000     609000  0.914414\n","440  컨테이너운송  한화토탈에너지스 주식회사        해미운수-5687(한)     536000     489100  0.912500\n","441  컨테이너운송  한화토탈에너지스 주식회사        홍일특수-1315(한)    7145920    8315720  1.163702\n","442  컨테이너운송  한화토탈에너지스 주식회사        흥국통운-6613(한)    1085700    1080860  0.995542\n","\n","[443 rows x 6 columns]\n"]}]},{"cell_type":"code","source":["# 사업자명 기준\n","# 그룹화 및 집계\n","result = train.groupby(['사업자명','소사업명', '청구화주',]).agg({\n","    '청구금액': 'sum',\n","    '총지급운임합계': 'sum'\n","}).reset_index()\n","\n","# 지급비율 계산\n","result['지급비율'] = (result['총지급운임합계'] / result['청구금액'])\n","\n","# 결과 확인\n","print(result)\n","\n","# 엑셀로 저장\n","result.to_excel('사업자명결과.xlsx', index=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GZOQGeMv_U1V","executionInfo":{"status":"ok","timestamp":1735016729780,"user_tz":-540,"elapsed":330,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"b460cf3d-f911-47d9-833f-07460c0705aa"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["                  사업자명    소사업명           청구화주      청구금액   총지급운임합계      지급비율\n","0             (주)영진로지스  컨테이너운송       (주)동양케미컬    900000    833600  0.926222\n","1             (주)영진로지스  컨테이너운송       (주)삼미푸드웰   5600000   5250000  0.937500\n","2             (주)영진로지스  컨테이너운송     삼성전자로지텍(주)   1182700    981100  0.829543\n","3             (주)영진로지스  컨테이너운송    코오롱글로텍 천안공장    123000     80000  0.650407\n","4            (주)제이아이엘씨  컨테이너운송  한화토탈에너지스 주식회사    732200    668600  0.913138\n","..                 ...     ...            ...       ...       ...       ...\n","438      화성통운 (보랄4227)  일반화물운송       크나우프석고보드  15080295  13614790  0.902820\n","439  화천운수 정성호 1618 (현)  일반화물운송    현대글로비스 주식회사    559749    520000  0.928988\n","440  황해물류 서동호 2698 (현)  일반화물운송    현대글로비스 주식회사    617986    568000  0.919115\n","441   황해운수 이상구 2256(현)  일반화물운송    현대글로비스 주식회사   1288234   1182000  0.917535\n","442       흥국통운-6613(한)  컨테이너운송  한화토탈에너지스 주식회사   1085700   1080860  0.995542\n","\n","[443 rows x 6 columns]\n"]}]},{"cell_type":"code","source":["##★ 청구화주기준 + 위수탁/직계약\n","\n","import numpy as np\n","\n","# 그룹화 및 집계\n","result = train.groupby(['청구화주', '소사업명', '사업자명']).agg({\n","    '청구금액': 'sum',\n","    '총지급운임합계': 'sum'\n","}).reset_index()\n","\n","# 지급비율 계산\n","result['지급비율'] = (result['총지급운임합계'] / result['청구금액'])\n","\n","# '위수탁' 및 '직계약' 포함 여부에 따라 새로운 열 추가 (청구금액, 지급금액 별도)\n","result['위수탁_합계_청구'] = np.where(result['사업자명'].str.contains('위수탁|한진'), result['청구금액'], 0)\n","result['위수탁_합계_지급'] = np.where(result['사업자명'].str.contains('위수탁|한진'), result['총지급운임합계'], 0)\n","\n","result['직계약_합계_청구'] = np.where(result['사업자명'].str.contains('직계약'), result['청구금액'], 0)\n","result['직계약_합계_지급'] = np.where(result['사업자명'].str.contains('직계약'), result['총지급운임합계'], 0)\n","\n","# 최종 결과 확인\n","print(result.head())\n","\n","# 엑셀로 저장\n","result.to_excel('청구화주별결과.xlsx', index=False)"],"metadata":{"id":"AMKT0qNnmLul","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1735197628214,"user_tz":-540,"elapsed":637,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"f56ad723-0cc8-421a-a7d6-a3b62db307c0"},"execution_count":85,"outputs":[{"output_type":"stream","name":"stdout","text":["             청구화주    소사업명          사업자명      청구금액   총지급운임합계      지급비율  \\\n","0  (주) 케이씨씨 아산영업소  일반화물운송         민영로지스  96793700  92012265  0.950602   \n","1           (주)동방  컨테이너운송  개별화물-5245(한)    544800    499680  0.917181   \n","2           (주)동방  컨테이너운송  개별화물-6987(한)   2506500   2290980  0.914016   \n","3           (주)동방  컨테이너운송  관우물류-4882(한)    204300    187380  0.917181   \n","4           (주)동방  컨테이너운송  광옥물류-5960(한)    690660    631080  0.913735   \n","\n","   위수탁_합계_청구  위수탁_합계_지급  직계약_합계_청구  직계약_합계_지급  \n","0          0          0          0          0  \n","1          0          0          0          0  \n","2          0          0          0          0  \n","3          0          0          0          0  \n","4          0          0          0          0  \n"]}]},{"cell_type":"code","source":["train.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"8Cjpq5Gb103H","executionInfo":{"status":"ok","timestamp":1735198775379,"user_tz":-540,"elapsed":485,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"a22eca01-70b6-470f-cd56-d70000fd658c"},"execution_count":95,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      실적월   지점명      사업자명       사업자번호    소사업명      재무사업구분         청구화주  \\\n","0  2024.1  중부지점  (주)영진로지스  1258197972  컨테이너운송  컨테이너운송(용차)     (주)동양케미컬   \n","1  2024.1  중부지점  (주)영진로지스  1258197972  컨테이너운송  컨테이너운송(용차)     (주)삼미푸드웰   \n","2  2024.1  중부지점  (주)영진로지스  1258197972  컨테이너운송  컨테이너운송(용차)   삼성전자로지텍(주)   \n","3  2024.1  중부지점  (주)영진로지스  1258197972  컨테이너운송  컨테이너운송(용차)   삼성전자로지텍(주)   \n","4  2024.1  중부지점  (주)영진로지스  1258197972  컨테이너운송  컨테이너운송(용차)  코오롱글로텍 천안공장   \n","\n","   총지급운임합계    계약물류비  이상물류비     청구금액   지급비율(%)  \n","0   833600   833600      0   900000  0.926222  \n","1  5250000  5250000      0  5600000  0.937500  \n","2   350800   350800      0   424300  0.826774  \n","3   630300   630300      0   758400  0.831092  \n","4    80000    80000      0   123000  0.650406  "],"text/html":["\n","  <div id=\"df-7f804573-e7cf-49c0-b69e-82e302053678\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>실적월</th>\n","      <th>지점명</th>\n","      <th>사업자명</th>\n","      <th>사업자번호</th>\n","      <th>소사업명</th>\n","      <th>재무사업구분</th>\n","      <th>청구화주</th>\n","      <th>총지급운임합계</th>\n","      <th>계약물류비</th>\n","      <th>이상물류비</th>\n","      <th>청구금액</th>\n","      <th>지급비율(%)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2024.1</td>\n","      <td>중부지점</td>\n","      <td>(주)영진로지스</td>\n","      <td>1258197972</td>\n","      <td>컨테이너운송</td>\n","      <td>컨테이너운송(용차)</td>\n","      <td>(주)동양케미컬</td>\n","      <td>833600</td>\n","      <td>833600</td>\n","      <td>0</td>\n","      <td>900000</td>\n","      <td>0.926222</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2024.1</td>\n","      <td>중부지점</td>\n","      <td>(주)영진로지스</td>\n","      <td>1258197972</td>\n","      <td>컨테이너운송</td>\n","      <td>컨테이너운송(용차)</td>\n","      <td>(주)삼미푸드웰</td>\n","      <td>5250000</td>\n","      <td>5250000</td>\n","      <td>0</td>\n","      <td>5600000</td>\n","      <td>0.937500</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2024.1</td>\n","      <td>중부지점</td>\n","      <td>(주)영진로지스</td>\n","      <td>1258197972</td>\n","      <td>컨테이너운송</td>\n","      <td>컨테이너운송(용차)</td>\n","      <td>삼성전자로지텍(주)</td>\n","      <td>350800</td>\n","      <td>350800</td>\n","      <td>0</td>\n","      <td>424300</td>\n","      <td>0.826774</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2024.1</td>\n","      <td>중부지점</td>\n","      <td>(주)영진로지스</td>\n","      <td>1258197972</td>\n","      <td>컨테이너운송</td>\n","      <td>컨테이너운송(용차)</td>\n","      <td>삼성전자로지텍(주)</td>\n","      <td>630300</td>\n","      <td>630300</td>\n","      <td>0</td>\n","      <td>758400</td>\n","      <td>0.831092</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2024.1</td>\n","      <td>중부지점</td>\n","      <td>(주)영진로지스</td>\n","      <td>1258197972</td>\n","      <td>컨테이너운송</td>\n","      <td>컨테이너운송(용차)</td>\n","      <td>코오롱글로텍 천안공장</td>\n","      <td>80000</td>\n","      <td>80000</td>\n","      <td>0</td>\n","      <td>123000</td>\n","      <td>0.650406</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7f804573-e7cf-49c0-b69e-82e302053678')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7f804573-e7cf-49c0-b69e-82e302053678 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7f804573-e7cf-49c0-b69e-82e302053678');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-963a4b54-ee37-4bd9-b140-c77b95672368\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-963a4b54-ee37-4bd9-b140-c77b95672368')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-963a4b54-ee37-4bd9-b140-c77b95672368 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"train","summary":"{\n  \"name\": \"train\",\n  \"rows\": 448,\n  \"fields\": [\n    {\n      \"column\": \"\\uc2e4\\uc801\\uc6d4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.52510670439776e-11,\n        \"min\": 2024.1,\n        \"max\": 2024.1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2024.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc9c0\\uc810\\uba85\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\uc911\\ubd80\\uc9c0\\uc810\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc0ac\\uc5c5\\uc790\\uba85\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 319,\n        \"samples\": [\n          \"\\ub300\\uc544\\ub85c\\uc9c0\\ud14c\\ud06c 5855\\ud55c\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc0ac\\uc5c5\\uc790\\ubc88\\ud638\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2217611600,\n        \"min\": 1026500310,\n        \"max\": 8973400767,\n        \"num_unique_values\": 319,\n        \"samples\": [\n          2171864193\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc18c\\uc0ac\\uc5c5\\uba85\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\ucee8\\ud14c\\uc774\\ub108\\uc6b4\\uc1a1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc7ac\\ubb34\\uc0ac\\uc5c5\\uad6c\\ubd84\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"\\uae30\\ud0c0\\uc77c\\ubc18\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uccad\\uad6c\\ud654\\uc8fc\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 28,\n        \"samples\": [\n          \"(\\uc8fc)\\ud0dc\\uc6c5\\ub85c\\uc9c1\\uc2a4\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ucd1d\\uc9c0\\uae09\\uc6b4\\uc784\\ud569\\uacc4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23141353,\n        \"min\": 39000,\n        \"max\": 343643720,\n        \"num_unique_values\": 342,\n        \"samples\": [\n          941900\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uacc4\\uc57d\\ubb3c\\ub958\\ube44\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 22939898,\n        \"min\": 39000,\n        \"max\": 343643778,\n        \"num_unique_values\": 378,\n        \"samples\": [\n          148375\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc774\\uc0c1\\ubb3c\\ub958\\ube44\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 957361,\n        \"min\": -2867867,\n        \"max\": 12928541,\n        \"num_unique_values\": 267,\n        \"samples\": [\n          16549\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uccad\\uad6c\\uae08\\uc561\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26149070,\n        \"min\": 39000,\n        \"max\": 365289920,\n        \"num_unique_values\": 374,\n        \"samples\": [\n          3528700\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc9c0\\uae09\\ube44\\uc728(%)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1127406448559047,\n        \"min\": 0.3491488,\n        \"max\": 1.556537,\n        \"num_unique_values\": 342,\n        \"samples\": [\n          0.9197293\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":95}]},{"source":["# @title 이상물류비 vs 청구금액\n","\n","from matplotlib import pyplot as plt\n","train.plot(kind='scatter', x='이상물류비', y='청구금액', s=32, alpha=.8)\n","plt.gca().spines[['top', 'right',]].set_visible(False)\n","\n","\n","plt.rc('font', family='NanumGothic')\n","mpl.rc('axes', unicode_minus=False)  # 마이너스 기호 깨짐 방지\n","!rm -rf ~/.cache/matplotlib  # 폰트 캐시 삭제\n","\n","#폰트 경로를 직접 지정해 적용\n","font_path = '/usr/share/fonts/truetype/nanum/NanumGothic.ttf'\n","from matplotlib import font_manager as fm\n","font_prop = fm.FontProperties(fname=font_path)\n","\n","\n","\n","from matplotlib import pyplot as plt\n","train['이상물류비'].plot(kind='hist', bins=20, title='이상물류비 VS 청구금액')\n","plt.gca().spines[['top', 'right',]].set_visible(False)\n","\n","\n","\n","plt.title('이상물류비 VS 청구금액', fontproperties=font_prop)  # 표 제목에 폰트 직접 적용\n","plt.xlabel('이상물류비', fontproperties=font_prop)\n","plt.ylabel('청구금액', fontproperties=font_prop)\n","plt.show()\n","\n","\n"],"cell_type":"code","execution_count":101,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"C-hz4YxS7ppj","executionInfo":{"status":"ok","timestamp":1735199283394,"user_tz":-540,"elapsed":1540,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"26dbd9bc-7661-4bdd-a605-8cfed6e982ee"}},{"source":["# @title 이상물류비\n","\n","#Matplotlib에 한글 폰트 설정\n","import matplotlib.pyplot as plt\n","import matplotlib as mpl\n","import matplotlib.font_manager as fm\n","\n","plt.rc('font', family='NanumGothic')\n","mpl.rc('axes', unicode_minus=False)  # 마이너스 기호 깨짐 방지\n","!rm -rf ~/.cache/matplotlib  # 폰트 캐시 삭제\n","\n","#폰트 경로를 직접 지정해 적용\n","font_path = '/usr/share/fonts/truetype/nanum/NanumGothic.ttf'\n","from matplotlib import font_manager as fm\n","font_prop = fm.FontProperties(fname=font_path)\n","\n","\n","\n","from matplotlib import pyplot as plt\n","train['이상물류비'].plot(kind='hist', bins=20, title='이상물류비')\n","plt.gca().spines[['top', 'right',]].set_visible(False)\n","\n","\n","\n","\n","plt.title('이상물류비현황', fontproperties=font_prop)  # 표 제목에 폰트 직접 적용\n","plt.xlabel('이상물류비금액', fontproperties=font_prop)\n","plt.ylabel('빈도', fontproperties=font_prop)\n","plt.show()\n"],"cell_type":"code","execution_count":98,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"bM6tnewa24-V","executionInfo":{"status":"ok","timestamp":1735199222049,"user_tz":-540,"elapsed":1501,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"d33a3bd0-1af8-4905-dc6a-e8bc06e6d790"}},{"source":["# @title 소사업명 vs 총지급운임합계\n","\n","from matplotlib import pyplot as plt\n","import seaborn as sns\n","\n","#Matplotlib에 한글 폰트 설정\n","import matplotlib.pyplot as plt\n","import matplotlib as mpl\n","import matplotlib.font_manager as fm\n","\n","plt.rc('font', family='NanumGothic')\n","mpl.rc('axes', unicode_minus=False)  # 마이너스 기호 깨짐 방지\n","!rm -rf ~/.cache/matplotlib  # 폰트 캐시 삭제\n","\n","#폰트 경로를 직접 지정해 적용\n","font_path = '/usr/share/fonts/truetype/nanum/NanumGothic.ttf'\n","from matplotlib import font_manager as fm\n","font_prop = fm.FontProperties(fname=font_path)\n","\n","mpl.rc('font', family=font_prop.get_name())\n","\n","\n","\n","#모든 축과 다른곳에도 적용\n","plt.plot([1, 2, 3], [3, 4, 5], label='테스트 라벨')\n","plt.title('소사업명', fontproperties=font_prop)\n","plt.xlabel('총지급운임합계', fontproperties=font_prop)\n","plt.ylabel('소사업명', fontproperties=font_prop)\n","plt.legend(prop=font_prop)\n","plt.show()\n","\n","\n","\n","figsize = (12, 1.2 * len(train['소사업명'].unique()))\n","plt.figure(figsize=figsize)\n","sns.violinplot(train, x='총지급운임합계', y='소사업명', inner='stick', palette='Dark2')\n","sns.despine(top=True, right=True, bottom=True, left=True)\n","\n","\n"],"cell_type":"code","execution_count":90,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stderr","text":["<ipython-input-90-12ec8276a52f>:36: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `y` variable to `hue` and set `legend=False` for the same effect.\n","\n","  sns.violinplot(train, x='총지급운임합계', y='소사업명', inner='stick', palette='Dark2')\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 52509 (\\N{HANGUL SYLLABLE CONG}) missing from current font.\n","  func(*args, **kwargs)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 51648 (\\N{HANGUL SYLLABLE JI}) missing from current font.\n","  func(*args, **kwargs)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 44553 (\\N{HANGUL SYLLABLE GEUB}) missing from current font.\n","  func(*args, **kwargs)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 50868 (\\N{HANGUL SYLLABLE UN}) missing from current font.\n","  func(*args, **kwargs)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 51076 (\\N{HANGUL SYLLABLE IM}) missing from current font.\n","  func(*args, **kwargs)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 54633 (\\N{HANGUL SYLLABLE HAB}) missing from current font.\n","  func(*args, **kwargs)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 44228 (\\N{HANGUL SYLLABLE GYE}) missing from current font.\n","  func(*args, **kwargs)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 52968 (\\N{HANGUL SYLLABLE KEON}) missing from current font.\n","  func(*args, **kwargs)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 53580 (\\N{HANGUL SYLLABLE TE}) missing from current font.\n","  func(*args, **kwargs)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 51060 (\\N{HANGUL SYLLABLE I}) missing from current font.\n","  func(*args, **kwargs)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 45320 (\\N{HANGUL SYLLABLE NEO}) missing from current font.\n","  func(*args, **kwargs)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 49569 (\\N{HANGUL SYLLABLE SONG}) missing from current font.\n","  func(*args, **kwargs)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 44592 (\\N{HANGUL SYLLABLE GI}) missing from current font.\n","  func(*args, **kwargs)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 53440 (\\N{HANGUL SYLLABLE TA}) missing from current font.\n","  func(*args, **kwargs)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 51068 (\\N{HANGUL SYLLABLE IL}) missing from current font.\n","  func(*args, **kwargs)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 48152 (\\N{HANGUL SYLLABLE BAN}) missing from current font.\n","  func(*args, **kwargs)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 50976 (\\N{HANGUL SYLLABLE YU}) missing from current font.\n","  func(*args, **kwargs)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 53685 (\\N{HANGUL SYLLABLE TONG}) missing from current font.\n","  func(*args, **kwargs)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 54868 (\\N{HANGUL SYLLABLE HWA}) missing from current font.\n","  func(*args, **kwargs)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 47932 (\\N{HANGUL SYLLABLE MUL}) missing from current font.\n","  func(*args, **kwargs)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 49548 (\\N{HANGUL SYLLABLE SO}) missing from current font.\n","  func(*args, **kwargs)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 49324 (\\N{HANGUL SYLLABLE SA}) missing from current font.\n","  func(*args, **kwargs)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 50629 (\\N{HANGUL SYLLABLE EOB}) missing from current font.\n","  func(*args, **kwargs)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 47749 (\\N{HANGUL SYLLABLE MYEONG}) missing from current font.\n","  func(*args, **kwargs)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 52509 (\\N{HANGUL SYLLABLE CONG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 51648 (\\N{HANGUL SYLLABLE JI}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 44553 (\\N{HANGUL SYLLABLE GEUB}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 50868 (\\N{HANGUL SYLLABLE UN}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 51076 (\\N{HANGUL SYLLABLE IM}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 54633 (\\N{HANGUL SYLLABLE HAB}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 44228 (\\N{HANGUL SYLLABLE GYE}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 52968 (\\N{HANGUL SYLLABLE KEON}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 53580 (\\N{HANGUL SYLLABLE TE}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 51060 (\\N{HANGUL SYLLABLE I}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 45320 (\\N{HANGUL SYLLABLE NEO}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 49569 (\\N{HANGUL SYLLABLE SONG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 44592 (\\N{HANGUL SYLLABLE GI}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 53440 (\\N{HANGUL SYLLABLE TA}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 51068 (\\N{HANGUL SYLLABLE IL}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 48152 (\\N{HANGUL SYLLABLE BAN}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 50976 (\\N{HANGUL SYLLABLE YU}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 53685 (\\N{HANGUL SYLLABLE TONG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 54868 (\\N{HANGUL SYLLABLE HWA}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 47932 (\\N{HANGUL SYLLABLE MUL}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 49548 (\\N{HANGUL SYLLABLE SO}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 49324 (\\N{HANGUL SYLLABLE SA}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 50629 (\\N{HANGUL SYLLABLE EOB}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 47749 (\\N{HANGUL SYLLABLE MYEONG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x360 with 1 Axes>"],"image/png":"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Xq+++mrWzgcAAABkE6EAACg+MOChQ4dUU32WTNOXpbMakqSvfe1rcl03S+cEAAAAsodQAAAkPf/885Kk+tqlWTunEc8ENDw8rJ/97GdZOy8AAACQLYQCAPLe4cOH9corr6i4qEalJbVZPns8Gfi7v/s7DQ4OZvncAAAAwIkhFACQ9/7v//2/chxHjQ3nZf3cydYCIyMj+uY3v5n18wMAAAAnglAAQF5zXVc/+tGPZFkB1VafPafXeu655/Tuu+/O6TUAAACA2SAUAJDXXn/9dXV1dam25mz5fIE5v95jj31DsVhszq8DAAAAzAShAIC8lhxgsLE++10HJrN7d7ueeOKJebkWAAAAcCyEAgDyVldXl37961+rpLhWJcU183bdZ599Vj//+c/n7XoAAADAVAgFAOStp556Sq7rqqVpxbxf++GHH9auXbvm/boAAABAOkIBAHlp9+7d+slPfqLioirVVJ8579e3bVv33PNV9fX1zfu1AQAAgCRCAQB56dvf/rZc19VprZfKSD43cB75fEHt3dupr3zlKxoYGJj36wMAAAASoQCAPLR161b94he/UGlJvRZVfiAnNfh9ITU1XqCdO3fq9ttvJxgAAABAThAKAMgrrutq7dq1kqTTP3BZTloJJJ15+h+oqeF87dixQ1/4whfU1dWVs1oAAACQnwgFAOSVp59+Whs2bNCiytNUUd6U01oMw9CZS/5QTY0X6NChQ1qzZo02bNiQ05oAAACQXwgFAOSNV155Rd/+9rcVDpdp6dmfyHU5kuLBwFlLPirJ0ODgkL7yla/oqaeeUjQazXVpAAAAyAO+XF345Zdf1q233qpQKJSx3nVdXX755XrjjTcUiUQmHDc0NKTNmzfr8ccf1zPPPCOfL/MtRKNRPfDAA1q5cqWuuuoqFRQUTDhHa2urnnvuOV177bVqb2+fsH1kZEQvvPCCXnvtNT3yyCMKBAIZ223b1o033qivfvWrx/PWAeTA7t279dBDD8my/Fq29Gr5/eFcl5TBMKQV59+gN9/+rr797W/rhRde1N13/5VWrlyZ69IAAABwCstZKDA6OqobbrhBDz30UMb63bt3695775VhGNq4ceOE41avXi3P89TX16e1a9dq9erVGdvXrVunwcFBxWIxXXLJJVq3bt2EcyT/yO7q6pr0GmvWrFEsFtPg4KDuuecerVmzJmP7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\n"},"metadata":{}}],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"7EKXuY1e2BV0","executionInfo":{"status":"ok","timestamp":1735197867657,"user_tz":-540,"elapsed":1528,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"e6dac6ec-41bb-4cce-de24-962e367c550d"}},{"cell_type":"code","source":["test.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"Zmlj46n--bIY","executionInfo":{"status":"ok","timestamp":1735197611932,"user_tz":-540,"elapsed":854,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"36fdf249-798e-4e74-b04d-483d371bc4d0"},"execution_count":84,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       구분         청구화주         당월       당월.1   당월.2         전월       전월.1  \\\n","0      구분         청구화주       운송수입        용차임    지급율       운송수입        용차임   \n","1      구분         청구화주       운송수입        용차임    지급율       운송수입        용차임   \n","2  일반화물운송      계양전기(주)  198612000  187373280  94.34  188624000  177666560   \n","3  일반화물운송  로드스타씨앤에어(주)   10619000    9682000  91.18    8254700    7532460   \n","4  일반화물운송  현대글로비스 주식회사  331970960  301668788  90.87  267947836  241436910   \n","\n","    전월.2    전월대비증감 전월대비증감.1  전월대비증감.2 전월대비증감.3  화주별 전월대비 증감사유  \n","0    지급율      운송수입     운송수입       용차임      용차임  화주별 전월대비 증감사유  \n","1    지급율        금액       증감        금액       증감  화주별 전월대비 증감사유  \n","2  94.19   9988000      5.3   9706720     5.46            NaN  \n","3  91.25   2364300    28.64   2149540    28.54            NaN  \n","4  90.11  64023124    23.89  60231878    24.95            NaN  "],"text/html":["\n","  <div id=\"df-a96acd7f-61f6-4f26-a562-62f5fa50c224\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>구분</th>\n","      <th>청구화주</th>\n","      <th>당월</th>\n","      <th>당월.1</th>\n","      <th>당월.2</th>\n","      <th>전월</th>\n","      <th>전월.1</th>\n","      <th>전월.2</th>\n","      <th>전월대비증감</th>\n","      <th>전월대비증감.1</th>\n","      <th>전월대비증감.2</th>\n","      <th>전월대비증감.3</th>\n","      <th>화주별 전월대비 증감사유</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>구분</td>\n","      <td>청구화주</td>\n","      <td>운송수입</td>\n","      <td>용차임</td>\n","      <td>지급율</td>\n","      <td>운송수입</td>\n","      <td>용차임</td>\n","      <td>지급율</td>\n","      <td>운송수입</td>\n","      <td>운송수입</td>\n","      <td>용차임</td>\n","      <td>용차임</td>\n","      <td>화주별 전월대비 증감사유</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>구분</td>\n","      <td>청구화주</td>\n","      <td>운송수입</td>\n","      <td>용차임</td>\n","      <td>지급율</td>\n","      <td>운송수입</td>\n","      <td>용차임</td>\n","      <td>지급율</td>\n","      <td>금액</td>\n","      <td>증감</td>\n","      <td>금액</td>\n","      <td>증감</td>\n","      <td>화주별 전월대비 증감사유</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>일반화물운송</td>\n","      <td>계양전기(주)</td>\n","      <td>198612000</td>\n","      <td>187373280</td>\n","      <td>94.34</td>\n","      <td>188624000</td>\n","      <td>177666560</td>\n","      <td>94.19</td>\n","      <td>9988000</td>\n","      <td>5.3</td>\n","      <td>9706720</td>\n","      <td>5.46</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>일반화물운송</td>\n","      <td>로드스타씨앤에어(주)</td>\n","      <td>10619000</td>\n","      <td>9682000</td>\n","      <td>91.18</td>\n","      <td>8254700</td>\n","      <td>7532460</td>\n","      <td>91.25</td>\n","      <td>2364300</td>\n","      <td>28.64</td>\n","      <td>2149540</td>\n","      <td>28.54</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>일반화물운송</td>\n","      <td>현대글로비스 주식회사</td>\n","      <td>331970960</td>\n","      <td>301668788</td>\n","      <td>90.87</td>\n","      <td>267947836</td>\n","      <td>241436910</td>\n","      <td>90.11</td>\n","      <td>64023124</td>\n","      <td>23.89</td>\n","      <td>60231878</td>\n","      <td>24.95</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a96acd7f-61f6-4f26-a562-62f5fa50c224')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a96acd7f-61f6-4f26-a562-62f5fa50c224 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a96acd7f-61f6-4f26-a562-62f5fa50c224');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1b2edf0c-9594-42e5-8282-8876fc9acb6d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1b2edf0c-9594-42e5-8282-8876fc9acb6d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1b2edf0c-9594-42e5-8282-8876fc9acb6d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"test","summary":"{\n  \"name\": \"test\",\n  \"rows\": 30,\n  \"fields\": [\n    {\n      \"column\": \"\\uad6c\\ubd84\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"\\uc77c\\ubc18\\ud654\\ubb3c\\uc6b4\\uc1a1\",\n          \"\\uae30\\ud0c0\\uc77c\\ubc18\\uc720\\ud1b5\",\n          \"\\uad6c\\ubd84\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uccad\\uad6c\\ud654\\uc8fc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 29,\n        \"samples\": [\n          \"(\\uc8fc)\\ub9cc\\uc564\\ud734\\uba5c\\ucf54\\ub9ac\\uc544\",\n          \"\\uac74\\uc601\\uc885\\ud569\\ubb3c\\ub958 \\uc8fc\\uc2dd\\ud68c\\uc0ac\",\n          \"(\\uc8fc)\\ub3d9\\ubc29\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ub2f9\\uc6d4\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 29,\n        \"samples\": [\n          43705350,\n          215000,\n          56259000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ub2f9\\uc6d4.1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 29,\n        \"samples\": [\n          41851100,\n          203000,\n          51441000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ub2f9\\uc6d4.2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 28,\n        \"samples\": [\n          \"81.82\",\n          \"87.81\",\n          \"94.05\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc804\\uc6d4\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 27,\n        \"samples\": [\n          39160000,\n          42880000,\n          66322000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc804\\uc6d4.1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 27,\n        \"samples\": [\n          36418800,\n          39664000,\n          62415100\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc804\\uc6d4.2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 26,\n        \"samples\": [\n          \"94.11\",\n          \"83.29\",\n          \"\\uc9c0\\uae09\\uc728\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc804\\uc6d4\\ub300\\ube44\\uc99d\\uac10\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 30,\n        \"samples\": [\n          -83790880,\n          2260000,\n          3090000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc804\\uc6d4\\ub300\\ube44\\uc99d\\uac10.1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 27,\n        \"samples\": [\n          \"27.63\",\n          \"-7.05\",\n          \"38.33\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc804\\uc6d4\\ub300\\ube44\\uc99d\\uac10.2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 30,\n        \"samples\": [\n          -72625550,\n          1804000,\n          2850000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc804\\uc6d4\\ub300\\ube44\\uc99d\\uac10.3\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 27,\n        \"samples\": [\n          \"27.71\",\n          \"-7.03\",\n          \"38.33\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud654\\uc8fc\\ubcc4 \\uc804\\uc6d4\\ub300\\ube44 \\uc99d\\uac10\\uc0ac\\uc720\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\ud654\\uc8fc\\ubcc4 \\uc804\\uc6d4\\ub300\\ube44 \\uc99d\\uac10\\uc0ac\\uc720\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":84}]},{"cell_type":"markdown","source":["###여기부터는 시각화 자료를 위한 것으로 비용집중화 파일 생성과 무관"],"metadata":{"id":"PRYH_XnU1uTL"}},{"cell_type":"code","source":[],"metadata":{"id":"S1WmfJmB1uGL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#그래프 및 시각화 위한 작업"],"metadata":{"id":"GH8W3iKIym4w"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#한글  설치\n","!apt-get update -qq\n","!apt-get install -qq -y fonts-nanum\n","\n","#나눔고딕 직접 설치\n","!wget -O /usr/share/fonts/truetype/nanum/NanumGothic.ttf \\\n","    https://github.com/google/fonts/raw/main/ofl/nanumgothic/NanumGothic-Regular.ttf\n","!fc-cache -fv"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Hxj5-sL_ym2I","executionInfo":{"status":"ok","timestamp":1735197437601,"user_tz":-540,"elapsed":6772,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"84368481-32c4-45b0-af8b-18c89301f17c"},"execution_count":75,"outputs":[{"output_type":"stream","name":"stdout","text":["W: Skipping acquire of configured file 'main/source/Sources' as repository 'https://r2u.stat.illinois.edu/ubuntu jammy InRelease' does not seem to provide it (sources.list entry misspelt?)\n"]}]},{"cell_type":"code","source":["#출력에 /usr/share/fonts/truetype/nanum/NanumGothic.ttf가 보이면 설치 완료입니다.\n","import matplotlib.font_manager as fm\n","\n","for font in fm.findSystemFonts(fontpaths=['/usr/share/fonts/truetype/nanum']):\n","    print(font)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U8PQ5YHoz0QK","executionInfo":{"status":"ok","timestamp":1735197447615,"user_tz":-540,"elapsed":471,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"31d36233-c14f-46e9-b204-1dd352ad4084"},"execution_count":77,"outputs":[{"output_type":"stream","name":"stdout","text":["/usr/share/fonts/truetype/nanum/NanumBarunGothic.ttf\n","/usr/share/fonts/truetype/nanum/NanumBarunGothicBold.ttf\n","/usr/share/fonts/truetype/nanum/NanumMyeongjo.ttf\n","/usr/share/fonts/truetype/nanum/NanumSquareRoundR.ttf\n","/usr/share/fonts/truetype/nanum/NanumGothicBold.ttf\n","/usr/share/fonts/truetype/nanum/NanumSquareRoundB.ttf\n","/usr/share/fonts/truetype/nanum/NanumGothicCodingBold.ttf\n","/usr/share/fonts/truetype/nanum/NanumSquareB.ttf\n","/usr/share/fonts/truetype/nanum/NanumGothicCoding.ttf\n","/usr/share/fonts/truetype/nanum/NanumSquareR.ttf\n","/usr/share/fonts/truetype/nanum/NanumGothic.ttf\n","/usr/share/fonts/truetype/nanum/NanumMyeongjoBold.ttf\n"]}]},{"cell_type":"code","source":["#설치된 폰트 확인\n","import matplotlib.font_manager as fm\n","\n","for font in fm.findSystemFonts(fontpaths=['/usr/share/fonts/truetype/nanum']):\n","    print(font)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"W7Hdjqy7ymz2","executionInfo":{"status":"ok","timestamp":1735197450952,"user_tz":-540,"elapsed":469,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"ae4a510f-b787-4a55-e017-9de53825c26c"},"execution_count":78,"outputs":[{"output_type":"stream","name":"stdout","text":["/usr/share/fonts/truetype/nanum/NanumBarunGothic.ttf\n","/usr/share/fonts/truetype/nanum/NanumBarunGothicBold.ttf\n","/usr/share/fonts/truetype/nanum/NanumMyeongjo.ttf\n","/usr/share/fonts/truetype/nanum/NanumSquareRoundR.ttf\n","/usr/share/fonts/truetype/nanum/NanumGothicBold.ttf\n","/usr/share/fonts/truetype/nanum/NanumSquareRoundB.ttf\n","/usr/share/fonts/truetype/nanum/NanumGothicCodingBold.ttf\n","/usr/share/fonts/truetype/nanum/NanumSquareB.ttf\n","/usr/share/fonts/truetype/nanum/NanumGothicCoding.ttf\n","/usr/share/fonts/truetype/nanum/NanumSquareR.ttf\n","/usr/share/fonts/truetype/nanum/NanumGothic.ttf\n","/usr/share/fonts/truetype/nanum/NanumMyeongjoBold.ttf\n"]}]},{"cell_type":"code","source":["#Matplotlib에 한글 폰트 설정\n","import matplotlib.pyplot as plt\n","import matplotlib as mpl\n","import matplotlib.font_manager as fm\n","\n","plt.rc('font', family='NanumGothic')\n","mpl.rc('axes', unicode_minus=False)  # 마이너스 기호 깨짐 방지\n","!rm -rf ~/.cache/matplotlib  # 폰트 캐시 삭제"],"metadata":{"id":"m6EzmRZqymx3","executionInfo":{"status":"ok","timestamp":1735197453996,"user_tz":-540,"elapsed":464,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}}},"execution_count":79,"outputs":[]},{"cell_type":"code","source":["#폰트 경로를 직접 지정해 적용\n","font_path = '/usr/share/fonts/truetype/nanum/NanumGothic.ttf'\n","from matplotlib import font_manager as fm\n","font_prop = fm.FontProperties(fname=font_path)\n","\n","mpl.rc('font', family=font_prop.get_name())\n"],"metadata":{"id":"JyoHwXg70VYA","executionInfo":{"status":"ok","timestamp":1735197456878,"user_tz":-540,"elapsed":463,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}}},"execution_count":80,"outputs":[]},{"cell_type":"code","source":["plt.plot([1, 2, 3], [3, 4, 5])\n","plt.title('한글 그래프 테스트', fontproperties=font_prop)  # 표 제목에 폰트 직접 적용\n","plt.show()\n","\n","#모든 축과 다른곳에도 적용\n","plt.plot([1, 2, 3], [3, 4, 5], label='테스트 라벨')\n","plt.title('한글 그래프 테스트', fontproperties=font_prop)\n","plt.xlabel('X축', fontproperties=font_prop)\n","plt.ylabel('Y축', fontproperties=font_prop)\n","plt.legend(prop=font_prop)\n","plt.show()\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"h4S8JgAQymvg","executionInfo":{"status":"ok","timestamp":1735197572258,"user_tz":-540,"elapsed":1664,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"cd92df32-9952-4c2c-9a63-8d79e7ef2744"},"execution_count":83,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["\n"],"metadata":{"id":"H09PwuEKy43p","executionInfo":{"status":"ok","timestamp":1735196919831,"user_tz":-540,"elapsed":479,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}}},"execution_count":38,"outputs":[]}]}