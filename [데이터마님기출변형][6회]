{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNIwZNS55lwq4EvbUYJ0A36"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["작업 1유형"],"metadata":{"id":"LQYryoN-wSbU"}},{"cell_type":"markdown","source":["데이터 설명 : 소방신고별 신고시각과 출동시각 데이터 컬럼 설명 : 신고일자 (yyyymmdd) / 신고시각 (HHMMSS , 00시 , 00분의 경우 등 생략)"],"metadata":{"id":"DMu71Y-XwVPv"}},{"cell_type":"code","source":["import pandas as pd\n","df = pd.read_csv('https://raw.githubusercontent.com/Datamanim/datarepo/main/krdatacertificate/e6_p1_1.csv')\n","df.head(5)"],"metadata":{"id":"us5RDU8wwU1b","colab":{"base_uri":"https://localhost:8080/","height":310},"executionInfo":{"status":"ok","timestamp":1749957127218,"user_tz":-540,"elapsed":189,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"31504b16-1688-40bd-ca52-9f2b320b8b30"},"execution_count":64,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             구급보고서번호   소방서명 환자증상구분명1      신고일자    신고시각      출동일자    출동시각  \\\n","0  20211122103M01526  중랑소방서     심계항진  20210330  104800  20210330  105042   \n","1  20211111105M00771  노원소방서       복통  20210412  225600  20210412  225827   \n","2  20211115104M00864  서초소방서     심계항진  20210303  194100  20210303  194500   \n","3  20211113107M01869  마포소방서       고열  20211225  235400  20211226     331   \n","4  20211118102M05820  강동소방서       고열  20211019   12100  20211019   12322   \n","\n","  환자직업명 사고발생장소  \n","0    무직      집  \n","1    기타      집  \n","2   직장인   상업시설  \n","3    유아      집  \n","4    무직      집  "],"text/html":["\n","  <div id=\"df-b282f3fb-fb19-404c-885b-91d75d76a9c5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>구급보고서번호</th>\n","      <th>소방서명</th>\n","      <th>환자증상구분명1</th>\n","      <th>신고일자</th>\n","      <th>신고시각</th>\n","      <th>출동일자</th>\n","      <th>출동시각</th>\n","      <th>환자직업명</th>\n","      <th>사고발생장소</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20211122103M01526</td>\n","      <td>중랑소방서</td>\n","      <td>심계항진</td>\n","      <td>20210330</td>\n","      <td>104800</td>\n","      <td>20210330</td>\n","      <td>105042</td>\n","      <td>무직</td>\n","      <td>집</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20211111105M00771</td>\n","      <td>노원소방서</td>\n","      <td>복통</td>\n","      <td>20210412</td>\n","      <td>225600</td>\n","      <td>20210412</td>\n","      <td>225827</td>\n","      <td>기타</td>\n","      <td>집</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20211115104M00864</td>\n","      <td>서초소방서</td>\n","      <td>심계항진</td>\n","      <td>20210303</td>\n","      <td>194100</td>\n","      <td>20210303</td>\n","      <td>194500</td>\n","      <td>직장인</td>\n","      <td>상업시설</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>20211113107M01869</td>\n","      <td>마포소방서</td>\n","      <td>고열</td>\n","      <td>20211225</td>\n","      <td>235400</td>\n","      <td>20211226</td>\n","      <td>331</td>\n","      <td>유아</td>\n","      <td>집</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>20211118102M05820</td>\n","      <td>강동소방서</td>\n","      <td>고열</td>\n","      <td>20211019</td>\n","      <td>12100</td>\n","      <td>20211019</td>\n","      <td>12322</td>\n","      <td>무직</td>\n","      <td>집</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b282f3fb-fb19-404c-885b-91d75d76a9c5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b282f3fb-fb19-404c-885b-91d75d76a9c5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b282f3fb-fb19-404c-885b-91d75d76a9c5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-2be72ffa-2a20-4632-9f6e-2c7a38b75e96\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2be72ffa-2a20-4632-9f6e-2c7a38b75e96')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-2be72ffa-2a20-4632-9f6e-2c7a38b75e96 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 2762,\n  \"fields\": [\n    {\n      \"column\": \"\\uad6c\\uae09\\ubcf4\\uace0\\uc11c\\ubc88\\ud638\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2762,\n        \"samples\": [\n          \"20211107102M03734\",\n          \"20211107102M01938\",\n          \"20211123505M02330\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc18c\\ubc29\\uc11c\\uba85\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 24,\n        \"samples\": [\n          \"\\uc131\\ub3d9\\uc18c\\ubc29\\uc11c\",\n          \"\\uc1a1\\ud30c\\uc18c\\ubc29\\uc11c\",\n          \"\\uc911\\ub791\\uc18c\\ubc29\\uc11c\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud658\\uc790\\uc99d\\uc0c1\\uad6c\\ubd84\\uba851\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 39,\n        \"samples\": [\n          \"\\ubcc0\\ube44\",\n          \"\\uac1d\\ud608\",\n          \"\\uc758\\uc2dd\\uc7a5\\uc560\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc2e0\\uace0\\uc77c\\uc790\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 334,\n        \"min\": 20210101,\n        \"max\": 20211231,\n        \"num_unique_values\": 365,\n        \"samples\": [\n          20210418,\n          20210507,\n          20210625\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc2e0\\uace0\\uc2dc\\uac01\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 67419,\n        \"min\": 0,\n        \"max\": 235900,\n        \"num_unique_values\": 1148,\n        \"samples\": [\n          11100,\n          71200,\n          200000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ucd9c\\ub3d9\\uc77c\\uc790\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 334,\n        \"min\": 20210101,\n        \"max\": 20211231,\n        \"num_unique_values\": 365,\n        \"samples\": [\n          20211014,\n          20210507,\n          20210625\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ucd9c\\ub3d9\\uc2dc\\uac01\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 70189,\n        \"min\": 0,\n        \"max\": 235944,\n        \"num_unique_values\": 2372,\n        \"samples\": [\n          130300,\n          83302,\n          62716\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud658\\uc790\\uc9c1\\uc5c5\\uba85\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"\\uae30\\ud0c0\",\n          \"\\uc790\\uc601\\uc5c5\",\n          \"\\ubb34\\uc9c1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc0ac\\uace0\\ubc1c\\uc0dd\\uc7a5\\uc18c\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 13,\n        \"samples\": [\n          \"\\uc77c\\ucc28\\uc0b0\\uc5c5\\uc7a5\",\n          \"\\uc624\\ub77d/\\ubb38\\ud654\\uc2dc\\uc124\",\n          \"\\uc9d1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":64}]},{"cell_type":"markdown","source":["1-1 : 각 구급 보고서 별 출동시각과 신고시각의 차이를 ‘소요시간’ 컬럼을 만들고 초(sec)단위로 구하고 소방서명 별 소요시간의 평균을 오름차순으로 정렬 했을때 3번째로 작은 소요시간의 값과 소방서명을 출력하라"],"metadata":{"id":"Pu59vWy_wYto"}},{"cell_type":"code","source":["#이건신고일자와 출동일자가 다를수 있어서 신고시각이랑 출동시각이랑 뺴면 제대로 된게아님 그래서 두개를 합친다음에 해야함\n","\n","cond1 = pd.to_datetime(df['출동일자'].astype(str) + df['출동시각'].astype(str).str.zfill(6))\n","cond2 = pd.to_datetime(df['신고일자'].astype(str) + df['신고시각'].astype(str).str.zfill(6))\n","# dt.total_seconds는 빼줄떄 써야함!\n","\n","df['소요시간'] = (cond1 - cond2).dt.total_seconds()\n","\n","\n","df.groupby('소방서명')['소요시간'].mean().sort_values().reset_index().iloc[2]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":147},"id":"OXIXZNMGY1C5","executionInfo":{"status":"ok","timestamp":1749957321178,"user_tz":-540,"elapsed":72,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"8821f2b1-1649-4ccc-85db-81add191e26e"},"execution_count":73,"outputs":[{"output_type":"execute_result","data":{"text/plain":["소방서명    종로소방서\n","소요시간    175.5\n","Name: 2, dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>소방서명</th>\n","      <td>종로소방서</td>\n","    </tr>\n","    <tr>\n","      <th>소요시간</th>\n","      <td>175.5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":73}]},{"cell_type":"markdown","source":["국내 학교 및 학급 인원 수"],"metadata":{"id":"a8j08EiTwbnH"}},{"cell_type":"code","execution_count":74,"metadata":{"id":"PJtFryzYwMQK","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1749957330205,"user_tz":-540,"elapsed":346,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"fec8f8bf-0c2d-4a0e-f011-56e6d021ac73"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["               학교명  시도  학교세부유형  일반학급_학생수_계  교원수_총계_계\n","0  서울대학교사범대학부설고등학교  서울  일반고등학교         689        73\n","1           가락고등학교  서울  일반고등학교         765        70\n","2           개포고등학교  서울  일반고등학교         684        69\n","3           경기고등학교  서울  일반고등학교        1047        96\n","4           경동고등학교  서울  일반고등학교         529        58"],"text/html":["\n","  <div id=\"df-8de0545c-ff3e-4082-8707-e4bc265cab05\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>학교명</th>\n","      <th>시도</th>\n","      <th>학교세부유형</th>\n","      <th>일반학급_학생수_계</th>\n","      <th>교원수_총계_계</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>서울대학교사범대학부설고등학교</td>\n","      <td>서울</td>\n","      <td>일반고등학교</td>\n","      <td>689</td>\n","      <td>73</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>가락고등학교</td>\n","      <td>서울</td>\n","      <td>일반고등학교</td>\n","      <td>765</td>\n","      <td>70</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>개포고등학교</td>\n","      <td>서울</td>\n","      <td>일반고등학교</td>\n","      <td>684</td>\n","      <td>69</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>경기고등학교</td>\n","      <td>서울</td>\n","      <td>일반고등학교</td>\n","      <td>1047</td>\n","      <td>96</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>경동고등학교</td>\n","      <td>서울</td>\n","      <td>일반고등학교</td>\n","      <td>529</td>\n","      <td>58</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8de0545c-ff3e-4082-8707-e4bc265cab05')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8de0545c-ff3e-4082-8707-e4bc265cab05 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8de0545c-ff3e-4082-8707-e4bc265cab05');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-be49533c-29c1-41c9-82bd-a4182e1fb3e4\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-be49533c-29c1-41c9-82bd-a4182e1fb3e4')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-be49533c-29c1-41c9-82bd-a4182e1fb3e4 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 4960,\n  \"fields\": [\n    {\n      \"column\": \"\\ud559\\uad50\\uba85\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4446,\n        \"samples\": [\n          \"\\uc804\\uc8fc\\ud574\\uc131\\uc911\\ud559\\uad50\",\n          \"\\ub2e4\\uc6b4\\uc911\\ud559\\uad50\",\n          \"\\uc778\\ud558\\ub300\\ud559\\uad50\\uc0ac\\ubc94\\ub300\\ud559\\ubd80\\uc18d\\uace0\\ub4f1\\ud559\\uad50\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc2dc\\ub3c4\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 17,\n        \"samples\": [\n          \"\\uc11c\\uc6b8\",\n          \"\\ubd80\\uc0b0\",\n          \"\\ub300\\uc804\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud559\\uad50\\uc138\\ubd80\\uc720\\ud615\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"\\uc77c\\ubc18\\uc911\\ud559\\uad50\",\n          \"\\uc77c\\ubc18\\uace0\\ub4f1\\ud559\\uad50\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc77c\\ubc18\\ud559\\uae09_\\ud559\\uc0dd\\uc218_\\uacc4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 313,\n        \"min\": 0,\n        \"max\": 1630,\n        \"num_unique_values\": 1145,\n        \"samples\": [\n          298,\n          948\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uad50\\uc6d0\\uc218_\\ucd1d\\uacc4_\\uacc4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21,\n        \"min\": 0,\n        \"max\": 110,\n        \"num_unique_values\": 103,\n        \"samples\": [\n          76,\n          34\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":74}],"source":["import pandas as pd\n","df = pd.read_csv('https://raw.githubusercontent.com/Datamanim/datarepo/main/krdatacertificate/e6_p1_2.csv')\n","df.head(5)"]},{"cell_type":"markdown","source":["1-2: 학교 세부유형이 일반중학교인 학교들 중 일반중학교 숫자가 2번째로 많은\n","시도의 일반중학교 데이터만 필터하여 해당 시도의 교원 한명 당 맡은 학생수가 가장 많은 학교를 찾아서 해당 학교의 교원수를 출력하라"],"metadata":{"id":"wl6OyIytwdT7"}},{"cell_type":"code","source":["cond = df[df['학교세부유형'] == '일반중학교']\n","cond.value_counts('시도').reset_index().iloc[1]\n","result = cond[cond['시도'] == '서울']\n","result['인당케파'] = result['일반학급_학생수_계'] / result['교원수_총계_계']\n","result.sort_values('인당케파',ascending=False).reset_index().iloc[0]"],"metadata":{"id":"-z_NAQLSwdEE","colab":{"base_uri":"https://localhost:8080/","height":434},"executionInfo":{"status":"ok","timestamp":1749958130571,"user_tz":-540,"elapsed":30,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"6a6bf44c-efb8-48cf-85ea-c44acc5bd3ca"},"execution_count":91,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-91-4029419879>:4: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  result['인당케파'] = result['일반학급_학생수_계'] / result['교원수_총계_계']\n"]},{"output_type":"execute_result","data":{"text/plain":["index                    524\n","학교명           단국대학교사범대학부속중학교\n","시도                        서울\n","학교세부유형                 일반중학교\n","일반학급_학생수_계               606\n","교원수_총계_계                  33\n","인당케파               18.363636\n","Name: 0, dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>index</th>\n","      <td>524</td>\n","    </tr>\n","    <tr>\n","      <th>학교명</th>\n","      <td>단국대학교사범대학부속중학교</td>\n","    </tr>\n","    <tr>\n","      <th>시도</th>\n","      <td>서울</td>\n","    </tr>\n","    <tr>\n","      <th>학교세부유형</th>\n","      <td>일반중학교</td>\n","    </tr>\n","    <tr>\n","      <th>일반학급_학생수_계</th>\n","      <td>606</td>\n","    </tr>\n","    <tr>\n","      <th>교원수_총계_계</th>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>인당케파</th>\n","      <td>18.363636</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":91}]},{"cell_type":"markdown","source":["5대범죄 발생현황"],"metadata":{"id":"sYEh5-r4wi6a"}},{"cell_type":"code","source":["import pandas as pd\n","df = pd.read_csv('https://raw.githubusercontent.com/Datamanim/datarepo/main/krdatacertificate/e6_p1_3.csv')\n","df.head(5)"],"metadata":{"id":"xEEMq00_wdCD","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1749958397826,"user_tz":-540,"elapsed":119,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"88ea1cdd-ccb0-4430-e42c-c302db328e65"},"execution_count":96,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       범죄분류     절도     사기   배임   방화     폭행\n","0  2018년_1월  13280  25318  656  143  12186\n","1  2018년_2월  12504  19159  403  135  12087\n","2  2018년_3월  14733  24509  471  148  13841\n","3  2018년_4월  14781  23147  414  135  13973\n","4  2018년_5월  15988  23584  451  127  14117"],"text/html":["\n","  <div id=\"df-9328692f-c59e-4cbc-9e03-bfe57caad60f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>범죄분류</th>\n","      <th>절도</th>\n","      <th>사기</th>\n","      <th>배임</th>\n","      <th>방화</th>\n","      <th>폭행</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2018년_1월</td>\n","      <td>13280</td>\n","      <td>25318</td>\n","      <td>656</td>\n","      <td>143</td>\n","      <td>12186</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2018년_2월</td>\n","      <td>12504</td>\n","      <td>19159</td>\n","      <td>403</td>\n","      <td>135</td>\n","      <td>12087</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2018년_3월</td>\n","      <td>14733</td>\n","      <td>24509</td>\n","      <td>471</td>\n","      <td>148</td>\n","      <td>13841</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2018년_4월</td>\n","      <td>14781</td>\n","      <td>23147</td>\n","      <td>414</td>\n","      <td>135</td>\n","      <td>13973</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2018년_5월</td>\n","      <td>15988</td>\n","      <td>23584</td>\n","      <td>451</td>\n","      <td>127</td>\n","      <td>14117</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9328692f-c59e-4cbc-9e03-bfe57caad60f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9328692f-c59e-4cbc-9e03-bfe57caad60f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9328692f-c59e-4cbc-9e03-bfe57caad60f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-b87261aa-69d6-4ecc-9d29-61e023786c9b\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b87261aa-69d6-4ecc-9d29-61e023786c9b')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-b87261aa-69d6-4ecc-9d29-61e023786c9b button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 24,\n  \"fields\": [\n    {\n      \"column\": \"\\ubc94\\uc8c4\\ubd84\\ub958\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 24,\n        \"samples\": [\n          \"2018\\ub144_9\\uc6d4\",\n          \"2019\\ub144_5\\uc6d4\",\n          \"2018\\ub144_1\\uc6d4\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc808\\ub3c4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1457,\n        \"min\": 12504,\n        \"max\": 17333,\n        \"num_unique_values\": 23,\n        \"samples\": [\n          15305,\n          15122,\n          13280\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc0ac\\uae30\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2282,\n        \"min\": 19159,\n        \"max\": 28432,\n        \"num_unique_values\": 24,\n        \"samples\": [\n          22073,\n          27766,\n          25318\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubc30\\uc784\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 78,\n        \"min\": 360,\n        \"max\": 678,\n        \"num_unique_values\": 24,\n        \"samples\": [\n          486,\n          509,\n          656\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubc29\\ud654\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 91,\n        \"max\": 148,\n        \"num_unique_values\": 21,\n        \"samples\": [\n          143,\n          104,\n          101\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud3ed\\ud589\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1257,\n        \"min\": 10893,\n        \"max\": 15285,\n        \"num_unique_values\": 24,\n        \"samples\": [\n          15256,\n          14572,\n          12186\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":96}]},{"cell_type":"markdown","source":["1-3: **5대 범죄(절도, 사기, 배임, 방화, 폭행)의 월별 총 발생건수를 총범죄수라고 표현하자. 18,19년의 각각 분기별 총범죄수의 월평균 값을 구했을때 최대값을 가지는 년도와 분기를 구하고 해당 분기의 최댓값의 사기가 발생한 월의 사기 발생건수를 출력하라(1분기:1,2,3월 / 2분기 : 4,5,6월 / 3분기 7,8,9월 / 4분기 10,11,12월 , 1분기 월평균 : 1,2,3월의 총범죄수 평균) **"],"metadata":{"id":"eF2dcw0Zwk-G"}},{"cell_type":"code","source":["df['총범죄수'] = df['절도'] + df['사기'] + df['배임'] + df['방화'] + df['폭행']\n","df[['년도','월']] = df['범죄분류'].str.split('_', expand =True)   #expand=True는 문자열을 나눈 결과를 **\"DataFrame의 여러 컬럼\"으로 확장해서 넣겠다\"**는 뜻입니다.\n","\n","\n","cond_2018 = df[df['년도'] == '2018년']\n","cond_2019 = df[df['년도'] == '2019년']\n","\n","cond_2018_1분기 = cond_2018[cond_2018['월'].isin(['1월','2월','3월'])]\n","cond_2018_2분기 = cond_2018[cond_2018['월'].isin(['4월','5월','6월'])]\n","cond_2018_3분기 = cond_2018[cond_2018['월'].isin(['7월','8월','9월'])]\n","cond_2018_4분기 = cond_2018[cond_2018['월'].isin(['10월','11월','12월'])]\n","\n","\n","cond_2019_1분기 = cond_2019[cond_2019['월'].isin(['1월','2월','3월'])]\n","cond_2019_2분기 = cond_2019[cond_2019['월'].isin(['4월','5월','6월'])]\n","cond_2019_3분기 = cond_2019[cond_2019['월'].isin(['7월','8월','9월'])]\n","cond_2019_4분기 = cond_2019[cond_2019['월'].isin(['10월','11월','12월'])]\n","\n","print(cond_2018_1분기['총범죄수'].mean())\n","print(cond_2018_2분기['총범죄수'].mean())\n","print(cond_2018_3분기['총범죄수'].mean())\n","print(cond_2018_4분기['총범죄수'].mean())\n","print(cond_2019_1분기['총범죄수'].mean())\n","print(cond_2019_2분기['총범죄수'].mean()) #1등\n","print(cond_2019_3분기['총범죄수'].mean())\n","print(cond_2019_4분기['총범죄수'].mean())\n","\n","cond_2019_2분기.sort_values('사기',ascending=False)"],"metadata":{"id":"1L2QmT7Bwc_7","colab":{"base_uri":"https://localhost:8080/","height":290},"executionInfo":{"status":"ok","timestamp":1749959538216,"user_tz":-540,"elapsed":100,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"f232e7d5-45d0-4729-e4dd-ae943c2f970c"},"execution_count":139,"outputs":[{"output_type":"stream","name":"stdout","text":["49857.666666666664\n","53462.333333333336\n","55461.666666666664\n","50481.666666666664\n","53137.333333333336\n","58438.333333333336\n","58334.666666666664\n","53582.333333333336\n"]},{"output_type":"execute_result","data":{"text/plain":["        범죄분류     절도     사기   배임   방화     폭행   총범죄수     년도   월\n","16  2019년_5월  17333  27766  509  131  14572  60311  2019년  5월\n","15  2019년_4월  15305  27125  478  138  13322  56368  2019년  4월\n","17  2019년_6월  16937  25822  491  101  15285  58636  2019년  6월"],"text/html":["\n","  <div id=\"df-0b667e1e-4a91-46c6-8893-eb800a7fc7b6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>범죄분류</th>\n","      <th>절도</th>\n","      <th>사기</th>\n","      <th>배임</th>\n","      <th>방화</th>\n","      <th>폭행</th>\n","      <th>총범죄수</th>\n","      <th>년도</th>\n","      <th>월</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>16</th>\n","      <td>2019년_5월</td>\n","      <td>17333</td>\n","      <td>27766</td>\n","      <td>509</td>\n","      <td>131</td>\n","      <td>14572</td>\n","      <td>60311</td>\n","      <td>2019년</td>\n","      <td>5월</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>2019년_4월</td>\n","      <td>15305</td>\n","      <td>27125</td>\n","      <td>478</td>\n","      <td>138</td>\n","      <td>13322</td>\n","      <td>56368</td>\n","      <td>2019년</td>\n","      <td>4월</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>2019년_6월</td>\n","      <td>16937</td>\n","      <td>25822</td>\n","      <td>491</td>\n","      <td>101</td>\n","      <td>15285</td>\n","      <td>58636</td>\n","      <td>2019년</td>\n","      <td>6월</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0b667e1e-4a91-46c6-8893-eb800a7fc7b6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0b667e1e-4a91-46c6-8893-eb800a7fc7b6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0b667e1e-4a91-46c6-8893-eb800a7fc7b6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-151281f0-4652-46fc-8c92-298fab47b3e2\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-151281f0-4652-46fc-8c92-298fab47b3e2')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-151281f0-4652-46fc-8c92-298fab47b3e2 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"cond_2019_2\\ubd84\\uae30\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"\\ubc94\\uc8c4\\ubd84\\ub958\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"2019\\ub144_5\\uc6d4\",\n          \"2019\\ub144_4\\uc6d4\",\n          \"2019\\ub144_6\\uc6d4\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc808\\ub3c4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1074,\n        \"min\": 15305,\n        \"max\": 17333,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          17333,\n          15305,\n          16937\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc0ac\\uae30\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 990,\n        \"min\": 25822,\n        \"max\": 27766,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          27766,\n          27125,\n          25822\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubc30\\uc784\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 478,\n        \"max\": 509,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          509,\n          478,\n          491\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubc29\\ud654\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19,\n        \"min\": 101,\n        \"max\": 138,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          131,\n          138,\n          101\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud3ed\\ud589\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 993,\n        \"min\": 13322,\n        \"max\": 15285,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          14572,\n          13322,\n          15285\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ucd1d\\ubc94\\uc8c4\\uc218\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1978,\n        \"min\": 56368,\n        \"max\": 60311,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          60311,\n          56368,\n          58636\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ub144\\ub3c4\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"2019\\ub144\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc6d4\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"5\\uc6d4\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":139}]},{"cell_type":"markdown","source":["작업 2유형"],"metadata":{"id":"Ad-5rAr1wnIG"}},{"cell_type":"markdown","source":["건강상태 분류문제\n","예측 변수 General_Health, test.csv에 대해 ID별로 General_Health 값을 예측하여 제출, 제출 데이터 컬럼은 ID와 General_Health 두개만 존재해야함. 평가지표는 f1score\n","\n"],"metadata":{"id":"QNbx63oPwrO5"}},{"cell_type":"code","source":["#기존에 하던거\n","import pandas as pd\n","train = pd.read_csv('https://raw.githubusercontent.com/Datamanim/datarepo/main/krdatacertificate/ep6_p2_train.csv')\n","test = pd.read_csv('https://raw.githubusercontent.com/Datamanim/datarepo/main/krdatacertificate/ep6_p2_test.csv')\n","\n","# display(train.head(2))\n","# test.head(2)\n","\n","# train.select_dtypes(exclude='object').describe()\n","# print(train)\n","train = train.drop('ID', axis=1)\n","test_id = test.pop('ID')\n","target = train.pop('General_Health')\n","\n","# train.select_dtypes(exclude='object')\n","\n","\n","#스켈링\n","from sklearn.preprocessing import RobustScaler\n","scaler = RobustScaler()\n","col = ['Height_(cm)', 'Weight_(kg)', 'BMI', 'Alcohol_Consumption', 'Fruit_Consumption', 'Green_Vegetables_Consumption', 'FriedPotato_Consumption']\n","train[col] = scaler.fit_transform(train[col])\n","test[col] = scaler.transform(test[col])\n","# print(train)\n","\n","# print(train.select_dtypes(include='object'))\n","\n","#인코딩\n","from sklearn.preprocessing import LabelEncoder\n","combined = pd.concat([train,test], axis=0)  #axis=0은 밑으로 붙임!! axis=1로하면 옆으로붙어서 컬럼이 늘어나버림\n","cols = combined.select_dtypes(include='object')\n","for col in cols:\n","  le = LabelEncoder()\n","  le.fit(pd.concat([train[col], test[col]]))\n","  train[col] = le.transform(train[col])\n","  test[col] = le.transform(test[col])\n","\n","train\n","\n","#데이터분리\n","from sklearn.model_selection import train_test_split\n","X_tr, X_val, y_tr, y_val = train_test_split(train,\n","                                            target,\n","                                            test_size=0.2,\n","                                            random_state=25,\n","                                            stratify=target)  #분류문제에서만씀\n","X_tr.shape, X_val.shape, y_tr.shape, y_val.shape\n","\n","\n","#모델학습\n","from sklearn.ensemble import RandomForestClassifier\n","model = RandomForestClassifier(n_estimators=300,max_depth=15, min_samples_leaf=4, class_weight='balanced',random_state=25, n_jobs=-1)\n","model.fit(X_tr, y_tr)\n","pred = model.predict(X_val)\n","pred\n","\n","#평가\n","from sklearn.metrics import f1_score\n","f1_score(y_val ,pred, average='macro')  #다중회기 f1_score 은 반드시 average써줘야하고, macro가 일반적임\n","\n","#random_state = 25\n","0.5550874219687442\n","#n_estimators = 300\n","\n","\n","#test 데이터 적용 및 제출\n","pred_real = model.predict(test)\n","submit = pd.DataFrame({\n","                    'ID' : test_id,\n","                    'General_Health' : target\n","})\n","submit.to_csv(\"12398021.csv\",index=False)"],"metadata":{"id":"OiYaXGSXwn7S","executionInfo":{"status":"ok","timestamp":1749962756973,"user_tz":-540,"elapsed":7113,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}}},"execution_count":206,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"qQ09MZbOwvwp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"C19E1ejkwvux"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["작업 3유형"],"metadata":{"id":"iTHk61r0wwLB"}},{"cell_type":"markdown","source":["3-1 : A 도시의 남성 600명과 여성 550명이 있다. 남성들 중 흡연자 비율은 0.2이며 여성들 중 흡연자 비율은 0.26이다.\n","남성과 여성 간에 흡연 여부에 따른 인구 비율이 다른지 확인하고 싶다. 유의 수준 0.05하 귀무가설에 대해 기각 / 채택 여부와 p-value값을 각각 출력하라"],"metadata":{"id":"7ZZxhi_YwwG5"}},{"cell_type":"code","source":["#인구수\n","man_n = 600\n","woman_n = 550\n","#흡연자비율\n","man_ratio = 0.2\n","woman_ratio = 0.26\n","\n","#남자흡연자/ 비흡연자인구수\n","man_smoke = man_n *0.2\n","man_Nosmoke = man_n - man_smoke\n","#여자 흡연자/ 비흡연자 인구수\n","woman_smoke = woman_n*0.26\n","woman_Nosmoke = woman_n - woman_smoke\n","\n","from scipy import stats\n","import numpy as np\n","#데이터 배열생성(빈도로 변환)\n","data = np.array([[man_smoke, man_Nosmoke], [woman_smoke, woman_Nosmoke]])\n","data\n","chi2_stat, p_value, dof, expected = stats.chi2_contingency(data)\n","print(p_value)\n","print('귀무가설기각', '대립가설채택')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"z-MVcUWJw2KJ","executionInfo":{"status":"ok","timestamp":1749628749026,"user_tz":-540,"elapsed":8,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"4495a50d-61b5-433f-a0f0-66eb8f3e8885"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.018786854975740768\n","귀무가설기각 대립가설채택\n"]}]},{"cell_type":"markdown","source":["3-2연령, 몸무게,콜레스테롤 수치 데이터"],"metadata":{"id":"aww8_CUjwwEp"}},{"cell_type":"code","source":["import pandas as pd\n","df= pd.read_csv('https://raw.githubusercontent.com/Datamanim/datarepo/main/adp/28/p7.csv')\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"Iglvrhprw4jA","executionInfo":{"status":"ok","timestamp":1749629287611,"user_tz":-540,"elapsed":444,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"c64fe7d5-70ad-4667-9338-cf2de0028304"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   age  Cholesterol  weight\n","0   65         69.0   111.0\n","1   54        117.0    81.0\n","2   61         86.2    72.0\n","3   57         76.0    78.0\n","4   62        160.0    61.0"],"text/html":["\n","  <div id=\"df-c8abb7b5-58a2-4c4a-9e40-ff551404cf15\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>Cholesterol</th>\n","      <th>weight</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>65</td>\n","      <td>69.0</td>\n","      <td>111.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>54</td>\n","      <td>117.0</td>\n","      <td>81.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>61</td>\n","      <td>86.2</td>\n","      <td>72.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>57</td>\n","      <td>76.0</td>\n","      <td>78.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>62</td>\n","      <td>160.0</td>\n","      <td>61.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c8abb7b5-58a2-4c4a-9e40-ff551404cf15')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c8abb7b5-58a2-4c4a-9e40-ff551404cf15 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c8abb7b5-58a2-4c4a-9e40-ff551404cf15');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-7fc2b285-3fbf-4281-b0e7-2a2f524b5857\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7fc2b285-3fbf-4281-b0e7-2a2f524b5857')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-7fc2b285-3fbf-4281-b0e7-2a2f524b5857 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 333,\n  \"fields\": [\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14,\n        \"min\": 20,\n        \"max\": 90,\n        \"num_unique_values\": 59,\n        \"samples\": [\n          65,\n          52,\n          71\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cholesterol\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 37.97298281831312,\n        \"min\": 26.0,\n        \"max\": 260.0,\n        \"num_unique_values\": 154,\n        \"samples\": [\n          194.0,\n          117.8,\n          122.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"weight\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15.392197451728437,\n        \"min\": 41.0,\n        \"max\": 134.0,\n        \"num_unique_values\": 92,\n        \"samples\": [\n          58.0,\n          91.0,\n          131.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","source":["3-2-a: age와 Cholesterol을 가지고 weight를 예측하는 선형 회귀 모델을 만들려고한다. age의 회귀 계수를 구하여라\n","\n"],"metadata":{"id":"acthetQFw5nq"}},{"cell_type":"code","source":["#1번풀이\n","import statsmodels.api as sm\n","X = sm.add_constant(df[['age', 'Cholesterol']])\n","model = sm.OLS(df['weight'], X)\n","results = model.fit()\n","\n","# 전체 회귀 결과 출력\n","# print(results.summary())\n","\n","print(results.params['age'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OzjFo2r4DI4a","executionInfo":{"status":"ok","timestamp":1749629575115,"user_tz":-540,"elapsed":3355,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"2ee2bc4c-0eae-470b-de69-5bc7af3e8cb6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["-0.03610166914386496\n"]}]},{"cell_type":"code","source":["#2번풀이 이걸로 가기\n","import pandas as pd\n","import statsmodels.formula.api as smf\n","model = smf.ols('weight ~ age+Cholesterol', data =df).fit()\n","model.params['age']\n","p_value = model.pvalues['Cholesterol']\n","p_value"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3QllgGCeD-Gs","executionInfo":{"status":"ok","timestamp":1749630060818,"user_tz":-540,"elapsed":24,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"35c73b55-1842-4585-fb69-a5798da8d954"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.float64(0.00023778081979581645)"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["#3번풀이\n","from sklearn.linear_model import LinearRegression\n","\n","X= df[['age', 'Cholesterol']]\n","Y = df['weight']\n","\n","model = LinearRegression()\n","model.fit(X,Y)\n","\n","model.coef_[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NkIPe4cKxCmT","executionInfo":{"status":"ok","timestamp":1749629734727,"user_tz":-540,"elapsed":47,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"1d664c65-f74e-4d01-99a1-caf79a517a06"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.float64(-0.036101669143865374)"]},"metadata":{},"execution_count":29}]},{"cell_type":"markdown","source":["3-2-b : age가 고정일 때 Cholesterol와 weight가 선형관계에 있다는 가설을 유의수준 0.05하에 검정하라"],"metadata":{"id":"DevwXmrsw8Tf"}},{"cell_type":"markdown","source":["age가 고정된 상태에서 Cholesterol과 weight 간의 선형관계가 있는지 검정하려면, Cholesterol 변수의 회귀계수에 대한 유의성 검정 (t-검정) 결과를 확인하면 됩니다.\n","\n","statsmodels로 회귀모델 적합 후 Cholesterol의 p-value를 보고, 유의수준 0.05와 비교하면 됩니다.\n","\n"],"metadata":{"id":"Crr7J8LYFWBn"}},{"cell_type":"code","source":["#2번풀이로 실행히키고 해야함\n","\n","#Cholesterol p_valuse 추출\n","p_value = model.pvalues['Cholesterol']\n","p_value\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uP_YWUYpxCy8","executionInfo":{"status":"ok","timestamp":1749630090959,"user_tz":-540,"elapsed":38,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"048b31b9-bee5-4c6c-83fb-d3b2272ebaa8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.float64(0.00023778081979581645)"]},"metadata":{},"execution_count":41}]},{"cell_type":"markdown","source":["3-2-c : age가 55, Cholesterol가 72.6일때 위 모델을 기반으로 weight값을 예측하라."],"metadata":{"id":"fZRKO0t6w_PR"}},{"cell_type":"code","source":["new_data = pd.DataFrame({'age' : [55], 'Cholesterol': [72.6]})\n","\n","#예측\n","predicted_weight = model.predict(new_data)\n","predicted_weight"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":115},"id":"zDvG4G3DxDC1","executionInfo":{"status":"ok","timestamp":1749630308579,"user_tz":-540,"elapsed":25,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"724d360d-5b5c-4cb1-a8e8-25e612a42e63"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    78.85771\n","dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>78.85771</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":[],"metadata":{"id":"WpVpXH1txCPD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"q8gYnyhOwvsZ"},"execution_count":null,"outputs":[]}]}