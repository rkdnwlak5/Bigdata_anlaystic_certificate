{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1fHJOMD4ekLxKaYtGo94xW9Q3R3YtR-nJ","timestamp":1747044135337},{"file_id":"1ibkyfzuLCfcW4mnCpALwUdD5RJ_ljhvT","timestamp":1733449681113}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## 작업형1"],"metadata":{"id":"ImS-bayEojdA"}},{"cell_type":"markdown","source":["### 문제1. 결측치가 있는 행을 제거한 후, 학생이 가장 많이 수강한 과목(id_assessment)을 찾고, 해당 과목 점수(score)를 표준화(스탠다스 스케일) 한 뒤에 표준화된 가장 큰 값을 구하시오. (반올림하여 소수 셋째자리까지 계산)"],"metadata":{"id":"JO-2zLFZsse1"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"QfWBB-yjCuX8"},"outputs":[],"source":["import pandas as pd\n","df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/refs/heads/main/p4/7_1/student_assessment.csv\")\n","\n","#실패"]},{"cell_type":"code","source":["#내가 풀다 실패한 것\n","# print(df.isnull().sum())\n","# df = df.dropna()\n","# print(df.isnull().sum())\n","\n","df.head()\n","df = df.sort_values('id_assessment', ascending=False)\n","# df_score = df.pop('score')\n","\n","\n","df_test = df['id_assessment'] == 133\n","\n","df\n","\n","\n","# from sklearn.preprocessing import StandardScaler\n","# sc = StandardScaler()\n","\n"],"metadata":{"id":"MIff7D_s_vIo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#해설\n","\n","#1) 결측치 제거\n","print(df.isnull().sum())\n","df = df.dropna()\n","print(df.isnull().sum())\n","\n","#2) 가장 많이 수강한 과목 필터링 (value_counts쓰면 가장큰 순서대로 해줌)\n","id = df['id_assessment'].value_counts().idxmax()\n","cond = df['id_assessment'] == id\n","df = df[cond]\n","#3) 과목점수 스탠다스 스케일 (변경된 값만 필요하기 떄문에 fit학습하고 transform변경까지 가능)\n","#근데 핏 트랜스폼 할때 score값이 시리즈로 되어있음 -> 시리즈로 되면 학습이 안되어서 -> 데이터 프레임으로 만들어줘야함 -> [[]] 이렇게 두번 감싸주면 데이터 프레임이 됨!\n","#우리 2과목에서 cols안에 []로 넣어줬는데 이걸 cols로 넣었으니 이후 작업시 [cols]로 넣으면 사실은 [[cols]]이렇게 된거였다는거임 즉) 일반적인거는 [[]] 두번해서 넣어주면 데이터 프레임으로 됨\n","from sklearn.preprocessing import StandardScaler\n","scaler = StandardScaler()\n","df['score'] = scaler.fit_transform(df[['score']])\n","\n","#4) 가장 큰값\n","print(round(df['score'].max(),3))"],"metadata":{"id":"y-GEFOBV_vK9","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1733468665058,"user_tz":-540,"elapsed":383,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"2f1ab5e8-07b9-4d45-e68f-a89004a10b39"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["id_assessment        0\n","student_id           0\n","study_period_days    0\n","score                0\n","dtype: int64\n","id_assessment        0\n","student_id           0\n","study_period_days    0\n","score                0\n","dtype: int64\n","2.183\n"]}]},{"cell_type":"markdown","source":["### 문제2. DE1~DE77컬럼 중 주가지수의 종가 \"close\"와 가장 상관관계가 높은 변수를 찾아, 해당 변수의 평균값을 구하시오. (반올림하여 소수 넷째자리까지 계산)"],"metadata":{"id":"sHC4blpRswAJ"}},{"cell_type":"code","source":["import pandas as pd\n","df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/refs/heads/main/p4/7_1/stock_market.csv\")\n","#실패"],"metadata":{"id":"usqyPcI4J0eL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#상관관계가 양의상관관계일수도 있고 음의 상관관계일 수 도 있음\n","\n","\n","#1) close 와의 상관관계(절대값) (절대 값하는 이유는 양수 음수 다있어서 동일한 조건에서 보기위함임)\n","df_corr = df.corr()['close'].abs()\n","\n","#2)상관관계가 높은 변수명\n","col = df_corr.loc['DE1':'DE77'].idxmax()\n","\n","\n","#3) #2)에서 구한 변수명의 평균 값\n","print(round(df[col].mean(),4))"],"metadata":{"id":"Q9bGZbtBI262","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1733468944803,"user_tz":-540,"elapsed":327,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"bacfc458-08e2-4ab7-eca3-dd65460066ec"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["-0.0004\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"LvtRP4CoI29d","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1733460440644,"user_tz":-540,"elapsed":297,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"f98a7b00-383f-495e-f718-0d20f562eef6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["222.32045121104144"]},"metadata":{},"execution_count":30}]},{"cell_type":"markdown","source":["### 문제3. IQR을 이용해 이산화탄소(CO2) 이상치 수를 찾으시오\n","\n","- Q1 (제 1사분위수): 하위 25% 값\n","- Q3 (제 3사분위수): 상위 25% 값\n","- IQR (사분위수 범위): IQR = Q3 - Q1\n","\n","- lower (하한선): Q1 - 1.5 * IQR, 이 값보다 작은 데이터는 이상치로 간주\n","- upper (상한선): Q3 + 1.5 * IQR, 이 값보다 큰 데이터는 이상치로 간주\n","\n"],"metadata":{"id":"E9QDz8l-sy4D"}},{"cell_type":"code","source":["import pandas as pd\n","df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/refs/heads/main/p4/7_1/air_quality.csv\")\n"],"metadata":{"id":"LipHWwikUBL-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"id":"xorML0mi73OK","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1733460497710,"user_tz":-540,"elapsed":341,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"4eefee97-1fa1-493a-d688-131f9fba0656"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  Date        CO         CO2         O2\n","0  2024-01-01 00:00:00  0.549671  383.037632  21.248286\n","1  2024-01-01 01:00:00  0.486174  392.362513  21.183324\n","2  2024-01-01 02:00:00  0.564769  385.065473  19.963480\n","3  2024-01-01 03:00:00  0.652303  402.760451  21.479584\n","4  2024-01-01 04:00:00  0.476585  429.929463  19.409917"],"text/html":["\n","  <div id=\"df-619384ea-6472-49aa-8775-b9e3cc332428\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>CO</th>\n","      <th>CO2</th>\n","      <th>O2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2024-01-01 00:00:00</td>\n","      <td>0.549671</td>\n","      <td>383.037632</td>\n","      <td>21.248286</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2024-01-01 01:00:00</td>\n","      <td>0.486174</td>\n","      <td>392.362513</td>\n","      <td>21.183324</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2024-01-01 02:00:00</td>\n","      <td>0.564769</td>\n","      <td>385.065473</td>\n","      <td>19.963480</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2024-01-01 03:00:00</td>\n","      <td>0.652303</td>\n","      <td>402.760451</td>\n","      <td>21.479584</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2024-01-01 04:00:00</td>\n","      <td>0.476585</td>\n","      <td>429.929463</td>\n","      <td>19.409917</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-619384ea-6472-49aa-8775-b9e3cc332428')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-619384ea-6472-49aa-8775-b9e3cc332428 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-619384ea-6472-49aa-8775-b9e3cc332428');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b1837ed5-5553-45d1-9897-31654e8ab4cc\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b1837ed5-5553-45d1-9897-31654e8ab4cc')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b1837ed5-5553-45d1-9897-31654e8ab4cc button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 10000,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 10000,\n        \"samples\": [\n          \"2024-09-17 12:00:00\",\n          \"2024-07-14 04:00:00\",\n          \"2024-03-13 03:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.10034623805034015,\n        \"min\": 0.1077599748381657,\n        \"max\": 0.8926237706436326,\n        \"num_unique_values\": 10000,\n        \"samples\": [\n          0.76378817522602,\n          0.3962933926430004,\n          0.4650683203881802\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CO2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 40.82507751119988,\n        \"min\": 303.59061676898506,\n        \"max\": 784.592513964733,\n        \"num_unique_values\": 10000,\n        \"samples\": [\n          406.1822499893563,\n          381.3194541944879,\n          461.1442392278421\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"O2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9914181619258576,\n        \"min\": 17.244913484895893,\n        \"max\": 24.591624501197803,\n        \"num_unique_values\": 10000,\n        \"samples\": [\n          22.453131203539357,\n          21.989321356628157,\n          22.61607594639852\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["#내가 한 싶패 코드\n","# 실패 이유 : lower와 upper를 이상하게 구함 저 lower, upper값이 < 이거 뒤, > 이거 앞의 값인데 두번을 하니 나올 수 가 없음\n","            # 그리고 cond1과 cond2 구할 떄 | 이걸 썻어야함\n","\n","Q1 = df['CO2'].quantile(.25)\n","Q3 = df['CO2'].quantile(.75)\n","IQR = Q3- Q1\n","lower = df['CO2'] < Q1 - (1.5*IQR)\n","upper = df['CO2'] > Q3 + (1.5*IQR)\n","\n","# cond1 = len(df['CO2'] < lower)\n","# cond2 = len(df['CO2'] > upper)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YcB5UVUoTCxx","executionInfo":{"status":"ok","timestamp":1733461081251,"user_tz":-540,"elapsed":368,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"deca93c8-5a0f-4c2a-add0-607201c8b6e9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["34.92822611304376\n"]}]},{"cell_type":"code","source":["# 해설\n","\n","#1) IQR 계산\n","Q1 = df['CO2'].quantile(.25)\n","Q3 = df['CO2'].quantile(.75)\n","IQR = Q3- Q1\n","\n","#2) 상한 및 하한 계산\n","upper = Q3 + 1.5*IQR\n","lower = Q1 - 1.5*IQR\n","print(upper,lower)\n","\n","#3) 이상치\n","cond1 = df['CO2'] < lower\n","cond2 = df['CO2'] > upper\n","outliers = df[cond1 | cond2]\n","\n","#4) 이상치 수\n","print(len(outliers))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"byL0QtlBzb0C","executionInfo":{"status":"ok","timestamp":1733469324534,"user_tz":-540,"elapsed":309,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"d89d4e22-a584-42d5-fa53-c08909e9847b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["471.17077250802515 331.4578680558501\n","304\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"oUBs5XxXTa1b"},"execution_count":null,"outputs":[]}]}