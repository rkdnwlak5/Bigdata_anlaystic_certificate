{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1frn5NUlzxsT7VrWlwR6i8gI_KP0xwZdk","timestamp":1732236996713},{"file_id":"1MPGnBHHv2u6aQypHiwTInOfgO0kHxZS7","timestamp":1731656949138},{"file_id":"1zBamhJ3ZSpiln-5bDMm5US5Dk27zB3Zj","timestamp":1730713143358}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import pandas as pd\n","import requests\n","import time\n","\n","# Google Maps Geocoding API key (구글 클라우드에서 발급받은 API 키 사용)\n","API_KEY = 'YOUR_GOOGLE_MAPS_API_KEY'\n","\n","# 엑셀 파일 경로\n","excel_file_path = 'addresses.xlsx'\n","\n","# 엑셀 파일에서 주소 열 읽기\n","df = pd.read_excel(excel_file_path)\n","\n","# 위도와 경도 컬럼을 추가\n","df['Latitude'] = None\n","df['Longitude'] = None\n","\n","# 주소가 저장된 컬럼 이름 (예시: 'Address')\n","address_column = 'Address'\n","\n","# 구글 지도 API 호출 함수\n","def get_lat_lon(address):\n","    # Geocoding API의 URL\n","    url = f'https://maps.googleapis.com/maps/api/geocode/json?address={address}&key={API_KEY}'\n","\n","    try:\n","        # API 요청\n","        response = requests.get(url)\n","        data = response.json()\n","\n","        if data['status'] == 'OK':\n","            # 위도와 경도 추출\n","            lat = data['results'][0]['geometry']['location']['lat']\n","            lon = data['results'][0]['geometry']['location']['lng']\n","            return lat, lon\n","        else:\n","            print(f\"주소 '{address}'에 대한 정보가 없습니다.\")\n","            return None, None\n","    except Exception as e:\n","        print(f\"오류 발생: {e}\")\n","        return None, None\n","\n","# 각 주소에 대해 위도와 경도를 추출\n","for index, row in df.iterrows():\n","    address = row[address_column]\n","    lat, lon = get_lat_lon(address)\n","\n","    # 위도와 경도를 데이터프레임에 추가\n","    df.at[index, 'Latitude'] = lat\n","    df.at[index, 'Longitude'] = lon\n","\n","    # 요청이 너무 많이 들어가지 않도록 1초 대기 (API 제한에 맞추기)\n","    time.sleep(1)\n","\n","# 결과를 새로운 엑셀 파일로 저장\n","df.to_excel('addresses_with_lat_lon.xlsx', index=False)\n","\n","print(\"작업이 완료되었습니다.\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":375},"id":"DqppCpN7uTZe","executionInfo":{"status":"error","timestamp":1744590771858,"user_tz":-540,"elapsed":75,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"4fc12f1d-a6db-42c0-a6c5-f05a4fda7354"},"execution_count":2,"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"[Errno 2] No such file or directory: 'addresses.xlsx'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-2-49ca4a63c0fa>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0;31m# 엑셀 파일에서 주소 열 읽기\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 12\u001b[0;31m \u001b[0mdf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_excel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mexcel_file_path\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     13\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     14\u001b[0m \u001b[0;31m# 위도와 경도 컬럼을 추가\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/io/excel/_base.py\u001b[0m in \u001b[0;36mread_excel\u001b[0;34m(io, sheet_name, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skiprows, nrows, na_values, keep_default_na, na_filter, verbose, parse_dates, date_parser, date_format, thousands, decimal, comment, skipfooter, storage_options, dtype_backend, engine_kwargs)\u001b[0m\n\u001b[1;32m    493\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mio\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mExcelFile\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    494\u001b[0m         \u001b[0mshould_close\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 495\u001b[0;31m         io = ExcelFile(\n\u001b[0m\u001b[1;32m    496\u001b[0m             \u001b[0mio\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    497\u001b[0m             \u001b[0mstorage_options\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mstorage_options\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/io/excel/_base.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, path_or_buffer, engine, storage_options, engine_kwargs)\u001b[0m\n\u001b[1;32m   1548\u001b[0m                 \u001b[0mext\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"xls\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1549\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1550\u001b[0;31m                 ext = inspect_excel_format(\n\u001b[0m\u001b[1;32m   1551\u001b[0m                     \u001b[0mcontent_or_path\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstorage_options\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mstorage_options\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1552\u001b[0m                 )\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/io/excel/_base.py\u001b[0m in \u001b[0;36minspect_excel_format\u001b[0;34m(content_or_path, storage_options)\u001b[0m\n\u001b[1;32m   1400\u001b[0m         \u001b[0mcontent_or_path\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mBytesIO\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcontent_or_path\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1401\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1402\u001b[0;31m     with get_handle(\n\u001b[0m\u001b[1;32m   1403\u001b[0m         \u001b[0mcontent_or_path\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"rb\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstorage_options\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mstorage_options\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mis_text\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1404\u001b[0m     ) as handle:\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/io/common.py\u001b[0m in \u001b[0;36mget_handle\u001b[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[1;32m    880\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    881\u001b[0m             \u001b[0;31m# Binary mode\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 882\u001b[0;31m             \u001b[0mhandle\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mhandle\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    883\u001b[0m         \u001b[0mhandles\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mhandle\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    884\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'addresses.xlsx'"]}]},{"cell_type":"code","source":[],"metadata":{"id":"lrUzZE6iHxeA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"2W_6mvwbiNGO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["i"],"metadata":{"id":"GPqDrDgidgaf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731905507242,"user_tz":-540,"elapsed":6118,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"fdeddf26-f66a-43ce-c6cc-5559708b65b7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1월 목표 또는 1월 청구실적 열을 찾을 수 없습니다.\n","작업이 완료되었습니다. 결과가 '/content/완성형 파일.xlsx'에 저장되었습니다.\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"wyTq5KJpmL57"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"0Y0kmJlYmL3s"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"TTd8AMhGmLw2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"AMKT0qNnmLul"},"execution_count":null,"outputs":[]}]}