{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPrbKS12J8tRkVmH4xAq+w2"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["작업 1유형"],"metadata":{"id":"a_Xrdz3EVu2n"}},{"cell_type":"code","execution_count":62,"metadata":{"id":"3vVrdkEIVqPE","executionInfo":{"status":"ok","timestamp":1750156471418,"user_tz":-540,"elapsed":181,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}}},"outputs":[],"source":["import pandas as pd\n","df = pd.read_csv('https://raw.githubusercontent.com/Datamanim/datarepo/main/stroke_/train.csv')\n","df['age'] = df['age'].replace('*82',82)\n"]},{"cell_type":"code","source":["import pandas as pd\n","df = pd.read_csv('https://raw.githubusercontent.com/Datamanim/datarepo/main/stroke_/train.csv')\n","df['age'] = df['age'].replace('*82',82)\n","df['age'] = df['age'].astype(int)"],"metadata":{"id":"RwHDOCRldF_M","executionInfo":{"status":"ok","timestamp":1750158133316,"user_tz":-540,"elapsed":188,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}}},"execution_count":99,"outputs":[]},{"cell_type":"markdown","source":["1. 성별이 Male인 환자들의 age의 평균값은 ?"],"metadata":{"id":"fBg-aAn-WBME"}},{"cell_type":"code","source":["# df['age'] = df['age'].astype(int)\n","df['age'] = df['age'].replace('*82',82)\n","df['age'] = df['age'].astype(int)\n"],"metadata":{"id":"5EYxMi4iW4pZ","executionInfo":{"status":"ok","timestamp":1750154968772,"user_tz":-540,"elapsed":3,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["#age안에 *82라는 이상치가있어서 이를 replace로 82로 바꿔준 뒤 평균\n","df['age'] = df['age'].replace('*82',82)\n","df['age'] = df['age'].astype(int)\n","cond = df[df['gender'] == 'Male']\n","cond['age'].mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1k1Eqfj5VuPX","executionInfo":{"status":"ok","timestamp":1750155742063,"user_tz":-540,"elapsed":10,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"5bbefd2f-0988-458c-bba0-e6bb42af179d"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.float64(44.68623481781376)"]},"metadata":{},"execution_count":37}]},{"cell_type":"markdown","source":["2.bmi컬럼의 결측치를 bmi컬럼의 결측치를 제외한 나머지 값들의 중앙값으로 채웠을 경우 bmi 컬럼의 평균을 소숫점 이하 3자리 까지 구하여라\n"],"metadata":{"id":"PS2UgXUzWYcv"}},{"cell_type":"code","source":["cond =df.dropna(subset='bmi')\n","cond.isnull().sum()\n","md = cond['bmi'].median()\n","md\n","\n","df =df.fillna(md)\n","df.isnull().sum()\n","result = df['bmi'].mean()\n","print(round(result,3))\n","\n","#정답: 29.166"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bYrppE_1VuNQ","executionInfo":{"status":"ok","timestamp":1750155670270,"user_tz":-540,"elapsed":24,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"66f688b9-2004-453d-e0ad-529c11f5f489"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["29.166\n"]}]},{"cell_type":"markdown","source":["3.bmi컬럼의 각 결측치들을 직전의 행의 bmi값으로 채웠을 경우 bmi 컬럼의 평균을 소숫점 이하 3자리 까지 구하여라"],"metadata":{"id":"c_PeKL32aH7P"}},{"cell_type":"code","source":["import pandas as pd\n","df = pd.read_csv('https://raw.githubusercontent.com/Datamanim/datarepo/main/stroke_/train.csv')\n","\n","#직전행으로 결측치 채우기 method =  ffill,bfill\n","df['bmi'] = df['bmi'].fillna(method = 'ffill')\n","df.isnull().sum()\n","\n","print(round(df['bmi'].mean(),3))\n","\n","#정답 : 29.188\n","\n","\n","#직전행\n","# df['bmi'] = df['bmi'].fillna(method= 'ffill')\n","#직후행\n","# df['bmi'] = df['bmi'].fillna(method= 'bfill')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AbE6KypJVuLV","executionInfo":{"status":"ok","timestamp":1750156079473,"user_tz":-540,"elapsed":214,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"1c6f03c5-1a6f-4634-e76a-5ccf643cee2a"},"execution_count":48,"outputs":[{"output_type":"stream","name":"stdout","text":["29.188\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-48-1305257047>:5: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.\n","  df['bmi'] = df['bmi'].fillna(method = 'ffill')\n"]}]},{"cell_type":"markdown","source":["4.bmi컬럼의 각 결측치들을 결측치를 가진 환자 나이대(10단위)의 평균 bmi 값으로 대체한 후 대체된 bmi 컬럼의 평균을 소숫점 이하 3자리 까지 구하여라"],"metadata":{"id":"Pb4w1hCBb1aL"}},{"cell_type":"code","source":["import pandas as pd\n","df = pd.read_csv('https://raw.githubusercontent.com/Datamanim/datarepo/main/stroke_/train.csv')\n","df['age'] = df['age'].replace('*82',82)\n","df['age'] = df['age'].astype(int)\n","\n","#bmi 결측치 결측치 나이대의 평균 bmi로 대체\n","\n","#1 나이를 세대 별로 나누기\n","df['age_gen'] = (df['age'] //10) * 10\n","\n","# 2) 각 나이대별 평균 bmi를 계산한 Series 생성\n","cond = df.groupby('age_gen')['bmi'].mean()\n","cond\n","\n","#3) bmi 결측값만 나이대 평균으로 대체\n","df = df.fillna(df['age_gen'].map(cond))\n","df\n","#대체된 bmi 컬럼의 평균 소수점 이하 3자리\n","print(round(df['bmi'].mean(),3))\n","\n","#정답 29.198"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"l3Zj8D7Xb316","executionInfo":{"status":"ok","timestamp":1750158169674,"user_tz":-540,"elapsed":59,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"4c2b78ae-cc51-49c2-e6f0-7db094ebb372"},"execution_count":102,"outputs":[{"output_type":"stream","name":"stdout","text":["29.198\n"]}]},{"cell_type":"markdown","source":["5.avg_glucose_level 컬럼의 값이 200이상인 데이터를 모두 199로 변경하고 stroke값이 1인 데이터의 avg_glucose_level값의 평균을 소수점이하 3자리 까지 구하여라"],"metadata":{"id":"ut9PlQgUgqNY"}},{"cell_type":"code","source":["\n","#1. 컬럼값이 200이상인 데이터 199로 변경\n","#loc로 각 행과 열에서 avg_glucose_level 행만 찾아서 나타내면 True와 False 형식으로 나오는데 여기서 True로 나오는 애들을 199로 바꾸라는 코드\n","#이럴땐 loc를 써야함\n","df.loc[df['avg_glucose_level'] >= 200, 'avg_glucose_level'] = 199   #199로 할당하는거라 ==이 아니라 = 임\n","\n","#2 stroke 값이 1인 데이터의  avg_glucose_level값의 평균을 소수점이하 3자리\n","cond = df[df['stroke'] ==1]\n","result = cond['avg_glucose_level'].mean()\n","print(round(result,3))\n","\n","#정답 125.188"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"C4XCid9tgtKo","executionInfo":{"status":"ok","timestamp":1750158227397,"user_tz":-540,"elapsed":10,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"a15af051-24c4-4426-d202-e96234de92e4"},"execution_count":104,"outputs":[{"output_type":"stream","name":"stdout","text":["125.188\n"]}]},{"cell_type":"markdown","source":["작업형1유형 다른 데이터!\n","\n","데이터 설명 : 포켓몬 정보\n"],"metadata":{"id":"QrIOap-ukNe_"}},{"cell_type":"code","source":["import pandas as pd\n","df = pd.read_csv('https://raw.githubusercontent.com/Datamanim/datarepo/main/pok/Pokemon.csv')\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"edxbiCPokTKC","executionInfo":{"status":"ok","timestamp":1750158380026,"user_tz":-540,"elapsed":262,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"d0139535-b049-4a98-c40b-282dd1d11efa"},"execution_count":105,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   #                   Name Type 1  Type 2  Total  HP  Attack  Defense  \\\n","0  1              Bulbasaur  Grass  Poison    318  45      49       49   \n","1  2                Ivysaur  Grass  Poison    405  60      62       63   \n","2  3               Venusaur  Grass  Poison    525  80      82       83   \n","3  3  VenusaurMega Venusaur  Grass  Poison    625  80     100      123   \n","4  4             Charmander   Fire     NaN    309  39      52       43   \n","\n","   Sp. Atk  Sp. Def  Speed  Generation  Legendary  \n","0       65       65     45           1      False  \n","1       80       80     60           1      False  \n","2      100      100     80           1      False  \n","3      122      120     80           1      False  \n","4       60       50     65           1      False  "],"text/html":["\n","  <div id=\"df-336a2ede-f966-40e6-9969-0f70cfdcea56\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>#</th>\n","      <th>Name</th>\n","      <th>Type 1</th>\n","      <th>Type 2</th>\n","      <th>Total</th>\n","      <th>HP</th>\n","      <th>Attack</th>\n","      <th>Defense</th>\n","      <th>Sp. Atk</th>\n","      <th>Sp. Def</th>\n","      <th>Speed</th>\n","      <th>Generation</th>\n","      <th>Legendary</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>Bulbasaur</td>\n","      <td>Grass</td>\n","      <td>Poison</td>\n","      <td>318</td>\n","      <td>45</td>\n","      <td>49</td>\n","      <td>49</td>\n","      <td>65</td>\n","      <td>65</td>\n","      <td>45</td>\n","      <td>1</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>Ivysaur</td>\n","      <td>Grass</td>\n","      <td>Poison</td>\n","      <td>405</td>\n","      <td>60</td>\n","      <td>62</td>\n","      <td>63</td>\n","      <td>80</td>\n","      <td>80</td>\n","      <td>60</td>\n","      <td>1</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>Venusaur</td>\n","      <td>Grass</td>\n","      <td>Poison</td>\n","      <td>525</td>\n","      <td>80</td>\n","      <td>82</td>\n","      <td>83</td>\n","      <td>100</td>\n","      <td>100</td>\n","      <td>80</td>\n","      <td>1</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>VenusaurMega Venusaur</td>\n","      <td>Grass</td>\n","      <td>Poison</td>\n","      <td>625</td>\n","      <td>80</td>\n","      <td>100</td>\n","      <td>123</td>\n","      <td>122</td>\n","      <td>120</td>\n","      <td>80</td>\n","      <td>1</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>Charmander</td>\n","      <td>Fire</td>\n","      <td>NaN</td>\n","      <td>309</td>\n","      <td>39</td>\n","      <td>52</td>\n","      <td>43</td>\n","      <td>60</td>\n","      <td>50</td>\n","      <td>65</td>\n","      <td>1</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-336a2ede-f966-40e6-9969-0f70cfdcea56')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-336a2ede-f966-40e6-9969-0f70cfdcea56 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-336a2ede-f966-40e6-9969-0f70cfdcea56');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-d3335be7-e85b-42db-8944-1232c15f55f8\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d3335be7-e85b-42db-8944-1232c15f55f8')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-d3335be7-e85b-42db-8944-1232c15f55f8 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 800,\n  \"fields\": [\n    {\n      \"column\": \"#\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 208,\n        \"min\": 1,\n        \"max\": 721,\n        \"num_unique_values\": 721,\n        \"samples\": [\n          260,\n          659,\n          78\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 800,\n        \"samples\": [\n          \"Hydreigon\",\n          \"Beheeyem\",\n          \"Growlithe\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type 1\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 18,\n        \"samples\": [\n          \"Grass\",\n          \"Fire\",\n          \"Fairy\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type 2\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 18,\n        \"samples\": [\n          \"Poison\",\n          \"Flying\",\n          \"Steel\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 119,\n        \"min\": 180,\n        \"max\": 780,\n        \"num_unique_values\": 200,\n        \"samples\": [\n          700,\n          349,\n          505\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25,\n        \"min\": 1,\n        \"max\": 255,\n        \"num_unique_values\": 94,\n        \"samples\": [\n          106,\n          81,\n          170\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Attack\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 32,\n        \"min\": 5,\n        \"max\": 190,\n        \"num_unique_values\": 111,\n        \"samples\": [\n          79,\n          63,\n          52\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Defense\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 31,\n        \"min\": 5,\n        \"max\": 230,\n        \"num_unique_values\": 103,\n        \"samples\": [\n          20,\n          88,\n          23\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sp. Atk\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 32,\n        \"min\": 10,\n        \"max\": 194,\n        \"num_unique_values\": 105,\n        \"samples\": [\n          58,\n          150,\n          160\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sp. Def\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 27,\n        \"min\": 20,\n        \"max\": 230,\n        \"num_unique_values\": 92,\n        \"samples\": [\n          154,\n          45,\n          44\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Speed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29,\n        \"min\": 5,\n        \"max\": 180,\n        \"num_unique_values\": 108,\n        \"samples\": [\n          113,\n          50,\n          100\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Generation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 6,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1,\n          2,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Legendary\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":105}]},{"cell_type":"markdown","source":["6.Attack컬럼의 값을 기준으로 내림차순정렬 했을때 상위 400위까지 포켓몬들과 401~800위까지의 포켓몬들에서 전설포켓몬(Legendary컬럼)의 숫자 차이는?"],"metadata":{"id":"o7cGIt8xkUj_"}},{"cell_type":"code","source":["cond1 = df.sort_values('Attack', ascending= False).iloc[:400]\n","cond2 = df.sort_values('Attack', ascending= False).iloc[400:]\n","\n","result1 = cond1['Legendary'].sum()\n","result2 = cond2['Legendary'].sum()\n","print(result1 - result2)\n","\n","#정답 : 55"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UeKWM_AskXOO","executionInfo":{"status":"ok","timestamp":1750158484103,"user_tz":-540,"elapsed":8,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"ae77fe7f-32bd-416d-f74a-2435930afe7e"},"execution_count":109,"outputs":[{"output_type":"stream","name":"stdout","text":["55\n"]}]},{"cell_type":"markdown","source":["7.Type 1 컬럼의 종류에 따른 Total 컬럼의 평균값을 내림차순 정렬했을때 상위 3번째 Type 1은 무엇인가?"],"metadata":{"id":"2vsjXVKkk6yL"}},{"cell_type":"code","source":["df.groupby('Type 1')['Total'].mean().sort_values(ascending=False).index[2]\n","\n","#정답: Flying"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"AqTONMX_k2un","executionInfo":{"status":"ok","timestamp":1750158611704,"user_tz":-540,"elapsed":51,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"5df51ce4-9852-4672-9047-e4d97488fac8"},"execution_count":115,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Flying'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":115}]},{"cell_type":"markdown","source":["8.결측치가 존재하는 행을 모두 지운 후 처음부터 순서대로 60% 데이터를 추출하여 Defense컬럼의 1분위수를 구하여라"],"metadata":{"id":"zH8r6uCclTEF"}},{"cell_type":"code","source":["import pandas as pd\n","df = pd.read_csv('https://raw.githubusercontent.com/Datamanim/datarepo/main/pok/Pokemon.csv')\n","df.isnull().sum()\n","cond = df.dropna()\n","\n","# 2) 60% 개수 계산 (반드시 int로 변환)\n","# n = int(len(cond) * 0.6)\n","\n","result = cond.iloc[:int(len(cond)*0.6)]\n","\n","q1 = result['Defense'].quantile(0.25)\n","q1\n","# #정답 : 50\n","\n","# df.shape\n","# 800개\n","# print(800*0.6)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0Yz7_tYQlUW9","executionInfo":{"status":"ok","timestamp":1750159114883,"user_tz":-540,"elapsed":51,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"a6357329-37e0-4bd4-e34d-f8cd89549af5"},"execution_count":132,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.float64(50.0)"]},"metadata":{},"execution_count":132}]},{"cell_type":"markdown","source":["9.Type 1 컬럼의 속성이 Fire인 포켓몬들의 Attack의 평균이상인 Water속성의 포켓몬 수를 구하여라"],"metadata":{"id":"wY1dAQ_3lS89"}},{"cell_type":"code","source":["cond = df[df['Type 1'] == 'Fire']['Attack'].mean()\n","cond\n","result = df[df['Type 1'] == 'Water']['Attack'] >= cond\n","result.sum()\n","\n","#정답 : 37"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hqbNi4nFnirZ","executionInfo":{"status":"ok","timestamp":1750159400026,"user_tz":-540,"elapsed":35,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"c9f05690-3fa6-4b3f-b8a1-b85a51758824"},"execution_count":139,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.int64(37)"]},"metadata":{},"execution_count":139}]},{"cell_type":"code","source":[],"metadata":{"id":"AzDQCa5lnjGF"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["10.각 세대 중(Generation 컬럼)의 Speed와 Defense 컬럼의 차이(절댓값)이 가장 큰 세대는?"],"metadata":{"id":"kHjsUpswgqLJ"}},{"cell_type":"code","source":["df['차이'] = abs(df['Speed'] - df['Defense'])\n","\n","#각 세대별로 차이가 가장 큰 애들을 하나씩 보여줘라\n","df.groupby('Generation')['차이'].max().sort_values(ascending= False)\n","#2세대"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":303},"id":"wTuLMlowoW2l","executionInfo":{"status":"ok","timestamp":1750159904540,"user_tz":-540,"elapsed":16,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"80c6bbf6-2167-4a81-d2b1-b0d720c83186"},"execution_count":156,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Generation\n","2    225\n","3    180\n","6    156\n","1    150\n","4    138\n","5    115\n","Name: 차이, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>차이</th>\n","    </tr>\n","    <tr>\n","      <th>Generation</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>225</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>180</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>156</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>150</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>138</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>115</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":156}]},{"cell_type":"markdown","source":["2유형"],"metadata":{"id":"JvzzZ-6kqSHz"}},{"cell_type":"markdown","source":["데이터 설명 : 뇌졸증 발생여부 예측\n","y = stroke\n","분류모델\n","roc_auc_score\n","pre_proba로 제출"],"metadata":{"id":"-2pDhKFyqRYE"}},{"cell_type":"code","source":["import pandas as pd\n","train= pd.read_csv('https://raw.githubusercontent.com/Datamanim/datarepo/main/stroke_/train.csv')\n","test= pd.read_csv('https://raw.githubusercontent.com/Datamanim/datarepo/main/stroke_/test.csv')\n","\n","display(train.head())\n","display(test.head())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":395},"id":"Yb14-12soWyF","executionInfo":{"status":"ok","timestamp":1750162373210,"user_tz":-540,"elapsed":475,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"57c363bf-c05f-45fa-8616-e209c1f1d0b7"},"execution_count":193,"outputs":[{"output_type":"display_data","data":{"text/plain":["      id  gender age  hypertension  heart_disease ever_married work_type  \\\n","0   1192  Female  31             0              0           No  Govt_job   \n","1     77  Female  13             0              0           No  children   \n","2  59200    Male  18             0              0           No   Private   \n","3  24905  Female  65             0              0          Yes   Private   \n","4  24257    Male   4             0              0           No  children   \n","\n","  Residence_type  avg_glucose_level   bmi   smoking_status  stroke  \n","0          Rural              70.66  27.2     never smoked       0  \n","1          Rural              85.81  18.6          Unknown       0  \n","2          Urban              60.56  33.0     never smoked       0  \n","3          Urban             205.77  46.0  formerly smoked       1  \n","4          Rural              90.42  16.2          Unknown       0  "],"text/html":["\n","  <div id=\"df-c07d6f62-c638-4591-9568-51bb5959b5e6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>gender</th>\n","      <th>age</th>\n","      <th>hypertension</th>\n","      <th>heart_disease</th>\n","      <th>ever_married</th>\n","      <th>work_type</th>\n","      <th>Residence_type</th>\n","      <th>avg_glucose_level</th>\n","      <th>bmi</th>\n","      <th>smoking_status</th>\n","      <th>stroke</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1192</td>\n","      <td>Female</td>\n","      <td>31</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>Govt_job</td>\n","      <td>Rural</td>\n","      <td>70.66</td>\n","      <td>27.2</td>\n","      <td>never smoked</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>77</td>\n","      <td>Female</td>\n","      <td>13</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>children</td>\n","      <td>Rural</td>\n","      <td>85.81</td>\n","      <td>18.6</td>\n","      <td>Unknown</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>59200</td>\n","      <td>Male</td>\n","      <td>18</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>Private</td>\n","      <td>Urban</td>\n","      <td>60.56</td>\n","      <td>33.0</td>\n","      <td>never smoked</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>24905</td>\n","      <td>Female</td>\n","      <td>65</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Private</td>\n","      <td>Urban</td>\n","      <td>205.77</td>\n","      <td>46.0</td>\n","      <td>formerly smoked</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>24257</td>\n","      <td>Male</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>children</td>\n","      <td>Rural</td>\n","      <td>90.42</td>\n","      <td>16.2</td>\n","      <td>Unknown</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c07d6f62-c638-4591-9568-51bb5959b5e6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c07d6f62-c638-4591-9568-51bb5959b5e6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c07d6f62-c638-4591-9568-51bb5959b5e6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-cb26e101-d8c7-4f7a-8131-70b6731229a9\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cb26e101-d8c7-4f7a-8131-70b6731229a9')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-cb26e101-d8c7-4f7a-8131-70b6731229a9 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(test\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24036,\n        \"min\": 77,\n        \"max\": 59200,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          77,\n          24257,\n          59200\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Male\",\n          \"Female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"13\",\n          \"4\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hypertension\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"heart_disease\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ever_married\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"work_type\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Govt_job\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Residence_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Urban\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"avg_glucose_level\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 58.86811726223288,\n        \"min\": 60.56,\n        \"max\": 205.77,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          85.81\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"bmi\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.010828447696687,\n        \"min\": 16.2,\n        \"max\": 46.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          18.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"smoking_status\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"never smoked\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"stroke\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["      id  gender  age  hypertension  heart_disease ever_married  \\\n","0  47472  Female   58             0              0          Yes   \n","1  36841    Male   78             1              0          Yes   \n","2   3135  Female   73             0              0           No   \n","3  65218    Male    2             0              0           No   \n","4   1847  Female   20             0              0           No   \n","\n","       work_type Residence_type  avg_glucose_level   bmi   smoking_status  \n","0        Private          Urban             107.26  38.6  formerly smoked  \n","1  Self-employed          Rural              56.11  25.5  formerly smoked  \n","2  Self-employed          Rural              69.35   NaN     never smoked  \n","3       children          Rural             109.10  20.0          Unknown  \n","4       Govt_job          Rural              79.53   NaN     never smoked  "],"text/html":["\n","  <div id=\"df-f3441fd8-8d7c-4d64-84d4-5e73b2bb9cd0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>gender</th>\n","      <th>age</th>\n","      <th>hypertension</th>\n","      <th>heart_disease</th>\n","      <th>ever_married</th>\n","      <th>work_type</th>\n","      <th>Residence_type</th>\n","      <th>avg_glucose_level</th>\n","      <th>bmi</th>\n","      <th>smoking_status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>47472</td>\n","      <td>Female</td>\n","      <td>58</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Private</td>\n","      <td>Urban</td>\n","      <td>107.26</td>\n","      <td>38.6</td>\n","      <td>formerly smoked</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>36841</td>\n","      <td>Male</td>\n","      <td>78</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Self-employed</td>\n","      <td>Rural</td>\n","      <td>56.11</td>\n","      <td>25.5</td>\n","      <td>formerly smoked</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3135</td>\n","      <td>Female</td>\n","      <td>73</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>Self-employed</td>\n","      <td>Rural</td>\n","      <td>69.35</td>\n","      <td>NaN</td>\n","      <td>never smoked</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>65218</td>\n","      <td>Male</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>children</td>\n","      <td>Rural</td>\n","      <td>109.10</td>\n","      <td>20.0</td>\n","      <td>Unknown</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1847</td>\n","      <td>Female</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>Govt_job</td>\n","      <td>Rural</td>\n","      <td>79.53</td>\n","      <td>NaN</td>\n","      <td>never smoked</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f3441fd8-8d7c-4d64-84d4-5e73b2bb9cd0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f3441fd8-8d7c-4d64-84d4-5e73b2bb9cd0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f3441fd8-8d7c-4d64-84d4-5e73b2bb9cd0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-5c49baad-73f3-4e0f-87a1-c21cf70fff38\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5c49baad-73f3-4e0f-87a1-c21cf70fff38')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-5c49baad-73f3-4e0f-87a1-c21cf70fff38 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(test\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 27850,\n        \"min\": 1847,\n        \"max\": 65218,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          36841,\n          1847,\n          3135\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Male\",\n          \"Female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 33,\n        \"min\": 2,\n        \"max\": 78,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          78,\n          20\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hypertension\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"heart_disease\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ever_married\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"No\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"work_type\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Self-employed\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Residence_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Rural\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"avg_glucose_level\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23.361980866356348,\n        \"min\": 56.11,\n        \"max\": 109.1,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          56.11\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"bmi\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.555277773740194,\n        \"min\": 20.0,\n        \"max\": 38.6,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          38.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"smoking_status\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"formerly smoked\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":["import pandas as pd\n","train= pd.read_csv('https://raw.githubusercontent.com/Datamanim/datarepo/main/stroke_/train.csv')\n","test= pd.read_csv('https://raw.githubusercontent.com/Datamanim/datarepo/main/stroke_/test.csv')\n","\n","#*82라는 이상이있어서 replace 해주고 밑에 정수형으로 바꿔주고\n","train['age'] = train['age'].replace('*82','82')\n","train['age'] = train['age'].astype(int)\n","#train의 gender에 성별이 3개이고 other로 되어있어 바꾸기 애매함, test에는 남녀 2개뿐임\n","\n","\n","\n","#나이대별 평균 bmi 구하기\n","# cond1 = train.groupby('age')['bmi'].mean()\n","# cond2 = test.groupby('age')['bmi'].mean()\n","# #나이대별 -> 나이대별 컬럼을 만든게 아니라 정확히 맞춤되는게 없음 그럼 칼럼을 만든다음에 또 지워서 해야함 즉) 이렇게 하지말고 그냥 지우자!!\n","# train['bmi'] = train['bmi'].fillna(train['bmi'].map(cond1))\n","# test['bmi'] = test['bmi'].fillna(test['bmi'].map(cond2))\n","\n","# train.isnull().sum()\n","\n","\n","#결측치 행 제거\n","# print(train.isnull().sum())\n","# print(test.isnull().sum())\n","train = train.dropna()\n","test= test.dropna()\n","# print(train.isnull().sum())\n","# print(test.isnull().sum())\n","\n","train.select_dtypes(include ='object').describe()\n","train.select_dtypes(exclude ='object').describe()\n","\n","#스켈링할꺼 : 'age', 'avg_glucose_level' ,'bmi\n","\n","train = train.drop('id', axis=1)\n","test_id = test.pop('id')\n","target = train.pop('stroke')\n","\n","\n","#스켈링\n","from sklearn.preprocessing import RobustScaler\n","scaler= RobustScaler()\n","col = ['age', 'avg_glucose_level' ,'bmi']\n","train[col] = scaler.fit_transform(train[col])\n","test[col] = scaler.transform(test[col])\n","\n","#인코딩\n","# train에 gender가 3개라 test에는 2개고, 그럼 man, other, woman을 0 1 2로 임의부여하면\n","# test에서는 man, woman이 0 1 이될수 있음 그래서 다르면 concat써서 학습시켜주는게 맞음\n","from sklearn.preprocessing import LabelEncoder\n","cols = train.select_dtypes(include='object').columns\n","for col in cols:\n","  le = LabelEncoder()\n","  le.fit(pd.concat([train[col],test[col]],axis=0))\n","  train[col] = le.transform(train[col])\n","  test[col] = le.transform(test[col])\n","\n","#데이터분할\n","from sklearn.model_selection import train_test_split\n","X_tr, X_val, y_tr, y_val = train_test_split(train,\n","                                            target,\n","                                            test_size =0.2,\n","                                            random_state = 25,\n","                                            stratify = target)\n","\n","\n","print(X_tr.shape, X_val.shape, y_tr.shape, y_val.shape)\n","\n","#랜포\n","from sklearn.ensemble import RandomForestClassifier\n","model = RandomForestClassifier()\n","model.fit(X_tr, y_tr)\n","pred_proba = model.predict_proba(X_val)[:,1]\n","pred_proba\n","\n","#검증\n","from sklearn.metrics import roc_auc_score\n","roc_auc = roc_auc_score(y_val, pred_proba)\n","roc_auc\n","\n","#테스트 진행\n","real_pred_proba = model.predict_proba(test)[:,1]\n","submit = pd.DataFrame({\n","                      'ID' : test_id,\n","                      'pred' : real_pred_proba\n","})\n","\n","submit.to_csv('122323.csv',index=False)\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_4wZT0PKVuHO","executionInfo":{"status":"ok","timestamp":1750164121372,"user_tz":-540,"elapsed":944,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"345eba4f-b53d-4a6c-ed57-7098b95b43d6"},"execution_count":222,"outputs":[{"output_type":"stream","name":"stdout","text":["(868, 10) (217, 10) (868,) (217,)\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"bMBW8v2gVuA4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"NXOl9HjBVt-h"},"execution_count":null,"outputs":[]}]}