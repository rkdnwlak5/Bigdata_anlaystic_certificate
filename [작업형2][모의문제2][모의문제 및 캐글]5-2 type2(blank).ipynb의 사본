{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"167o28msCtGy7D1Ce4rv3cO5OfONTmKYq","timestamp":1731970949598}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## 에어비엔비 가격?\n","- #평가는 회귀문제이기 때문에 아래것들을 쓰는 것임\n","- 평가: R-Squared, MAE, MSE, RMSE, RMSLE, MAPE\n","- target : price(가격)\n","- csv파일 생성 : 수험번호.csv (예시 아래 참조)\n","~~~\n","id,price\n","34323697,238\n","29927138,183\n","120362,234\n","~~~\n","\n"],"metadata":{"id":"k5Z7yULvzpsF"}},{"cell_type":"markdown","source":["## 데이터 불러오기"],"metadata":{"id":"1qZteLJKC6or"}},{"cell_type":"code","source":["import pandas as pd\n","\n","train = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/main/p2/ab_nyc/train.csv\")\n","test =  pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/main/p2/ab_nyc/test.csv\")\n","# train = pd.read_csv(\"train.csv\")\n","# test =  pd.read_csv(\"test.csv\")\n"],"metadata":{"id":"79P4zcpB0CHw","executionInfo":{"status":"ok","timestamp":1733979270696,"user_tz":-540,"elapsed":2665,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}}},"execution_count":1,"outputs":[]},{"cell_type":"markdown","source":["##EDA"],"metadata":{"id":"ziiQ-hrGqm5C"}},{"cell_type":"code","source":["print(train.shape, test.shape)"],"metadata":{"id":"HrbG49RDXBXh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1733979270696,"user_tz":-540,"elapsed":4,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"ae8ff094-4e94-49e0-bb76-53b649328847"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["(39116, 16) (9779, 15)\n"]}]},{"cell_type":"code","source":["train.head()"],"metadata":{"id":"Rk4hiVXHXBaD","colab":{"base_uri":"https://localhost:8080/","height":504},"executionInfo":{"status":"ok","timestamp":1733979271398,"user_tz":-540,"elapsed":704,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"56ee0673-dc7e-4265-f14b-4015e7ac40fa"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         id                                              name    host_id  \\\n","0  35742633   Luxury new 1 bed apartment in East Williamsburg  265866685   \n","1  15840089       Kid- (and Adult-) Friendly Uptown 2-Bedroom   99602138   \n","2  24495605                            Brooklyn Art Residence   75173477   \n","3  16238779  Spacious Studio Duplex in Heart of Williamsburg!   36382944   \n","4  25265496     Beautiful large 2 br appartement in Brooklyn!   22935245   \n","\n","  host_name neighbourhood_group       neighbourhood  latitude  longitude  \\\n","0     Mindy            Brooklyn            Bushwick  40.69796  -73.92915   \n","1   Yolanda           Manhattan  Washington Heights  40.83490  -73.94829   \n","2      Lara            Brooklyn            Bushwick  40.69932  -73.91191   \n","3    Joshua            Brooklyn        Williamsburg  40.71520  -73.96230   \n","4      Anne            Brooklyn  Bedford-Stuyvesant  40.69168  -73.95397   \n","\n","         room_type  minimum_nights  number_of_reviews last_review  \\\n","0  Entire home/apt              30                  0         NaN   \n","1  Entire home/apt               3                 36  2019-01-01   \n","2  Entire home/apt               3                  7  2019-05-05   \n","3  Entire home/apt              31                  2  2018-01-01   \n","4  Entire home/apt              21                  1  2018-07-14   \n","\n","   reviews_per_month  calculated_host_listings_count  availability_365  price  \n","0                NaN                               2               179    198  \n","1               1.13                               1                 5    150  \n","2               0.48                               1                 6    200  \n","3               0.06                               1                 0    230  \n","4               0.08                               1                25    145  "],"text/html":["\n","  <div id=\"df-16da519a-e430-4be4-9d9b-a695a9c1c4b1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>name</th>\n","      <th>host_id</th>\n","      <th>host_name</th>\n","      <th>neighbourhood_group</th>\n","      <th>neighbourhood</th>\n","      <th>latitude</th>\n","      <th>longitude</th>\n","      <th>room_type</th>\n","      <th>minimum_nights</th>\n","      <th>number_of_reviews</th>\n","      <th>last_review</th>\n","      <th>reviews_per_month</th>\n","      <th>calculated_host_listings_count</th>\n","      <th>availability_365</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>35742633</td>\n","      <td>Luxury new 1 bed apartment in East Williamsburg</td>\n","      <td>265866685</td>\n","      <td>Mindy</td>\n","      <td>Brooklyn</td>\n","      <td>Bushwick</td>\n","      <td>40.69796</td>\n","      <td>-73.92915</td>\n","      <td>Entire home/apt</td>\n","      <td>30</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>179</td>\n","      <td>198</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>15840089</td>\n","      <td>Kid- (and Adult-) Friendly Uptown 2-Bedroom</td>\n","      <td>99602138</td>\n","      <td>Yolanda</td>\n","      <td>Manhattan</td>\n","      <td>Washington Heights</td>\n","      <td>40.83490</td>\n","      <td>-73.94829</td>\n","      <td>Entire home/apt</td>\n","      <td>3</td>\n","      <td>36</td>\n","      <td>2019-01-01</td>\n","      <td>1.13</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>150</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>24495605</td>\n","      <td>Brooklyn Art Residence</td>\n","      <td>75173477</td>\n","      <td>Lara</td>\n","      <td>Brooklyn</td>\n","      <td>Bushwick</td>\n","      <td>40.69932</td>\n","      <td>-73.91191</td>\n","      <td>Entire home/apt</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>2019-05-05</td>\n","      <td>0.48</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>200</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>16238779</td>\n","      <td>Spacious Studio Duplex in Heart of Williamsburg!</td>\n","      <td>36382944</td>\n","      <td>Joshua</td>\n","      <td>Brooklyn</td>\n","      <td>Williamsburg</td>\n","      <td>40.71520</td>\n","      <td>-73.96230</td>\n","      <td>Entire home/apt</td>\n","      <td>31</td>\n","      <td>2</td>\n","      <td>2018-01-01</td>\n","      <td>0.06</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>230</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>25265496</td>\n","      <td>Beautiful large 2 br appartement in Brooklyn!</td>\n","      <td>22935245</td>\n","      <td>Anne</td>\n","      <td>Brooklyn</td>\n","      <td>Bedford-Stuyvesant</td>\n","      <td>40.69168</td>\n","      <td>-73.95397</td>\n","      <td>Entire home/apt</td>\n","      <td>21</td>\n","      <td>1</td>\n","      <td>2018-07-14</td>\n","      <td>0.08</td>\n","      <td>1</td>\n","      <td>25</td>\n","      <td>145</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-16da519a-e430-4be4-9d9b-a695a9c1c4b1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-16da519a-e430-4be4-9d9b-a695a9c1c4b1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-16da519a-e430-4be4-9d9b-a695a9c1c4b1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a93e012e-147c-4b29-81db-190d937f1575\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a93e012e-147c-4b29-81db-190d937f1575')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a93e012e-147c-4b29-81db-190d937f1575 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"train","summary":"{\n  \"name\": \"train\",\n  \"rows\": 39116,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10967430,\n        \"min\": 2539,\n        \"max\": 36487245,\n        \"num_unique_values\": 39116,\n        \"samples\": [\n          22213107,\n          21564596,\n          9486961\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 38447,\n        \"samples\": [\n          \"Spacious private bedroom upper manhattan NYC\",\n          \"The Ground Studio - West Side\",\n          \"Midtown Manhattan - Cozy Triple Room\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"host_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 78424253,\n        \"min\": 2438,\n        \"max\": 274321313,\n        \"num_unique_values\": 30821,\n        \"samples\": [\n          187889772,\n          235745868,\n          28808740\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"host_name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9943,\n        \"samples\": [\n          \"Kerri-Ann\",\n          \"Mustak And Farzana\",\n          \"Rasheeda\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"neighbourhood_group\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Manhattan\",\n          \"Staten Island\",\n          \"Queens\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"neighbourhood\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 221,\n        \"samples\": [\n          \"Fordham\",\n          \"Rosebank\",\n          \"Roosevelt Island\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"latitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.05445121617057367,\n        \"min\": 40.49979,\n        \"max\": 40.91306,\n        \"num_unique_values\": 17378,\n        \"samples\": [\n          40.70499,\n          40.70646,\n          40.72507\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"longitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.04610609089621585,\n        \"min\": -74.24441999999999,\n        \"max\": -73.71299,\n        \"num_unique_values\": 13607,\n        \"samples\": [\n          -73.88266,\n          -73.93224000000001,\n          -74.00464000000001\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"room_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Entire home/apt\",\n          \"Private room\",\n          \"Shared room\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"minimum_nights\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19,\n        \"min\": 1,\n        \"max\": 999,\n        \"num_unique_values\": 94,\n        \"samples\": [\n          183,\n          60,\n          181\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"number_of_reviews\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 44,\n        \"min\": 0,\n        \"max\": 607,\n        \"num_unique_values\": 377,\n        \"samples\": [\n          356,\n          139,\n          187\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"last_review\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2011-03-28 00:00:00\",\n        \"max\": \"2019-07-08 00:00:00\",\n        \"num_unique_values\": 1720,\n        \"samples\": [\n          \"2016-12-23\",\n          \"2017-12-23\",\n          \"2015-08-01\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"reviews_per_month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.68230908113274,\n        \"min\": 0.01,\n        \"max\": 58.5,\n        \"num_unique_values\": 903,\n        \"samples\": [\n          0.97,\n          1.07,\n          2.33\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"calculated_host_listings_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 33,\n        \"min\": 1,\n        \"max\": 327,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          23,\n          37,\n          15\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"availability_365\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 131,\n        \"min\": 0,\n        \"max\": 365,\n        \"num_unique_values\": 366,\n        \"samples\": [\n          120,\n          349,\n          329\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 248,\n        \"min\": 0,\n        \"max\": 10000,\n        \"num_unique_values\": 638,\n        \"samples\": [\n          67,\n          385,\n          130\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["test.head()"],"metadata":{"id":"WCVf___rXBcr","colab":{"base_uri":"https://localhost:8080/","height":451},"executionInfo":{"status":"ok","timestamp":1733979272092,"user_tz":-540,"elapsed":698,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"aba002a3-92d2-4ea2-a9e8-4680323b56ea"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         id                                           name    host_id  \\\n","0  34323697  Sonder | The Biltmore | Bright 1BR + Sofa Bed  219517861   \n","1  29927138                           A great space in NYC  158461160   \n","2    120362     Williamsburg apartment right by the subway     138069   \n","3  31838301             Private room in Beautiful Bed-Stuy   14743889   \n","4   7244824                  Inviting Private Room in NYC.   37932285   \n","\n","      host_name neighbourhood_group       neighbourhood  latitude  longitude  \\\n","0  Sonder (NYC)           Manhattan    Theater District  40.75965  -73.98652   \n","1        Sophia            Brooklyn  Bedford-Stuyvesant  40.68062  -73.94418   \n","2        Itamar            Brooklyn        Williamsburg  40.70665  -73.94061   \n","3        Kellie            Brooklyn  Bedford-Stuyvesant  40.68427  -73.95460   \n","4         Sarah           Manhattan              Harlem  40.82028  -73.95381   \n","\n","         room_type  minimum_nights  number_of_reviews last_review  \\\n","0  Entire home/apt              29                  0         NaN   \n","1  Entire home/apt              30                  1  2019-05-31   \n","2  Entire home/apt               4                 50  2019-07-02   \n","3     Private room               1                 18  2019-07-01   \n","4     Private room               1                  3  2018-01-03   \n","\n","   reviews_per_month  calculated_host_listings_count  availability_365  \n","0                NaN                             327               338  \n","1               0.75                               6               284  \n","2               0.51                               1               331  \n","3               3.33                               1                16  \n","4               0.08                               1                 0  "],"text/html":["\n","  <div id=\"df-fcdadcc1-4273-4a5c-9240-d0e285e958e3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>name</th>\n","      <th>host_id</th>\n","      <th>host_name</th>\n","      <th>neighbourhood_group</th>\n","      <th>neighbourhood</th>\n","      <th>latitude</th>\n","      <th>longitude</th>\n","      <th>room_type</th>\n","      <th>minimum_nights</th>\n","      <th>number_of_reviews</th>\n","      <th>last_review</th>\n","      <th>reviews_per_month</th>\n","      <th>calculated_host_listings_count</th>\n","      <th>availability_365</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>34323697</td>\n","      <td>Sonder | The Biltmore | Bright 1BR + Sofa Bed</td>\n","      <td>219517861</td>\n","      <td>Sonder (NYC)</td>\n","      <td>Manhattan</td>\n","      <td>Theater District</td>\n","      <td>40.75965</td>\n","      <td>-73.98652</td>\n","      <td>Entire home/apt</td>\n","      <td>29</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>327</td>\n","      <td>338</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>29927138</td>\n","      <td>A great space in NYC</td>\n","      <td>158461160</td>\n","      <td>Sophia</td>\n","      <td>Brooklyn</td>\n","      <td>Bedford-Stuyvesant</td>\n","      <td>40.68062</td>\n","      <td>-73.94418</td>\n","      <td>Entire home/apt</td>\n","      <td>30</td>\n","      <td>1</td>\n","      <td>2019-05-31</td>\n","      <td>0.75</td>\n","      <td>6</td>\n","      <td>284</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>120362</td>\n","      <td>Williamsburg apartment right by the subway</td>\n","      <td>138069</td>\n","      <td>Itamar</td>\n","      <td>Brooklyn</td>\n","      <td>Williamsburg</td>\n","      <td>40.70665</td>\n","      <td>-73.94061</td>\n","      <td>Entire home/apt</td>\n","      <td>4</td>\n","      <td>50</td>\n","      <td>2019-07-02</td>\n","      <td>0.51</td>\n","      <td>1</td>\n","      <td>331</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>31838301</td>\n","      <td>Private room in Beautiful Bed-Stuy</td>\n","      <td>14743889</td>\n","      <td>Kellie</td>\n","      <td>Brooklyn</td>\n","      <td>Bedford-Stuyvesant</td>\n","      <td>40.68427</td>\n","      <td>-73.95460</td>\n","      <td>Private room</td>\n","      <td>1</td>\n","      <td>18</td>\n","      <td>2019-07-01</td>\n","      <td>3.33</td>\n","      <td>1</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>7244824</td>\n","      <td>Inviting Private Room in NYC.</td>\n","      <td>37932285</td>\n","      <td>Sarah</td>\n","      <td>Manhattan</td>\n","      <td>Harlem</td>\n","      <td>40.82028</td>\n","      <td>-73.95381</td>\n","      <td>Private room</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2018-01-03</td>\n","      <td>0.08</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fcdadcc1-4273-4a5c-9240-d0e285e958e3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fcdadcc1-4273-4a5c-9240-d0e285e958e3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fcdadcc1-4273-4a5c-9240-d0e285e958e3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-21b11bf5-850a-420b-9dc4-3c367ab48a72\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-21b11bf5-850a-420b-9dc4-3c367ab48a72')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-21b11bf5-850a-420b-9dc4-3c367ab48a72 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"test","summary":"{\n  \"name\": \"test\",\n  \"rows\": 9779,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11043857,\n        \"min\": 5203,\n        \"max\": 36485431,\n        \"num_unique_values\": 9779,\n        \"samples\": [\n          16408202,\n          26370425,\n          10307009\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 9718,\n        \"samples\": [\n          \"HIDDEN GEM near JFK w. PRIVATE ENTRANCE x PARKING.\",\n          \"Pirouette (Private Room)\",\n          \"Cozy, Clean and Quiet Private Room - Wifi Access\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"host_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 79349632,\n        \"min\": 2571,\n        \"max\": 274311461,\n        \"num_unique_values\": 8763,\n        \"samples\": [\n          134167192,\n          168569105,\n          95740953\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"host_name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4099,\n        \"samples\": [\n          \"Katrin\",\n          \"Laurie\",\n          \"Hamad\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"neighbourhood_group\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Brooklyn\",\n          \"Staten Island\",\n          \"Queens\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"neighbourhood\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 201,\n        \"samples\": [\n          \"Westchester Square\",\n          \"East Village\",\n          \"Flatlands\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"latitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.05484518645399957,\n        \"min\": 40.50641,\n        \"max\": 40.91169,\n        \"num_unique_values\": 7590,\n        \"samples\": [\n          40.7007,\n          40.8084,\n          40.71558\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"longitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.04635956528665533,\n        \"min\": -74.24285,\n        \"max\": -73.72173000000001,\n        \"num_unique_values\": 6667,\n        \"samples\": [\n          -73.91317,\n          -73.9478,\n          -73.82138\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"room_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Entire home/apt\",\n          \"Private room\",\n          \"Shared room\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"minimum_nights\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23,\n        \"min\": 1,\n        \"max\": 1250,\n        \"num_unique_values\": 72,\n        \"samples\": [\n          3,\n          210,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"number_of_reviews\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 44,\n        \"min\": 0,\n        \"max\": 629,\n        \"num_unique_values\": 273,\n        \"samples\": [\n          10,\n          229,\n          49\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"last_review\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2012-01-03 00:00:00\",\n        \"max\": \"2019-07-08 00:00:00\",\n        \"num_unique_values\": 1216,\n        \"samples\": [\n          \"2016-06-27\",\n          \"2018-12-02\",\n          \"2018-04-02\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"reviews_per_month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.673072555636085,\n        \"min\": 0.01,\n        \"max\": 27.95,\n        \"num_unique_values\": 684,\n        \"samples\": [\n          6.27,\n          4.79,\n          2.76\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"calculated_host_listings_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 32,\n        \"min\": 1,\n        \"max\": 327,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          20,\n          39,\n          34\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"availability_365\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 132,\n        \"min\": 0,\n        \"max\": 365,\n        \"num_unique_values\": 366,\n        \"samples\": [\n          92,\n          337,\n          315\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["train.isnull().sum()"],"metadata":{"id":"E4DsLbbVXBiC","colab":{"base_uri":"https://localhost:8080/","height":585},"executionInfo":{"status":"ok","timestamp":1733979272092,"user_tz":-540,"elapsed":9,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"b6b1448e-dba6-48b3-d45e-539dfd745676"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["id                                   0\n","name                                14\n","host_id                              0\n","host_name                           16\n","neighbourhood_group                  0\n","neighbourhood                        0\n","latitude                             0\n","longitude                            0\n","room_type                            0\n","minimum_nights                       0\n","number_of_reviews                    0\n","last_review                       8053\n","reviews_per_month                 8053\n","calculated_host_listings_count       0\n","availability_365                     0\n","price                                0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>id</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>name</th>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>host_id</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>host_name</th>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>neighbourhood_group</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>neighbourhood</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>latitude</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>longitude</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>room_type</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>minimum_nights</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>number_of_reviews</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>last_review</th>\n","      <td>8053</td>\n","    </tr>\n","    <tr>\n","      <th>reviews_per_month</th>\n","      <td>8053</td>\n","    </tr>\n","    <tr>\n","      <th>calculated_host_listings_count</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>availability_365</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>price</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["test.isnull().sum()"],"metadata":{"id":"sIwHTD3vXBka","colab":{"base_uri":"https://localhost:8080/","height":554},"executionInfo":{"status":"ok","timestamp":1733979272092,"user_tz":-540,"elapsed":8,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"4598c892-d177-4743-aa22-344ff6b903de"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["id                                   0\n","name                                 2\n","host_id                              0\n","host_name                            5\n","neighbourhood_group                  0\n","neighbourhood                        0\n","latitude                             0\n","longitude                            0\n","room_type                            0\n","minimum_nights                       0\n","number_of_reviews                    0\n","last_review                       1999\n","reviews_per_month                 1999\n","calculated_host_listings_count       0\n","availability_365                     0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>id</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>name</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>host_id</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>host_name</th>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>neighbourhood_group</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>neighbourhood</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>latitude</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>longitude</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>room_type</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>minimum_nights</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>number_of_reviews</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>last_review</th>\n","      <td>1999</td>\n","    </tr>\n","    <tr>\n","      <th>reviews_per_month</th>\n","      <td>1999</td>\n","    </tr>\n","    <tr>\n","      <th>calculated_host_listings_count</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>availability_365</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["train['price'].describe()"],"metadata":{"id":"t719hBwYXCIX","colab":{"base_uri":"https://localhost:8080/","height":335},"executionInfo":{"status":"ok","timestamp":1733979272452,"user_tz":-540,"elapsed":367,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"83db667b-72e1-4615-e1c9-43e989e945f0"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    39116.000000\n","mean       153.057547\n","std        248.758522\n","min          0.000000\n","25%         69.000000\n","50%        105.000000\n","75%        175.000000\n","max      10000.000000\n","Name: price, dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>39116.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>153.057547</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>248.758522</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>69.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>105.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>175.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>10000.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["train.info()"],"metadata":{"id":"RJY4YPcRXCKr","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1733979272454,"user_tz":-540,"elapsed":5,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"5dbd9dba-9b6c-4739-ecac-452eb7e2f68b"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 39116 entries, 0 to 39115\n","Data columns (total 16 columns):\n"," #   Column                          Non-Null Count  Dtype  \n","---  ------                          --------------  -----  \n"," 0   id                              39116 non-null  int64  \n"," 1   name                            39102 non-null  object \n"," 2   host_id                         39116 non-null  int64  \n"," 3   host_name                       39100 non-null  object \n"," 4   neighbourhood_group             39116 non-null  object \n"," 5   neighbourhood                   39116 non-null  object \n"," 6   latitude                        39116 non-null  float64\n"," 7   longitude                       39116 non-null  float64\n"," 8   room_type                       39116 non-null  object \n"," 9   minimum_nights                  39116 non-null  int64  \n"," 10  number_of_reviews               39116 non-null  int64  \n"," 11  last_review                     31063 non-null  object \n"," 12  reviews_per_month               31063 non-null  float64\n"," 13  calculated_host_listings_count  39116 non-null  int64  \n"," 14  availability_365                39116 non-null  int64  \n"," 15  price                           39116 non-null  int64  \n","dtypes: float64(3), int64(7), object(6)\n","memory usage: 4.8+ MB\n"]}]},{"cell_type":"markdown","source":["## 데이터 전처리 & 피처엔지니어링\n","\n","*   항목 추가\n","*   항목 추가\n","\n"],"metadata":{"id":"DiUkXUO16g-G"}},{"cell_type":"code","source":["#결측치 먼저 처리\n","train.head()"],"metadata":{"id":"LTt0bg85XHGI","colab":{"base_uri":"https://localhost:8080/","height":504},"executionInfo":{"status":"ok","timestamp":1733979273586,"user_tz":-540,"elapsed":1136,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"5e030ea8-6fd0-45c9-b2a2-345a7f829192"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         id                                              name    host_id  \\\n","0  35742633   Luxury new 1 bed apartment in East Williamsburg  265866685   \n","1  15840089       Kid- (and Adult-) Friendly Uptown 2-Bedroom   99602138   \n","2  24495605                            Brooklyn Art Residence   75173477   \n","3  16238779  Spacious Studio Duplex in Heart of Williamsburg!   36382944   \n","4  25265496     Beautiful large 2 br appartement in Brooklyn!   22935245   \n","\n","  host_name neighbourhood_group       neighbourhood  latitude  longitude  \\\n","0     Mindy            Brooklyn            Bushwick  40.69796  -73.92915   \n","1   Yolanda           Manhattan  Washington Heights  40.83490  -73.94829   \n","2      Lara            Brooklyn            Bushwick  40.69932  -73.91191   \n","3    Joshua            Brooklyn        Williamsburg  40.71520  -73.96230   \n","4      Anne            Brooklyn  Bedford-Stuyvesant  40.69168  -73.95397   \n","\n","         room_type  minimum_nights  number_of_reviews last_review  \\\n","0  Entire home/apt              30                  0         NaN   \n","1  Entire home/apt               3                 36  2019-01-01   \n","2  Entire home/apt               3                  7  2019-05-05   \n","3  Entire home/apt              31                  2  2018-01-01   \n","4  Entire home/apt              21                  1  2018-07-14   \n","\n","   reviews_per_month  calculated_host_listings_count  availability_365  price  \n","0                NaN                               2               179    198  \n","1               1.13                               1                 5    150  \n","2               0.48                               1                 6    200  \n","3               0.06                               1                 0    230  \n","4               0.08                               1                25    145  "],"text/html":["\n","  <div id=\"df-06e66d12-f954-431d-82fa-cca0c170b829\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>name</th>\n","      <th>host_id</th>\n","      <th>host_name</th>\n","      <th>neighbourhood_group</th>\n","      <th>neighbourhood</th>\n","      <th>latitude</th>\n","      <th>longitude</th>\n","      <th>room_type</th>\n","      <th>minimum_nights</th>\n","      <th>number_of_reviews</th>\n","      <th>last_review</th>\n","      <th>reviews_per_month</th>\n","      <th>calculated_host_listings_count</th>\n","      <th>availability_365</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>35742633</td>\n","      <td>Luxury new 1 bed apartment in East Williamsburg</td>\n","      <td>265866685</td>\n","      <td>Mindy</td>\n","      <td>Brooklyn</td>\n","      <td>Bushwick</td>\n","      <td>40.69796</td>\n","      <td>-73.92915</td>\n","      <td>Entire home/apt</td>\n","      <td>30</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>179</td>\n","      <td>198</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>15840089</td>\n","      <td>Kid- (and Adult-) Friendly Uptown 2-Bedroom</td>\n","      <td>99602138</td>\n","      <td>Yolanda</td>\n","      <td>Manhattan</td>\n","      <td>Washington Heights</td>\n","      <td>40.83490</td>\n","      <td>-73.94829</td>\n","      <td>Entire home/apt</td>\n","      <td>3</td>\n","      <td>36</td>\n","      <td>2019-01-01</td>\n","      <td>1.13</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>150</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>24495605</td>\n","      <td>Brooklyn Art Residence</td>\n","      <td>75173477</td>\n","      <td>Lara</td>\n","      <td>Brooklyn</td>\n","      <td>Bushwick</td>\n","      <td>40.69932</td>\n","      <td>-73.91191</td>\n","      <td>Entire home/apt</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>2019-05-05</td>\n","      <td>0.48</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>200</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>16238779</td>\n","      <td>Spacious Studio Duplex in Heart of Williamsburg!</td>\n","      <td>36382944</td>\n","      <td>Joshua</td>\n","      <td>Brooklyn</td>\n","      <td>Williamsburg</td>\n","      <td>40.71520</td>\n","      <td>-73.96230</td>\n","      <td>Entire home/apt</td>\n","      <td>31</td>\n","      <td>2</td>\n","      <td>2018-01-01</td>\n","      <td>0.06</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>230</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>25265496</td>\n","      <td>Beautiful large 2 br appartement in Brooklyn!</td>\n","      <td>22935245</td>\n","      <td>Anne</td>\n","      <td>Brooklyn</td>\n","      <td>Bedford-Stuyvesant</td>\n","      <td>40.69168</td>\n","      <td>-73.95397</td>\n","      <td>Entire home/apt</td>\n","      <td>21</td>\n","      <td>1</td>\n","      <td>2018-07-14</td>\n","      <td>0.08</td>\n","      <td>1</td>\n","      <td>25</td>\n","      <td>145</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-06e66d12-f954-431d-82fa-cca0c170b829')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-06e66d12-f954-431d-82fa-cca0c170b829 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-06e66d12-f954-431d-82fa-cca0c170b829');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b423cadc-2339-4ce6-95dd-15de4d37d981\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b423cadc-2339-4ce6-95dd-15de4d37d981')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b423cadc-2339-4ce6-95dd-15de4d37d981 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"train","summary":"{\n  \"name\": \"train\",\n  \"rows\": 39116,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10967430,\n        \"min\": 2539,\n        \"max\": 36487245,\n        \"num_unique_values\": 39116,\n        \"samples\": [\n          22213107,\n          21564596,\n          9486961\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 38447,\n        \"samples\": [\n          \"Spacious private bedroom upper manhattan NYC\",\n          \"The Ground Studio - West Side\",\n          \"Midtown Manhattan - Cozy Triple Room\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"host_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 78424253,\n        \"min\": 2438,\n        \"max\": 274321313,\n        \"num_unique_values\": 30821,\n        \"samples\": [\n          187889772,\n          235745868,\n          28808740\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"host_name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9943,\n        \"samples\": [\n          \"Kerri-Ann\",\n          \"Mustak And Farzana\",\n          \"Rasheeda\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"neighbourhood_group\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Manhattan\",\n          \"Staten Island\",\n          \"Queens\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"neighbourhood\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 221,\n        \"samples\": [\n          \"Fordham\",\n          \"Rosebank\",\n          \"Roosevelt Island\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"latitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.05445121617057367,\n        \"min\": 40.49979,\n        \"max\": 40.91306,\n        \"num_unique_values\": 17378,\n        \"samples\": [\n          40.70499,\n          40.70646,\n          40.72507\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"longitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.04610609089621585,\n        \"min\": -74.24441999999999,\n        \"max\": -73.71299,\n        \"num_unique_values\": 13607,\n        \"samples\": [\n          -73.88266,\n          -73.93224000000001,\n          -74.00464000000001\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"room_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Entire home/apt\",\n          \"Private room\",\n          \"Shared room\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"minimum_nights\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19,\n        \"min\": 1,\n        \"max\": 999,\n        \"num_unique_values\": 94,\n        \"samples\": [\n          183,\n          60,\n          181\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"number_of_reviews\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 44,\n        \"min\": 0,\n        \"max\": 607,\n        \"num_unique_values\": 377,\n        \"samples\": [\n          356,\n          139,\n          187\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"last_review\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2011-03-28 00:00:00\",\n        \"max\": \"2019-07-08 00:00:00\",\n        \"num_unique_values\": 1720,\n        \"samples\": [\n          \"2016-12-23\",\n          \"2017-12-23\",\n          \"2015-08-01\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"reviews_per_month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.68230908113274,\n        \"min\": 0.01,\n        \"max\": 58.5,\n        \"num_unique_values\": 903,\n        \"samples\": [\n          0.97,\n          1.07,\n          2.33\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"calculated_host_listings_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 33,\n        \"min\": 1,\n        \"max\": 327,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          23,\n          37,\n          15\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"availability_365\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 131,\n        \"min\": 0,\n        \"max\": 365,\n        \"num_unique_values\": 366,\n        \"samples\": [\n          120,\n          349,\n          329\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 248,\n        \"min\": 0,\n        \"max\": 10000,\n        \"num_unique_values\": 638,\n        \"samples\": [\n          67,\n          385,\n          130\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["train.nunique()\n","\n","#name이랑 hostname 삭제 -> 고윳값으로 삭제\n","# last_review  날짜라서 굳이 필요없다 -> 삭제\n","# host_id도 거의 id만큼 데이터가 있어서 -> 삭제\n","#reviews_per_month -> 0 결측치 채우기 (리뷰가 없었다면, 책을 읽지 않았다고 생각해서 0권으로 생각해서 0으로 결측치를 채운것임)"],"metadata":{"id":"2LBrRTC4XHIo","colab":{"base_uri":"https://localhost:8080/","height":585},"executionInfo":{"status":"ok","timestamp":1733979273586,"user_tz":-540,"elapsed":7,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"ae087152-52d6-4364-83c9-c44be079e2dd"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["id                                39116\n","name                              38447\n","host_id                           30821\n","host_name                          9943\n","neighbourhood_group                   5\n","neighbourhood                       221\n","latitude                          17378\n","longitude                         13607\n","room_type                             3\n","minimum_nights                       94\n","number_of_reviews                   377\n","last_review                        1720\n","reviews_per_month                   903\n","calculated_host_listings_count       47\n","availability_365                    366\n","price                               638\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>id</th>\n","      <td>39116</td>\n","    </tr>\n","    <tr>\n","      <th>name</th>\n","      <td>38447</td>\n","    </tr>\n","    <tr>\n","      <th>host_id</th>\n","      <td>30821</td>\n","    </tr>\n","    <tr>\n","      <th>host_name</th>\n","      <td>9943</td>\n","    </tr>\n","    <tr>\n","      <th>neighbourhood_group</th>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>neighbourhood</th>\n","      <td>221</td>\n","    </tr>\n","    <tr>\n","      <th>latitude</th>\n","      <td>17378</td>\n","    </tr>\n","    <tr>\n","      <th>longitude</th>\n","      <td>13607</td>\n","    </tr>\n","    <tr>\n","      <th>room_type</th>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>minimum_nights</th>\n","      <td>94</td>\n","    </tr>\n","    <tr>\n","      <th>number_of_reviews</th>\n","      <td>377</td>\n","    </tr>\n","    <tr>\n","      <th>last_review</th>\n","      <td>1720</td>\n","    </tr>\n","    <tr>\n","      <th>reviews_per_month</th>\n","      <td>903</td>\n","    </tr>\n","    <tr>\n","      <th>calculated_host_listings_count</th>\n","      <td>47</td>\n","    </tr>\n","    <tr>\n","      <th>availability_365</th>\n","      <td>366</td>\n","    </tr>\n","    <tr>\n","      <th>price</th>\n","      <td>638</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["#결측치 삭제\n","cols = ['name', 'host_name', 'host_id', 'last_review']\n","\n","print(train.shape)\n","train = train.drop(cols, axis=1)\n","test = test.drop(cols, axis=1)\n","print(train.shape)\n","\n"],"metadata":{"id":"YFK5yYcEXHLa","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1733979273586,"user_tz":-540,"elapsed":6,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"c4079992-b8df-4b0b-c72b-8b93aa824080"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["(39116, 16)\n","(39116, 12)\n"]}]},{"cell_type":"code","source":["#결측치 채우기\n","\n","train['reviews_per_month'] = train['reviews_per_month'].fillna(0)\n","test['reviews_per_month'] = test['reviews_per_month'].fillna(0)\n","train.isnull().sum()\n"],"metadata":{"id":"LhDmnkjeXHN_","colab":{"base_uri":"https://localhost:8080/","height":460},"executionInfo":{"status":"ok","timestamp":1733979273966,"user_tz":-540,"elapsed":385,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"af08468f-9c33-4598-86fe-c60b375c9f50"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["id                                0\n","neighbourhood_group               0\n","neighbourhood                     0\n","latitude                          0\n","longitude                         0\n","room_type                         0\n","minimum_nights                    0\n","number_of_reviews                 0\n","reviews_per_month                 0\n","calculated_host_listings_count    0\n","availability_365                  0\n","price                             0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>id</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>neighbourhood_group</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>neighbourhood</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>latitude</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>longitude</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>room_type</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>minimum_nights</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>number_of_reviews</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>reviews_per_month</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>calculated_host_listings_count</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>availability_365</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>price</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["#id도 삭제하고, test에있는 id 는 pop 사용해서 test_id넣어놓고 삭제후 저장하기\n","train = train.drop('id', axis=1)\n","test_id = test.pop('id')\n","test.head()"],"metadata":{"id":"dH7YtgZOXHQk","colab":{"base_uri":"https://localhost:8080/","height":313},"executionInfo":{"status":"ok","timestamp":1733979274302,"user_tz":-540,"elapsed":339,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"abfb6e65-717b-4964-af2b-d59d9a3b5e69"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  neighbourhood_group       neighbourhood  latitude  longitude  \\\n","0           Manhattan    Theater District  40.75965  -73.98652   \n","1            Brooklyn  Bedford-Stuyvesant  40.68062  -73.94418   \n","2            Brooklyn        Williamsburg  40.70665  -73.94061   \n","3            Brooklyn  Bedford-Stuyvesant  40.68427  -73.95460   \n","4           Manhattan              Harlem  40.82028  -73.95381   \n","\n","         room_type  minimum_nights  number_of_reviews  reviews_per_month  \\\n","0  Entire home/apt              29                  0               0.00   \n","1  Entire home/apt              30                  1               0.75   \n","2  Entire home/apt               4                 50               0.51   \n","3     Private room               1                 18               3.33   \n","4     Private room               1                  3               0.08   \n","\n","   calculated_host_listings_count  availability_365  \n","0                             327               338  \n","1                               6               284  \n","2                               1               331  \n","3                               1                16  \n","4                               1                 0  "],"text/html":["\n","  <div id=\"df-50abfcab-bd39-4484-8970-fd6919a60b62\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>neighbourhood_group</th>\n","      <th>neighbourhood</th>\n","      <th>latitude</th>\n","      <th>longitude</th>\n","      <th>room_type</th>\n","      <th>minimum_nights</th>\n","      <th>number_of_reviews</th>\n","      <th>reviews_per_month</th>\n","      <th>calculated_host_listings_count</th>\n","      <th>availability_365</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Manhattan</td>\n","      <td>Theater District</td>\n","      <td>40.75965</td>\n","      <td>-73.98652</td>\n","      <td>Entire home/apt</td>\n","      <td>29</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>327</td>\n","      <td>338</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Brooklyn</td>\n","      <td>Bedford-Stuyvesant</td>\n","      <td>40.68062</td>\n","      <td>-73.94418</td>\n","      <td>Entire home/apt</td>\n","      <td>30</td>\n","      <td>1</td>\n","      <td>0.75</td>\n","      <td>6</td>\n","      <td>284</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Brooklyn</td>\n","      <td>Williamsburg</td>\n","      <td>40.70665</td>\n","      <td>-73.94061</td>\n","      <td>Entire home/apt</td>\n","      <td>4</td>\n","      <td>50</td>\n","      <td>0.51</td>\n","      <td>1</td>\n","      <td>331</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Brooklyn</td>\n","      <td>Bedford-Stuyvesant</td>\n","      <td>40.68427</td>\n","      <td>-73.95460</td>\n","      <td>Private room</td>\n","      <td>1</td>\n","      <td>18</td>\n","      <td>3.33</td>\n","      <td>1</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Manhattan</td>\n","      <td>Harlem</td>\n","      <td>40.82028</td>\n","      <td>-73.95381</td>\n","      <td>Private room</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0.08</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-50abfcab-bd39-4484-8970-fd6919a60b62')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-50abfcab-bd39-4484-8970-fd6919a60b62 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-50abfcab-bd39-4484-8970-fd6919a60b62');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d18eb6b4-fdc8-4292-bd23-06195d66ba05\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d18eb6b4-fdc8-4292-bd23-06195d66ba05')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d18eb6b4-fdc8-4292-bd23-06195d66ba05 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"test","summary":"{\n  \"name\": \"test\",\n  \"rows\": 9779,\n  \"fields\": [\n    {\n      \"column\": \"neighbourhood_group\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Brooklyn\",\n          \"Staten Island\",\n          \"Queens\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"neighbourhood\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 201,\n        \"samples\": [\n          \"Westchester Square\",\n          \"East Village\",\n          \"Flatlands\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"latitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.05484518645399957,\n        \"min\": 40.50641,\n        \"max\": 40.91169,\n        \"num_unique_values\": 7590,\n        \"samples\": [\n          40.7007,\n          40.8084,\n          40.71558\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"longitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.04635956528665533,\n        \"min\": -74.24285,\n        \"max\": -73.72173000000001,\n        \"num_unique_values\": 6667,\n        \"samples\": [\n          -73.91317,\n          -73.9478,\n          -73.82138\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"room_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Entire home/apt\",\n          \"Private room\",\n          \"Shared room\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"minimum_nights\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23,\n        \"min\": 1,\n        \"max\": 1250,\n        \"num_unique_values\": 72,\n        \"samples\": [\n          3,\n          210,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"number_of_reviews\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 44,\n        \"min\": 0,\n        \"max\": 629,\n        \"num_unique_values\": 273,\n        \"samples\": [\n          10,\n          229,\n          49\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"reviews_per_month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.592042208656056,\n        \"min\": 0.0,\n        \"max\": 27.95,\n        \"num_unique_values\": 685,\n        \"samples\": [\n          1.71,\n          3.27,\n          2.76\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"calculated_host_listings_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 32,\n        \"min\": 1,\n        \"max\": 327,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          20,\n          39,\n          34\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"availability_365\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 132,\n        \"min\": 0,\n        \"max\": 365,\n        \"num_unique_values\": 366,\n        \"samples\": [\n          92,\n          337,\n          315\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["test_id.head()"],"metadata":{"id":"-VgRESe7aWSs","colab":{"base_uri":"https://localhost:8080/","height":241},"executionInfo":{"status":"ok","timestamp":1733979274302,"user_tz":-540,"elapsed":6,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"cc96a608-ac6f-4daa-80c8-89f356ec4c43"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    34323697\n","1    29927138\n","2      120362\n","3    31838301\n","4     7244824\n","Name: id, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>34323697</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>29927138</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>120362</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>31838301</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>7244824</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["# 이제 문자로 된 범주형 데이터 object를 숫자로 바꿔줘야함\n","train.info()\n"],"metadata":{"id":"mtJREZqcaWY_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1733979274302,"user_tz":-540,"elapsed":5,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"ce20f142-8fa4-4037-b085-db07748853c3"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 39116 entries, 0 to 39115\n","Data columns (total 11 columns):\n"," #   Column                          Non-Null Count  Dtype  \n","---  ------                          --------------  -----  \n"," 0   neighbourhood_group             39116 non-null  object \n"," 1   neighbourhood                   39116 non-null  object \n"," 2   latitude                        39116 non-null  float64\n"," 3   longitude                       39116 non-null  float64\n"," 4   room_type                       39116 non-null  object \n"," 5   minimum_nights                  39116 non-null  int64  \n"," 6   number_of_reviews               39116 non-null  int64  \n"," 7   reviews_per_month               39116 non-null  float64\n"," 8   calculated_host_listings_count  39116 non-null  int64  \n"," 9   availability_365                39116 non-null  int64  \n"," 10  price                           39116 non-null  int64  \n","dtypes: float64(3), int64(5), object(3)\n","memory usage: 3.3+ MB\n"]}]},{"cell_type":"code","source":["#레이블 인코딩으로 통일해서 진행\n","cols = ['neighbourhood_group','neighbourhood', 'room_type']\n","from sklearn.preprocessing import LabelEncoder\n","\n","for col in cols:\n","    le = LabelEncoder()\n","    train[col] = le.fit_transform(train[col])\n","    test[col] = le.transform(test[col])\n","\n","train[cols]\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"BZZtBTb3LPMm","executionInfo":{"status":"ok","timestamp":1733979282754,"user_tz":-540,"elapsed":8456,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"fcbbbcff-2795-4b90-ce30-1bae3bc2aba3"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       neighbourhood_group  neighbourhood  room_type\n","0                        1             28          0\n","1                        2            206          0\n","2                        1             28          0\n","3                        1            214          0\n","4                        1             13          0\n","...                    ...            ...        ...\n","39111                    1            214          1\n","39112                    2             94          1\n","39113                    1             19          0\n","39114                    1             41          0\n","39115                    2            202          0\n","\n","[39116 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-320f6c32-fb56-4c67-a099-5d524d316440\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>neighbourhood_group</th>\n","      <th>neighbourhood</th>\n","      <th>room_type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>28</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>206</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>28</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>214</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>13</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>39111</th>\n","      <td>1</td>\n","      <td>214</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>39112</th>\n","      <td>2</td>\n","      <td>94</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>39113</th>\n","      <td>1</td>\n","      <td>19</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>39114</th>\n","      <td>1</td>\n","      <td>41</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>39115</th>\n","      <td>2</td>\n","      <td>202</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>39116 rows × 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-320f6c32-fb56-4c67-a099-5d524d316440')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-320f6c32-fb56-4c67-a099-5d524d316440 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-320f6c32-fb56-4c67-a099-5d524d316440');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9d01c43a-67a0-4449-a7ba-f3ba48f9896c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9d01c43a-67a0-4449-a7ba-f3ba48f9896c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9d01c43a-67a0-4449-a7ba-f3ba48f9896c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"train[cols]\",\n  \"rows\": 39116,\n  \"fields\": [\n    {\n      \"column\": \"neighbourhood_group\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2,\n          4,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"neighbourhood\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 68,\n        \"min\": 0,\n        \"max\": 220,\n        \"num_unique_values\": 221,\n        \"samples\": [\n          78,\n          170,\n          169\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"room_type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":[],"metadata":{"id":"9faRGxmOLPIw","executionInfo":{"status":"ok","timestamp":1733979282754,"user_tz":-540,"elapsed":3,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"c_Ag4BAeLPGr","executionInfo":{"status":"ok","timestamp":1733979282754,"user_tz":-540,"elapsed":3,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"j3PmnjaFLPEJ","executionInfo":{"status":"ok","timestamp":1733979282754,"user_tz":-540,"elapsed":3,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"5kGSzPt3LPBt","executionInfo":{"status":"ok","timestamp":1733979282754,"user_tz":-540,"elapsed":2,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}}},"execution_count":16,"outputs":[]},{"cell_type":"markdown","source":["[링크 텍스트](https://)## 검증 데이터 분리"],"metadata":{"id":"2wXHbPi9DEwb"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","X_tr, X_val, y_tr, y_val = train_test_split(train.drop('price', axis=1), train['price'],\n","                                            test_size=0.15, random_state=2024)"],"metadata":{"id":"NLf2OsLc38wm","executionInfo":{"status":"ok","timestamp":1733979283105,"user_tz":-540,"elapsed":353,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["X_tr.head()"],"metadata":{"id":"cTr_t52X6w_Z","colab":{"base_uri":"https://localhost:8080/","height":226},"executionInfo":{"status":"ok","timestamp":1733979283106,"user_tz":-540,"elapsed":5,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"cb1ceeb7-067b-4400-b7f2-46588189d671"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       neighbourhood_group  neighbourhood  latitude  longitude  room_type  \\\n","16007                    2             34  40.74184  -74.00108          1   \n","15469                    1            214  40.71373  -73.96743          0   \n","21631                    1             91  40.73844  -73.95456          0   \n","36716                    2             61  40.80249  -73.93463          1   \n","38854                    1             51  40.67218  -73.95368          0   \n","\n","       minimum_nights  number_of_reviews  reviews_per_month  \\\n","16007               1                 10               1.09   \n","15469               2                  0               0.00   \n","21631               3                116               1.56   \n","36716               1                 46               0.91   \n","38854               2                 70               1.85   \n","\n","       calculated_host_listings_count  availability_365  \n","16007                               1                 0  \n","15469                               1                16  \n","21631                              28                36  \n","36716                               2                14  \n","38854                               1               132  "],"text/html":["\n","  <div id=\"df-f2e3fdeb-5e24-4c3b-beae-0ad0804c7196\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>neighbourhood_group</th>\n","      <th>neighbourhood</th>\n","      <th>latitude</th>\n","      <th>longitude</th>\n","      <th>room_type</th>\n","      <th>minimum_nights</th>\n","      <th>number_of_reviews</th>\n","      <th>reviews_per_month</th>\n","      <th>calculated_host_listings_count</th>\n","      <th>availability_365</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>16007</th>\n","      <td>2</td>\n","      <td>34</td>\n","      <td>40.74184</td>\n","      <td>-74.00108</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>1.09</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>15469</th>\n","      <td>1</td>\n","      <td>214</td>\n","      <td>40.71373</td>\n","      <td>-73.96743</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>1</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>21631</th>\n","      <td>1</td>\n","      <td>91</td>\n","      <td>40.73844</td>\n","      <td>-73.95456</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>116</td>\n","      <td>1.56</td>\n","      <td>28</td>\n","      <td>36</td>\n","    </tr>\n","    <tr>\n","      <th>36716</th>\n","      <td>2</td>\n","      <td>61</td>\n","      <td>40.80249</td>\n","      <td>-73.93463</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>46</td>\n","      <td>0.91</td>\n","      <td>2</td>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>38854</th>\n","      <td>1</td>\n","      <td>51</td>\n","      <td>40.67218</td>\n","      <td>-73.95368</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>70</td>\n","      <td>1.85</td>\n","      <td>1</td>\n","      <td>132</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f2e3fdeb-5e24-4c3b-beae-0ad0804c7196')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f2e3fdeb-5e24-4c3b-beae-0ad0804c7196 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f2e3fdeb-5e24-4c3b-beae-0ad0804c7196');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-927e9a46-bd7b-403a-aacb-b08fe82c62b1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-927e9a46-bd7b-403a-aacb-b08fe82c62b1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-927e9a46-bd7b-403a-aacb-b08fe82c62b1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X_tr","summary":"{\n  \"name\": \"X_tr\",\n  \"rows\": 33248,\n  \"fields\": [\n    {\n      \"column\": \"neighbourhood_group\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1,\n          4,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"neighbourhood\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 68,\n        \"min\": 0,\n        \"max\": 220,\n        \"num_unique_values\": 218,\n        \"samples\": [\n          68,\n          93,\n          184\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"latitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.054458100828651414,\n        \"min\": 40.49979,\n        \"max\": 40.91306,\n        \"num_unique_values\": 16181,\n        \"samples\": [\n          40.65591,\n          40.69183,\n          40.75165\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"longitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0463527522447277,\n        \"min\": -74.24441999999999,\n        \"max\": -73.71299,\n        \"num_unique_values\": 12795,\n        \"samples\": [\n          -73.93905,\n          -73.95711,\n          -73.99806\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"room_type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1,\n          0,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"minimum_nights\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19,\n        \"min\": 1,\n        \"max\": 999,\n        \"num_unique_values\": 89,\n        \"samples\": [\n          53,\n          62,\n          8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"number_of_reviews\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 44,\n        \"min\": 0,\n        \"max\": 607,\n        \"num_unique_values\": 362,\n        \"samples\": [\n          227,\n          31,\n          59\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"reviews_per_month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.5998881494239807,\n        \"min\": 0.0,\n        \"max\": 58.5,\n        \"num_unique_values\": 879,\n        \"samples\": [\n          1.5,\n          2.64,\n          13.45\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"calculated_host_listings_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 32,\n        \"min\": 1,\n        \"max\": 327,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          12,\n          19,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"availability_365\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 131,\n        \"min\": 0,\n        \"max\": 365,\n        \"num_unique_values\": 366,\n        \"samples\": [\n          259,\n          206,\n          89\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":18}]},{"cell_type":"markdown","source":[],"metadata":{"id":"hB7AkAWTSlH7"}},{"cell_type":"markdown","source":[],"metadata":{"id":"IKjxUKk7SvhM"}},{"cell_type":"markdown","source":["## 모델 & 평가"],"metadata":{"id":"6zrIYRkcDN4j"}},{"cell_type":"markdown","source":["MSE\n","RMSE 등\n","회귀에서 오차를 계산하기 위한 평가 방법"],"metadata":{"id":"-bEiXAmzUMQa"}},{"cell_type":"markdown","source":["y_pred는 **예측된 값(predicted values)**을 의미합니다.\n","\n","이 함수는 RMSE(Root Mean Squared Error, 평균 제곱근 오차)를 계산하는데, 두 입력값 y_test와 y_pred가 필요합니다.\n","\n","각 변수의 의미:\n","y_test:\n","\n","실제 값(ground truth 또는 실제 레이블)입니다.\n","모델이 예측한 값(y_pred)과 비교하기 위한 기준입니다.\n","y_pred:\n","\n","모델이 예측한 값입니다.\n","예를 들어, 머신 러닝 모델에서 predict 메서드를 사용해 나온 예측 결과입니다."],"metadata":{"id":"4wHrt_xRW9OU"}},{"cell_type":"code","source":["# 평가\n","import numpy as np\n","from sklearn.metrics import r2_score, mean_absolute_error, mean_squared_error\n","def rmse(y_test, y_pred): #RMSE\n","    return np.sqrt(mean_squared_error(y_test, y_pred))\n","\n","def rmsle(y_test, y_pred): #RMSLE\n","    return np.sqrt(np.mean(np.power(np.log1p(y_test) - np.log1p(y_pred), 2)))\n","\n","def mape(y_test, y_pred): #MAPE\n","    return np.mean(np.abs((y_test - y_pred) / y_test)) * 100"],"metadata":{"id":"nG0HR27zOkW5","executionInfo":{"status":"ok","timestamp":1733979283106,"user_tz":-540,"elapsed":4,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["#선형회귀\n","from sklearn.linear_model import LinearRegression\n","\n","model = LinearRegression()\n","model.fit(X_tr, y_tr)\n","pred = model.predict(X_val)\n","print(\"r2: \", r2_score(y_val, pred))\n","print(\"mae: \", mean_absolute_error(y_val, pred))\n","print(\"mse: \", mean_squared_error(y_val, pred))\n","print(\"rmse: \", rmse(y_val, pred))\n","print(\"rmsle: \", rmsle(y_val, pred))\n","print(\"mape: \",mape(y_val, pred))\n","\n","#결과값에 warning뜨는건 일단 무시"],"metadata":{"id":"UBjzNyKpQY3p","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1733979283474,"user_tz":-540,"elapsed":371,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"1019c7b0-6ceb-4702-ab97-abb99c53f355"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["r2:  0.11259883811374394\n","mae:  74.5543049894151\n","mse:  39543.637240040785\n","rmse:  198.85582023174678\n","rmsle:  0.6281547250825373\n","mape:  inf\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-19-c0f7fdd27b5a>:8: RuntimeWarning: invalid value encountered in log1p\n","  return np.sqrt(np.mean(np.power(np.log1p(y_test) - np.log1p(y_pred), 2)))\n"]}]},{"cell_type":"code","source":["#릿지\n","from sklearn.linear_model import Ridge\n","model = Ridge()\n","model.fit(X_tr, y_tr)\n","pred = model.predict(X_val)\n","print(\"r2: \", r2_score(y_val, pred))\n","print(\"mae: \", mean_absolute_error(y_val, pred))\n","print(\"mse: \", mean_squared_error(y_val, pred))\n","print(\"rmse: \", rmse(y_val, pred))\n","print(\"rmsle: \", rmsle(y_val, pred))\n","print(\"mape: \",mape(y_val, pred))"],"metadata":{"id":"wdPc5qIjPAHW","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1733979283474,"user_tz":-540,"elapsed":3,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"b00566cb-6893-422d-9826-836a58a2ea0b"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["r2:  0.11259666404832025\n","mae:  74.52028697937708\n","mse:  39543.73411894758\n","rmse:  198.856063822423\n","rmsle:  0.606524465277811\n","mape:  inf\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-19-c0f7fdd27b5a>:8: RuntimeWarning: invalid value encountered in log1p\n","  return np.sqrt(np.mean(np.power(np.log1p(y_test) - np.log1p(y_pred), 2)))\n"]}]},{"cell_type":"code","source":["#라쏘\n","from sklearn.linear_model import Lasso\n","model = Lasso()\n","model.fit(X_tr, y_tr)\n","pred = model.predict(X_val)\n","print(\"r2: \", r2_score(y_val, pred))\n","print(\"mae: \", mean_absolute_error(y_val, pred))\n","print(\"mse: \", mean_squared_error(y_val, pred))\n","print(\"rmse: \", rmse(y_val, pred))\n","print(\"rmsle: \", rmsle(y_val, pred))\n","print(\"mape: \",mape(y_val, pred))"],"metadata":{"id":"VXPpAghtPALJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1733979283846,"user_tz":-540,"elapsed":3,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"f7fd0ce1-ff89-4ece-de23-595e2065a024"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["r2:  0.1008955684476126\n","mae:  75.37372967820473\n","mse:  40065.14867148422\n","rmse:  200.16280541470292\n","rmsle:  0.61517096051843\n","mape:  inf\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-19-c0f7fdd27b5a>:8: RuntimeWarning: invalid value encountered in log1p\n","  return np.sqrt(np.mean(np.power(np.log1p(y_test) - np.log1p(y_pred), 2)))\n"]}]},{"cell_type":"code","source":["#랜덤포레스트\n","from sklearn.ensemble import RandomForestRegressor\n","regressor = RandomForestRegressor\n","model.fit(X_tr, y_tr)\n","pred = model.predict(X_val)\n","print(\"r2: \", r2_score(y_val, pred))\n","print(\"mae: \", mean_absolute_error(y_val, pred))\n","print(\"mse: \", mean_squared_error(y_val, pred))\n","print(\"rmse: \", rmse(y_val, pred))\n","print(\"rmsle: \", rmsle(y_val, pred))\n","print(\"mape: \",mape(y_val, pred))"],"metadata":{"id":"vGK-shoSPAN4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1733979309265,"user_tz":-540,"elapsed":310,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"ffc6e7ee-4b6f-4249-d719-4a213a747f42"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["r2:  0.1008955684476126\n","mae:  75.37372967820473\n","mse:  40065.14867148422\n","rmse:  200.16280541470292\n","rmsle:  0.61517096051843\n","mape:  inf\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-19-c0f7fdd27b5a>:8: RuntimeWarning: invalid value encountered in log1p\n","  return np.sqrt(np.mean(np.power(np.log1p(y_test) - np.log1p(y_pred), 2)))\n"]}]},{"cell_type":"code","source":["#XGBRegressor\n","from xgboost import XGBRegressor\n","model = XGBRegressor()\n","model.fit(X_tr, y_tr)\n","pred = model.predict(X_val)\n","print(\"r2: \", r2_score(y_val, pred))\n","print(\"mae: \", mean_absolute_error(y_val, pred))\n","print(\"mse: \", mean_squared_error(y_val, pred))\n","print(\"rmse: \", rmse(y_val, pred))\n","print(\"rmsle: \", rmsle(y_val, pred))\n","print(\"mape: \",mape(y_val, pred))"],"metadata":{"id":"bv73gQjuUyU-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1732002348140,"user_tz":-540,"elapsed":897,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"98c06062-3ffb-40af-d3ff-5149253c7ffc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["r2:  0.1375780701637268\n","mae:  71.11699734253386\n","mse:  38430.533284373465\n","rmse:  196.0370711992338\n","rmsle:  0.5635462676060615\n","mape:  inf\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-126-c0f7fdd27b5a>:8: RuntimeWarning: invalid value encountered in log1p\n","  return np.sqrt(np.mean(np.power(np.log1p(y_test) - np.log1p(y_pred), 2)))\n"]}]},{"cell_type":"markdown","source":["#R2의 경우 높은 숫자가 좋고,\n","MAE,MSE,RMSE 이런것들은 낮은 숫자가 좋은 것임! ->오차가 줄어야 좋은거니까"],"metadata":{"id":"Qhf1NxofX8qe"}},{"cell_type":"markdown","source":["## 예측 및 csv 제출"],"metadata":{"id":"vENsjupLDUF9"}},{"cell_type":"code","source":["test.head()"],"metadata":{"id":"0-ycPId6ni4q","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1732002348141,"user_tz":-540,"elapsed":12,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"17a42511-a22f-44cf-af6a-17da57a5d0bc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   neighbourhood_group  neighbourhood  latitude  longitude  room_type  \\\n","0                    2            191  40.75965  -73.98652          0   \n","1                    1             13  40.68062  -73.94418          0   \n","2                    1            214  40.70665  -73.94061          0   \n","3                    1             13  40.68427  -73.95460          1   \n","4                    2             94  40.82028  -73.95381          1   \n","\n","   minimum_nights  number_of_reviews  reviews_per_month  \\\n","0              29                  0               0.00   \n","1              30                  1               0.75   \n","2               4                 50               0.51   \n","3               1                 18               3.33   \n","4               1                  3               0.08   \n","\n","   calculated_host_listings_count  availability_365  \n","0                             327               338  \n","1                               6               284  \n","2                               1               331  \n","3                               1                16  \n","4                               1                 0  "],"text/html":["\n","  <div id=\"df-457e327a-ce77-44f2-a031-23dcff0bb7d0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>neighbourhood_group</th>\n","      <th>neighbourhood</th>\n","      <th>latitude</th>\n","      <th>longitude</th>\n","      <th>room_type</th>\n","      <th>minimum_nights</th>\n","      <th>number_of_reviews</th>\n","      <th>reviews_per_month</th>\n","      <th>calculated_host_listings_count</th>\n","      <th>availability_365</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2</td>\n","      <td>191</td>\n","      <td>40.75965</td>\n","      <td>-73.98652</td>\n","      <td>0</td>\n","      <td>29</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>327</td>\n","      <td>338</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>13</td>\n","      <td>40.68062</td>\n","      <td>-73.94418</td>\n","      <td>0</td>\n","      <td>30</td>\n","      <td>1</td>\n","      <td>0.75</td>\n","      <td>6</td>\n","      <td>284</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>214</td>\n","      <td>40.70665</td>\n","      <td>-73.94061</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>50</td>\n","      <td>0.51</td>\n","      <td>1</td>\n","      <td>331</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>13</td>\n","      <td>40.68427</td>\n","      <td>-73.95460</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>18</td>\n","      <td>3.33</td>\n","      <td>1</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2</td>\n","      <td>94</td>\n","      <td>40.82028</td>\n","      <td>-73.95381</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0.08</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-457e327a-ce77-44f2-a031-23dcff0bb7d0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-457e327a-ce77-44f2-a031-23dcff0bb7d0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-457e327a-ce77-44f2-a031-23dcff0bb7d0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7e5a0320-6b47-44fe-8877-f71ff1451338\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7e5a0320-6b47-44fe-8877-f71ff1451338')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7e5a0320-6b47-44fe-8877-f71ff1451338 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"test","summary":"{\n  \"name\": \"test\",\n  \"rows\": 9779,\n  \"fields\": [\n    {\n      \"column\": \"neighbourhood_group\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1,\n          4,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"neighbourhood\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 68,\n        \"min\": 0,\n        \"max\": 220,\n        \"num_unique_values\": 201,\n        \"samples\": [\n          210,\n          64,\n          76\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"latitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.05484518645399957,\n        \"min\": 40.50641,\n        \"max\": 40.91169,\n        \"num_unique_values\": 7590,\n        \"samples\": [\n          40.7007,\n          40.8084,\n          40.71558\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"longitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.04635956528665533,\n        \"min\": -74.24285,\n        \"max\": -73.72173000000001,\n        \"num_unique_values\": 6667,\n        \"samples\": [\n          -73.91317,\n          -73.9478,\n          -73.82138\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"room_type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"minimum_nights\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23,\n        \"min\": 1,\n        \"max\": 1250,\n        \"num_unique_values\": 72,\n        \"samples\": [\n          3,\n          210,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"number_of_reviews\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 44,\n        \"min\": 0,\n        \"max\": 629,\n        \"num_unique_values\": 273,\n        \"samples\": [\n          10,\n          229,\n          49\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"reviews_per_month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.592042208656056,\n        \"min\": 0.0,\n        \"max\": 27.95,\n        \"num_unique_values\": 685,\n        \"samples\": [\n          1.71,\n          3.27,\n          2.76\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"calculated_host_listings_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 32,\n        \"min\": 1,\n        \"max\": 327,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          20,\n          39,\n          34\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"availability_365\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 132,\n        \"min\": 0,\n        \"max\": 365,\n        \"num_unique_values\": 366,\n        \"samples\": [\n          92,\n          337,\n          315\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":132}]},{"cell_type":"code","source":["pred = model.predict(test)"],"metadata":{"id":"mCrS14SE_fS9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pd.DataFrame({'id':test_id, 'output':pred}).to_csv(\"00000.csv\", index=False)"],"metadata":{"id":"S33nhYTnTkG2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pd.read_csv(\"00000.csv\")"],"metadata":{"id":"SnYJTfZ__UFR","colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"status":"ok","timestamp":1732002348141,"user_tz":-540,"elapsed":10,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"4067140c-12dd-429e-a2c0-f217301c855c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            id     output\n","0     34323697  349.51810\n","1     29927138  143.75856\n","2       120362  182.47460\n","3     31838301   64.46919\n","4      7244824   65.02736\n","...        ...        ...\n","9774  15359119   82.18585\n","9775  23565653  110.44962\n","9776   9920191  137.66054\n","9777   4792342  149.63538\n","9778  22230294  223.62268\n","\n","[9779 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-927f1330-cd38-47fa-b378-3486896e95f0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>output</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>34323697</td>\n","      <td>349.51810</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>29927138</td>\n","      <td>143.75856</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>120362</td>\n","      <td>182.47460</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>31838301</td>\n","      <td>64.46919</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>7244824</td>\n","      <td>65.02736</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>9774</th>\n","      <td>15359119</td>\n","      <td>82.18585</td>\n","    </tr>\n","    <tr>\n","      <th>9775</th>\n","      <td>23565653</td>\n","      <td>110.44962</td>\n","    </tr>\n","    <tr>\n","      <th>9776</th>\n","      <td>9920191</td>\n","      <td>137.66054</td>\n","    </tr>\n","    <tr>\n","      <th>9777</th>\n","      <td>4792342</td>\n","      <td>149.63538</td>\n","    </tr>\n","    <tr>\n","      <th>9778</th>\n","      <td>22230294</td>\n","      <td>223.62268</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>9779 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-927f1330-cd38-47fa-b378-3486896e95f0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-927f1330-cd38-47fa-b378-3486896e95f0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-927f1330-cd38-47fa-b378-3486896e95f0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a06226bc-14c4-47a6-a3f1-f15d5e806f1c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a06226bc-14c4-47a6-a3f1-f15d5e806f1c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a06226bc-14c4-47a6-a3f1-f15d5e806f1c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 9779,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11043857,\n        \"min\": 5203,\n        \"max\": 36485431,\n        \"num_unique_values\": 9779,\n        \"samples\": [\n          16408202,\n          26370425,\n          10307009\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"output\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 168.01509743975163,\n        \"min\": -301.04782,\n        \"max\": 8546.967,\n        \"num_unique_values\": 9698,\n        \"samples\": [\n          145.25102,\n          75.10934,\n          54.564022\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":135}]},{"cell_type":"code","source":[],"metadata":{"id":"bj6NRM1d_7Rl"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##정리"],"metadata":{"id":"CeJ_BK2KDX6Z"}},{"cell_type":"code","source":["y_test = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/main/p2/ab_nyc/y_test.csv\")\n","print(r2_score(y_test, pred))"],"metadata":{"id":"7VV1wp7zPkUA","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1732002350234,"user_tz":-540,"elapsed":380,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"6a77b391-346e-42ff-d421-ae30dab9da41"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["-0.10459697246551514\n"]}]}]}