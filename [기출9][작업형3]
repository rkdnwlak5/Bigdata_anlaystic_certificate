{"cells":[{"cell_type":"markdown","metadata":{"id":"vcwhgHc13-Gs"},"source":["## 작업형3"]},{"cell_type":"markdown","metadata":{"id":"5JYhL_JT3vMB"},"source":["## 문제1. 다중 선형 회귀\n","주어진 데이터에서 id를 기준으로 다음과 같이 데이터를 분할하여 아래 소문제를 해결한다.\n","- train 데이터: 1 ≤ id ≤ 140\n","- test 데이터: id > 140\n","\n","### 문제1-1\n","train 데이터에서 c1, c2, c3, c4, c5를 독립변수로, design을 종속변수로 하는 다중 회귀모형을 적합한 후, 절편을 제외한 독립변수 중 p-value가 0.05보다 작은 변수의 개수를 구하시오."]},{"cell_type":"markdown","source":[],"metadata":{"id":"LPR_17Y9AX_A"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":303,"status":"ok","timestamp":1749863732487,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"},"user_tz":-540},"id":"LZUmEixt3uq_","outputId":"def1a458-34e4-44f8-9b74-b7ebe8e58638"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   id     design        c1        c2        c3        c4        c5\n","0   1  58.962471  0.374540  0.642032  0.103124  0.168935  0.707239\n","1   2  42.006534  0.950714  0.084140  0.902553  0.278590  0.152539\n","2   3  55.831980  0.731994  0.161629  0.505252  0.177010  0.576288\n","3   4  64.458592  0.598658  0.898554  0.826457  0.088703  0.606715\n","4   5  61.342792  0.156019  0.606429  0.320050  0.120636  0.424131"],"text/html":["\n","  <div id=\"df-73c5ab01-7042-40be-b72e-b411ddfe82cc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>design</th>\n","      <th>c1</th>\n","      <th>c2</th>\n","      <th>c3</th>\n","      <th>c4</th>\n","      <th>c5</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>58.962471</td>\n","      <td>0.374540</td>\n","      <td>0.642032</td>\n","      <td>0.103124</td>\n","      <td>0.168935</td>\n","      <td>0.707239</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>42.006534</td>\n","      <td>0.950714</td>\n","      <td>0.084140</td>\n","      <td>0.902553</td>\n","      <td>0.278590</td>\n","      <td>0.152539</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>55.831980</td>\n","      <td>0.731994</td>\n","      <td>0.161629</td>\n","      <td>0.505252</td>\n","      <td>0.177010</td>\n","      <td>0.576288</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>64.458592</td>\n","      <td>0.598658</td>\n","      <td>0.898554</td>\n","      <td>0.826457</td>\n","      <td>0.088703</td>\n","      <td>0.606715</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>61.342792</td>\n","      <td>0.156019</td>\n","      <td>0.606429</td>\n","      <td>0.320050</td>\n","      <td>0.120636</td>\n","      <td>0.424131</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-73c5ab01-7042-40be-b72e-b411ddfe82cc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-73c5ab01-7042-40be-b72e-b411ddfe82cc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-73c5ab01-7042-40be-b72e-b411ddfe82cc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-35d21c73-84da-494d-9d3e-99cfc231832d\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-35d21c73-84da-494d-9d3e-99cfc231832d')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-35d21c73-84da-494d-9d3e-99cfc231832d button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 200,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 57,\n        \"min\": 1,\n        \"max\": 200,\n        \"num_unique_values\": 200,\n        \"samples\": [\n          96,\n          16,\n          31\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"design\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.35444853228563,\n        \"min\": 36.2603255598741,\n        \"max\": 81.09858562195613,\n        \"num_unique_values\": 200,\n        \"samples\": [\n          73.6291382502057,\n          66.90586033435875,\n          61.18478768529785\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"c1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.29489143117437355,\n        \"min\": 0.0055221171236023,\n        \"max\": 0.9868869366005172,\n        \"num_unique_values\": 200,\n        \"samples\": [\n          0.4937955963643907,\n          0.1834045098534338,\n          0.6075448519014384\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"c2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.29300119186391016,\n        \"min\": 0.0050615838462186,\n        \"max\": 0.9905051420006732,\n        \"num_unique_values\": 200,\n        \"samples\": [\n          0.5222432600548044,\n          0.2372490874968,\n          0.7948113035416484\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"c3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.30730879410004874,\n        \"min\": 0.0108376514802983,\n        \"max\": 0.9997176732861306,\n        \"num_unique_values\": 200,\n        \"samples\": [\n          0.3533522280260528,\n          0.4484455219783197,\n          0.1429916820528358\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"c4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.27883458308491665,\n        \"min\": 0.0181101838208405,\n        \"max\": 0.9899602323899452,\n        \"num_unique_values\": 200,\n        \"samples\": [\n          0.6106200424416326,\n          0.9208724005318132,\n          0.7133495858845524\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"c5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.285332799641426,\n        \"min\": 0.0046320230046028,\n        \"max\": 0.9968742518459474,\n        \"num_unique_values\": 200,\n        \"samples\": [\n          0.2049842954158209,\n          0.5188380571260721,\n          0.2246048229399819\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":2}],"source":["import pandas as pd\n","df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/refs/heads/main/p4/9_3/design.csv\")\n","df.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"JTE8w3_KggLG"},"outputs":[],"source":["#적합하다 = 학습시키다"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":139,"status":"ok","timestamp":1749863734606,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"},"user_tz":-540},"id":"BsibMNTr3yR5","outputId":"93938010-b9e3-4f5e-d132-70790d5b1f4b"},"outputs":[{"output_type":"stream","name":"stdout","text":["                            OLS Regression Results                            \n","==============================================================================\n","Dep. Variable:                 design   R-squared:                       0.266\n","Model:                            OLS   Adj. R-squared:                  0.238\n","Method:                 Least Squares   F-statistic:                     9.697\n","Date:                Sat, 14 Jun 2025   Prob (F-statistic):           6.37e-08\n","Time:                        01:15:34   Log-Likelihood:                -468.72\n","No. Observations:                 140   AIC:                             949.4\n","Df Residuals:                     134   BIC:                             967.1\n","Df Model:                           5                                         \n","Covariance Type:            nonrobust                                         \n","==============================================================================\n","                 coef    std err          t      P>|t|      [0.025      0.975]\n","------------------------------------------------------------------------------\n","Intercept     53.0220      2.294     23.112      0.000      48.485      57.559\n","c1            -4.9403      2.008     -2.460      0.015      -8.912      -0.969\n","c2            11.3795      2.045      5.564      0.000       7.335      15.424\n","c3             2.6960      1.920      1.404      0.163      -1.101       6.493\n","c4             5.7978      2.176      2.664      0.009       1.494      10.102\n","c5            -1.5018      2.067     -0.726      0.469      -5.590       2.587\n","==============================================================================\n","Omnibus:                        3.969   Durbin-Watson:                   2.052\n","Prob(Omnibus):                  0.137   Jarque-Bera (JB):                3.019\n","Skew:                           0.227   Prob(JB):                        0.221\n","Kurtosis:                       2.441   Cond. No.                         7.68\n","==============================================================================\n","\n","Notes:\n","[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n","3\n"]}],"source":["# 1) train, test 데이터 분리\n","#최소제곱법 ols 사용\n","\n","train = df[df['id'] <=140].copy()\n","test = df[df['id'] >140].copy()\n","train\n","\n","# 2) 전체 변수 사용 회귀분석\n","from statsmodels.formula.api import ols\n","model = ols('design ~ c1 + c2+ c3+ c4 +c5', data = train).fit()\n","print(model.summary())\n","\n","\n","# 3) 상수항(Intercept)은 제외하고, p-value가 0.05보다 작은 독립변수의 개수를 계산\n","\n","#3개 -> 눈으로 세는걸 추천 but 공부를 위해 코드는 참고해라\n","\n","print((model.pvalues[1:] < 0.05).sum())"]},{"cell_type":"markdown","metadata":{"id":"iVO72oab4G95"},"source":["### 문제1-2\n","문제 1-1에서 적합한 회귀모형의 결과를 바탕으로, p-value가 0.05 이하인 유의한 독립변수만을 선택하여 새로운 다중 회귀모형을 적합한 후, train 데이터에서 design의 예측값을 산출하고 예측값과 실제 design 값 사이의 피어슨 상관계수를 반올림하여 소수 셋째 자리까지 계산하시오."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":39,"status":"ok","timestamp":1749863737024,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"},"user_tz":-540},"id":"eI1dBjIR4C14","outputId":"7c93d6c7-5f91-4539-8bdc-290d3e5142d6"},"outputs":[{"output_type":"stream","name":"stdout","text":["0.501\n"]}],"source":["# 방법1\n","# 1) 유의한 변수만 사용한 회귀 분석\n","#적합한 회귀모형 - >p_value 가 0.05 이하인 애들!\n","from statsmodels.formula.api import ols\n","model = ols('design ~ c1+ c2+ c4', data=train).fit()\n","\n","# 2) train 데이터에서 design의 예측\n","train['pred_design'] = model.predict(train)\n","train\n","# 3) 피어슨 상관계수 계산 -> 추천\n","result = train['design'].corr(train['pred_design'])\n","print(round(result,3))\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":27,"status":"ok","timestamp":1749807140037,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"},"user_tz":-540},"id":"6aHhUn5n4PgL","outputId":"8ea0865a-1eaa-4800-f015-3613d58a3e51"},"outputs":[{"name":"stdout","output_type":"stream","text":["0.501\n"]}],"source":["# 방법2(추가tip)\n","\n","# 1) 유의한 변수만 사용한 회귀 분석\n","from statsmodels.formula.api import ols\n","model = ols('design ~ c1+ c2+ c4', data=train).fit()\n","\n","\n","# 2) 학습데이터에서 예측값 계산\n","\n","train['pred_design'] = model.predict(train)\n","train\n","# 3) 예측값과 실제 design 값 사이의 피어슨 상관계수 계산 ->피어슨을 쓰는방법\n","from scipy import stats\n","stats , p = stats.pearsonr(train['design'], train['pred_design'])\n","print(round(stats,3))\n"]},{"cell_type":"markdown","metadata":{"id":"Pry4hvTT4vMC"},"source":["### 문제1-3\n","문제 1-2에서 적합한 회귀모형을 이용하여 test 데이터에서 design의 예측값을 산출한 후, 예측값과 실제 design 값 사이의 RMSE (Root Mean Squared Error)를 반올림하여 소수 셋째 자리까지 계산하시오."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":60,"status":"ok","timestamp":1749863742012,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"},"user_tz":-540},"id":"Cep42Foe4RpZ","outputId":"07bc58a2-e46f-4595-9f4a-6b7bc5b6e6ae"},"outputs":[{"output_type":"stream","name":"stdout","text":["                            OLS Regression Results                            \n","==============================================================================\n","Dep. Variable:                 design   R-squared:                       0.251\n","Model:                            OLS   Adj. R-squared:                  0.234\n","Method:                 Least Squares   F-statistic:                     15.17\n","Date:                Sat, 14 Jun 2025   Prob (F-statistic):           1.43e-08\n","Time:                        01:15:42   Log-Likelihood:                -470.14\n","No. Observations:                 140   AIC:                             948.3\n","Df Residuals:                     136   BIC:                             960.0\n","Df Model:                           3                                         \n","Covariance Type:            nonrobust                                         \n","==============================================================================\n","                 coef    std err          t      P>|t|      [0.025      0.975]\n","------------------------------------------------------------------------------\n","Intercept     53.6637      1.808     29.686      0.000      50.089      57.239\n","c1            -4.8767      2.010     -2.426      0.017      -8.852      -0.901\n","c2            11.1863      2.039      5.487      0.000       7.154      15.218\n","c4             6.2272      2.159      2.885      0.005       1.958      10.496\n","==============================================================================\n","Omnibus:                        3.056   Durbin-Watson:                   1.972\n","Prob(Omnibus):                  0.217   Jarque-Bera (JB):                2.947\n","Skew:                           0.296   Prob(JB):                        0.229\n","Kurtosis:                       2.606   Cond. No.                         5.96\n","==============================================================================\n","\n","Notes:\n","[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/pandas/core/arraylike.py:399: RuntimeWarning: invalid value encountered in sqrt\n","  result = getattr(ufunc, method)(*inputs, **kwargs)\n"]},{"output_type":"execute_result","data":{"text/plain":["140         NaN\n","141    3.329768\n","142    0.277730\n","143    2.847468\n","144         NaN\n","145    4.004359\n","146    2.400016\n","147         NaN\n","148         NaN\n","149    1.822089\n","150    2.055581\n","151         NaN\n","152    3.881743\n","153    4.350245\n","154         NaN\n","155    2.634319\n","156    2.887145\n","157         NaN\n","158    1.143296\n","159    2.233330\n","160    3.537162\n","161         NaN\n","162         NaN\n","163    1.479768\n","164         NaN\n","165    2.894420\n","166    3.890304\n","167    3.001276\n","168    1.980657\n","169         NaN\n","170    1.537522\n","171    0.666720\n","172    3.352461\n","173         NaN\n","174    0.967232\n","175         NaN\n","176         NaN\n","177         NaN\n","178         NaN\n","179         NaN\n","180         NaN\n","181         NaN\n","182         NaN\n","183         NaN\n","184    1.980411\n","185         NaN\n","186    2.277578\n","187         NaN\n","188    1.450872\n","189    3.808315\n","190    1.815948\n","191    2.233450\n","192         NaN\n","193    2.543664\n","194    2.444744\n","195    4.222245\n","196    2.093331\n","197    4.354242\n","198    3.552039\n","199         NaN\n","dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>140</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>141</th>\n","      <td>3.329768</td>\n","    </tr>\n","    <tr>\n","      <th>142</th>\n","      <td>0.277730</td>\n","    </tr>\n","    <tr>\n","      <th>143</th>\n","      <td>2.847468</td>\n","    </tr>\n","    <tr>\n","      <th>144</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <td>4.004359</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>2.400016</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>1.822089</td>\n","    </tr>\n","    <tr>\n","      <th>150</th>\n","      <td>2.055581</td>\n","    </tr>\n","    <tr>\n","      <th>151</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>152</th>\n","      <td>3.881743</td>\n","    </tr>\n","    <tr>\n","      <th>153</th>\n","      <td>4.350245</td>\n","    </tr>\n","    <tr>\n","      <th>154</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>155</th>\n","      <td>2.634319</td>\n","    </tr>\n","    <tr>\n","      <th>156</th>\n","      <td>2.887145</td>\n","    </tr>\n","    <tr>\n","      <th>157</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>158</th>\n","      <td>1.143296</td>\n","    </tr>\n","    <tr>\n","      <th>159</th>\n","      <td>2.233330</td>\n","    </tr>\n","    <tr>\n","      <th>160</th>\n","      <td>3.537162</td>\n","    </tr>\n","    <tr>\n","      <th>161</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>162</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>163</th>\n","      <td>1.479768</td>\n","    </tr>\n","    <tr>\n","      <th>164</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>165</th>\n","      <td>2.894420</td>\n","    </tr>\n","    <tr>\n","      <th>166</th>\n","      <td>3.890304</td>\n","    </tr>\n","    <tr>\n","      <th>167</th>\n","      <td>3.001276</td>\n","    </tr>\n","    <tr>\n","      <th>168</th>\n","      <td>1.980657</td>\n","    </tr>\n","    <tr>\n","      <th>169</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>170</th>\n","      <td>1.537522</td>\n","    </tr>\n","    <tr>\n","      <th>171</th>\n","      <td>0.666720</td>\n","    </tr>\n","    <tr>\n","      <th>172</th>\n","      <td>3.352461</td>\n","    </tr>\n","    <tr>\n","      <th>173</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>174</th>\n","      <td>0.967232</td>\n","    </tr>\n","    <tr>\n","      <th>175</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>176</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>177</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>178</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>179</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>180</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>181</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>182</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>183</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>184</th>\n","      <td>1.980411</td>\n","    </tr>\n","    <tr>\n","      <th>185</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>186</th>\n","      <td>2.277578</td>\n","    </tr>\n","    <tr>\n","      <th>187</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>188</th>\n","      <td>1.450872</td>\n","    </tr>\n","    <tr>\n","      <th>189</th>\n","      <td>3.808315</td>\n","    </tr>\n","    <tr>\n","      <th>190</th>\n","      <td>1.815948</td>\n","    </tr>\n","    <tr>\n","      <th>191</th>\n","      <td>2.233450</td>\n","    </tr>\n","    <tr>\n","      <th>192</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>193</th>\n","      <td>2.543664</td>\n","    </tr>\n","    <tr>\n","      <th>194</th>\n","      <td>2.444744</td>\n","    </tr>\n","    <tr>\n","      <th>195</th>\n","      <td>4.222245</td>\n","    </tr>\n","    <tr>\n","      <th>196</th>\n","      <td>2.093331</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>4.354242</td>\n","    </tr>\n","    <tr>\n","      <th>198</th>\n","      <td>3.552039</td>\n","    </tr>\n","    <tr>\n","      <th>199</th>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":5}],"source":["# 1) test데이터에서 design값 계산\n","from statsmodels.formula.api import ols\n","model = ols('design ~ c1 + c2 + c4',data = train).fit()  #여기서도 학습은 train 데이터로 해야함! test데이터로 하면안됨!\n","print(model.summary())\n","\n","# 예측값\n","test['t_pred_design'] = model.predict(test)    #test데이터에 design이 들어가 있어도 3유형에서는 상관없음!!\n","test.head(3)\n","# 2) test데이터에 대한 RMSE 계산\n","# import numpy as np\n","# np.sqrt(test['t_pred_design'] - test['design'])\n","\n","#numpy로만 풀려면\n","import numpy as np\n","rmse = np.sqrt(np.mean((test['design'] - test['pred_design']) ** 2))\n","print(round(rmse, 3))\n","\n","#sklearn으로 푸는법\n","from sklearn.metrics import root_mean_squared_error\n","rmse= root_mean_squared_error\n","result = rmse(test['design'], test['t_pred_design'])\n","print(round(result,3))\n","#정답 : 8.488336110545161\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1iO6bTlg439W"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"TYho2qrK44Hd"},"source":["## 문제2. 로지스틱 회귀\n","- 종속 변수 (타겟 변수): Churn (고객 이탈 여부; 1: 이탈, 0: 유지)\n","- 독립 변수 (설명 변수):\n","    - MonthlyCharges (월 사용 요금)\n","    - CustomerTenure (고객 유지 기간)\n","    - HasPhoneService (전화 서비스 이용 여부)\n","    - HasTechInsurance (기술 보험 가입 여부)\n","    \n","### 문제2-1\n","주어진 데이터를 사용하여 고객 이탈(Churn)을 예측하는 로지스틱 회귀 모형을 적합한 후, MonthlyCharges 변수의 p-value를 반올림하여 소수 셋째 자리까지 구하시오."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":1498,"status":"ok","timestamp":1750245839323,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"},"user_tz":-540},"id":"ES2FqUr45akv","outputId":"0afd0c2e-f7df-4e8a-cea6-f1934143bbf3"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   CustomerID  MonthlyCharges  CustomerTenure  HasPhoneService  \\\n","0           1       77.450712              47                1   \n","1           2       67.926035              68                1   \n","2           3       79.715328              45                0   \n","3           4       92.845448               2                1   \n","4           5       66.487699              27                1   \n","\n","   HasTechInsurance  Churn  \n","0                 1      1  \n","1                 1      0  \n","2                 1      1  \n","3                 0      1  \n","4                 1      0  "],"text/html":["\n","  <div id=\"df-9a4266bc-8b0a-4135-972d-496b7b3f117e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CustomerID</th>\n","      <th>MonthlyCharges</th>\n","      <th>CustomerTenure</th>\n","      <th>HasPhoneService</th>\n","      <th>HasTechInsurance</th>\n","      <th>Churn</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>77.450712</td>\n","      <td>47</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>67.926035</td>\n","      <td>68</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>79.715328</td>\n","      <td>45</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>92.845448</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>66.487699</td>\n","      <td>27</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9a4266bc-8b0a-4135-972d-496b7b3f117e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9a4266bc-8b0a-4135-972d-496b7b3f117e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9a4266bc-8b0a-4135-972d-496b7b3f117e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-92aa9313-12dd-4030-bec1-c3f9311cd9f1\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-92aa9313-12dd-4030-bec1-c3f9311cd9f1')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-92aa9313-12dd-4030-bec1-c3f9311cd9f1 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 80,\n  \"fields\": [\n    {\n      \"column\": \"CustomerID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23,\n        \"min\": 1,\n        \"max\": 80,\n        \"num_unique_values\": 80,\n        \"samples\": [\n          31,\n          1,\n          23\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MonthlyCharges\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.362247955438471,\n        \"min\": 30.703823438653835,\n        \"max\": 97.78417276763406,\n        \"num_unique_values\": 80,\n        \"samples\": [\n          60.97440081655905,\n          77.45071229516849,\n          71.01292307031886\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CustomerTenure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19,\n        \"min\": 1,\n        \"max\": 72,\n        \"num_unique_values\": 50,\n        \"samples\": [\n          72,\n          7,\n          54\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HasPhoneService\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HasTechInsurance\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Churn\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":1}],"source":["import pandas as pd\n","df = pd.read_csv(\"https://raw.githubusercontent.com/lovedlim/inf/refs/heads/main/p4/9_3/retention.csv\")\n","df.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3777,"status":"ok","timestamp":1750245843103,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"},"user_tz":-540},"id":"Y7V_lbC55YrD","outputId":"59f3d144-e6fc-452e-a83b-fcb46950c411"},"outputs":[{"output_type":"stream","name":"stdout","text":["Optimization terminated successfully.\n","         Current function value: 0.582234\n","         Iterations 6\n","                           Logit Regression Results                           \n","==============================================================================\n","Dep. Variable:                  Churn   No. Observations:                   80\n","Model:                          Logit   Df Residuals:                       75\n","Method:                           MLE   Df Model:                            4\n","Date:                Wed, 18 Jun 2025   Pseudo R-squ.:                  0.1585\n","Time:                        11:24:03   Log-Likelihood:                -46.579\n","converged:                       True   LL-Null:                       -55.352\n","Covariance Type:            nonrobust   LLR p-value:                  0.001513\n","====================================================================================\n","                       coef    std err          z      P>|z|      [0.025      0.975]\n","------------------------------------------------------------------------------------\n","Intercept           -4.4731      1.437     -3.114      0.002      -7.289      -1.657\n","MonthlyCharges       0.0503      0.019      2.640      0.008       0.013       0.088\n","CustomerTenure       0.0428      0.014      3.016      0.003       0.015       0.071\n","HasPhoneService     -0.3558      0.525     -0.677      0.498      -1.386       0.674\n","HasTechInsurance    -0.4868      0.518     -0.940      0.347      -1.502       0.529\n","====================================================================================\n","0.008293105744239599\n"]}],"source":["from statsmodels.formula.api import logit\n","\n","# 1) 로지스틱 회귀분석 수행\n","from statsmodels.formula.api import logit\n","model = logit('Churn ~ MonthlyCharges\t+CustomerTenure\t+HasPhoneService\t+HasTechInsurance', data=df).fit()\n","# 2) 학습된 모델의 회귀 분석 결과 출력\n","print(model.summary())\n","\n","\n","# 3) 'MonthlyCharges' 변수의 p-value 확인\n","#정답0.008\n","print(model.pvalues['MonthlyCharges'])\n"]},{"cell_type":"markdown","metadata":{"id":"RnmiGn3u5yk3"},"source":["### 문제2-2\n","적합한 로지스틱 회귀모형을 바탕으로, 전화 서비스를 받지 않은 고객이 이탈할 확률 대비 전화 서비스를 받은 고객이 이탈할 확률에 대한 오즈비(Odds Ratio)를 계산하시오. (반올림하여 소수 셋째 자리까지 계산)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":12,"status":"ok","timestamp":1750245846840,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"},"user_tz":-540},"id":"Jd3mVDtY5isO","outputId":"45264bcd-a4ba-4aa0-f970-783d05f90c7e"},"outputs":[{"output_type":"stream","name":"stdout","text":["0.701\n"]}],"source":["# 1) 오즈비 계산\n","#위 문제는 어렵게 생각하지 말고 그냥 전화서비스에 대한 오즈비를 구하라 임!\n","\n","import numpy as np\n","result = np.exp(model.params['HasPhoneService'])\n","\n","print(round(result,3))\n","#정답 0.701"]},{"cell_type":"markdown","metadata":{"id":"eL0IZEEy6He8"},"source":["### 문제2-3\n","적합한 로지스틱 회귀모형을 이용하여 각 고객의 이탈 확률을 예측한 후, 예측된 이탈 확률이 0.3 초과하는 고객의 수를 구하시오."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0-m6yrQf6JOb","executionInfo":{"status":"ok","timestamp":1749820706306,"user_tz":-540,"elapsed":25,"user":{"displayName":"정인승[PTKSL - JEONG IN SEONG] ‍","userId":"11777570631850391267"}},"outputId":"2849b636-e039-4dd8-c69d-0fd855ca188f"},"outputs":[{"output_type":"stream","name":"stdout","text":["65\n"]}],"source":["#적합한 로지스틱 회귀모형이라 함은 앞에서 학습시킨 회귀모형을 이용하라는 뜻임 즉) 다시 logit써서 할 필요가 없음!\n","#★★★★★ 회귀는 train test 가있어서 predict에 test 넣으면 되는데!. logit에서는 그냥 원본 df를 넣으면 됨!!!\n","# 1) 각 고객의 이탈 확률을 예측\n","cond = model.predict(df)\n","\n","# 2) 예측한 이탈 확률이 0.3 초과하는 고객의 수\n","result2 = cond>0.3\n","print(result2.sum())"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"O0cr_K14U1hx"},"outputs":[],"source":[]}],"metadata":{"colab":{"provenance":[{"file_id":"13sIwFNKXnSgcNt3Qkpbvtyd_9cjMRjwQ","timestamp":1749774916595}]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}